# //  ModelSim SE 6.2g Feb 21 2007 Linux 3.10.0-957.5.1.el7.x86_64
# //
# //  Copyright 1991-2007 Mentor Graphics Corporation
# //              All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND 
# //  PROPRIETARY INFORMATION WHICH IS THE PROPERTY
# //  OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS
# //  AND IS SUBJECT TO LICENSE TERMS.
# //
verror 2258
# ** Error: Invalid message number 2258.
%verror 2258
# invalid command name "%verror"
% verror 2258
# invalid command name "%"
verror -2258
verror -all
# 
# common Message # 1:
# 
# 
# common Message # 2:
# A call to the specified C library function failed. This message might be
# followed by another message that gives more information about the problem.
# 
# 
# common Message # 3:
# The specified system call failed. This message might be followed
# by another message that gives more information about the problem.
# 
# 
# common Message # 4:
# Not enough memory was available when a memory allocation was requested.
# If this message was displayed during simulation, check for the following
# conditions to determine where a large amount of memory allocation might
# be occurring:
#   o Large signal or variable arrays in VHDL
#   o Large memories in Verilog
#   o Excessive memory use by textio
#     (readline or writeline not being called to deallocate lines)
#   o Excessive use of VHDL access types where memory is not being freed
#   o FLI or PLI code that is allocating a lot of memory
#   o Rescheduling of the same event(s) which causes event cancellation
#     without advancing time to the point of the cancelled events
# You can use the simulator command "mti_kcmd memstats" at various
# points during simulation to help determine when excessive memory
# allocation occurs.
# Things you can do that may be helpful:
#   o Use the memory locking feature on HP-UX or the memory sharing
#     feature on Solaris.
#   o Use the 64-bit version of ModelSim.
#   o Increase the size of your swap space.
#   o Add memory to your machine.
#   o In the case of event cancellation, you can use the ModelSim GUI
#     to step through your HDL code to see if the same statements are
#     being executed without time being advanced to the point where the
#     previously cancelled events would have occurred. Cancelled events
#     are not removed from the time queue until their scheduled time is
#     reached, thus the memory allocated for cancelled events is not
#     freed until that time.
# 
# 
# common Message # 5:
# This message occurs when an attempt is made to use an invalid pointer
# or a previously deallocated pointer.
# The most common cause of this problem is an incorrect use of TextIO
# objects and functions. In the following example:
#   line_out2 := line_out1;
#   writeline( output1, line_out1 );
#   writeline( output2, line_out2 );
# line_out1 and line_out2 are set to point to the same allocated memory.
# The first writeline function deallocates the memory pointed to by
# line_out1, thereby also deallocating the memory pointed to by line_out2.
# The second writeline function then fails. To write the same output to
# two files, use the following statement to copy the line:
#   line_out2 := new string'(line_out1.all);
# 
# 
# common Message # 7:
# A problem occurred while trying to open the specified file in the
# specified mode. Verify that the path exists and that you have the
# correct permissions in the directory. Also, if any environment variables
# were used in the original specification of the filename, make sure that
# they are set to valid values. This message might be followed by another
# message that gives more information about the problem.
# 
# 
# common Message # 8:
# A problem occurred while trying to read the specified file.
# This message might be followed by another message that gives more
# information about the problem.
# 
# 
# common Message # 9:
# A problem occurred while trying to write the specified file. Verify that
# there is space left on the disk where the file is attempting to be written.
# ModelSim writes to /tmp, the current directory, and to the work directory.
# Make sure that space is available in each of these locations.
# This message might be followed by another message that gives more
# information about the problem.
# 
# 
# common Message # 10:
# A problem occurred while trying to close the specified file.
# This message might be followed by another message that gives more
# information about the problem.
# 
# 
# common Message # 11:
# The specified design unit could not be found in the specified library.
# Verify that the library exists and that the design unit has been
# compiled into it.
# 
# 
# common Message # 12:
# The second design unit has changed (or something that it depends upon
# has changed), requiring it to be recompiled. Since the first design
# unit depends on the second one, the first design unit must be recompiled
# after the second one has been recompiled.
# 
# 
# common Message # 13:
# The second design unit, upon which the first design unit depends, has
# changed and has been recompiled; therefore, the first design unit must
# be recompiled.
# 
# 
# common Message # 14:
# The ini file indicated by the specified environment variable could not
# be found or opened; therefore, the default ini file is used. Verify that
# the ini file path is specified correctly, that it exists, and that you
# have read permission. This message might be followed by another message
# that gives more information about the problem.
# 
# 
# common Message # 15:
# A logical library name must be mapped to a physical directory path in
# order to avoid problems that can occur with a circular dependency or
# with a mapping to a name that is both a logical name and a physical name.
# [DOC: ModelSim Command Reference - vmap command]
# 
# 
# common Message # 16:
# The 'others' clause in the specified ini file refers to that same ini
# file. The 'others' clause should be changed to refer to another ini file
# or it should be removed.
# 
# 
# common Message # 17:
# A chain of one or more 'others' clauses in ini files eventually refers
# back to a file at the beginning of the chain. An example of this is:
# the 'others' clause in modelsim.ini refers to a.ini whose 'others'
# clause refers to b.ini whose 'others' clause refers back to
# modelsim.ini. Fix the 'others' clauses so that they do not create a
# circular dependency.
# 
# 
# common Message # 18:
# The path/file which is pointed to by MGC_LOCATION_MAP does not exist or
# cannot be accessed. Verify that MGC_LOCATION_MAP is set correctly, that
# it includes the name of the location map file, that the path and file
# exist, and that you have the correct permissions for access. This message
# might be followed by another message that gives more information about the
# problem.
# 
# 
# common Message # 19:
# The specified library could not be accessed at the specified location.
# Verify that the directory exists, that it contains the ModelSim library,
# and that you have the correct permissions for accessing it. 
# Also make sure that the _info file in the library has the correct
# access permissions. 
# This message might be followed by another message that gives more information 
# about the problem.
# 
# The vlib command creates ModelSim libraries. The vmap command maps
# logical library names to physical library locations. Use the vmap
# command without arguments to find out how all of your libraries are
# mapped.
# 
# One way this problem can occur is if the mapping for the library in
# your modelsim.ini file contains an environment variable that is not set
# in your environment.
# 
# 
# common Message # 20:
# The specified access cannot be made to the specified file. Verify that
# the file exists and that you have the correct permissions for accessing
# it. This message might be followed by another message that gives more
# information about the problem.
# 
# 
# common Message # 21:
# The value of the specified environment variable could not be found.
# Verify that the environment variable is actually set.
# 
# 
# common Message # 22:
# A call to getcwd() failed. Verify that you have read permission at each
# directory level in the path to your current working directory. If the
# full pathname of your current working directory is longer than the
# specified maximum path length, then email support@model.com and include
# this error message and the full pathname of your current working
# directory. This message might be followed by another message that gives
# more information about the problem.
# 
# 
# common Message # 23:
# A call to chdir() failed for the specified path. Verify that the path
# exists and that you have the correct permissions to access this
# directory. This message might be followed by another message that gives
# more information about the problem.
# 
# 
# common Message # 24:
# A call to getcwd() for the specified path failed. Verify that you have
# read permission at each directory level in this path. If the full
# pathname of this path is longer than the specified maximum path length,
# then email support@model.com and include this error message and the full
# pathname. This message might be followed by another message that gives
# more information about the problem.
# 
# 
# common Message # 25:
# The specified library does not contain an accessible _info file,
# therefore it cannot be referenced as a ModelSim library. Verify that
# the library has been created with the vlib command and that you have
# the correct permissions for accessing it. This message might be
# followed by another message that gives more information about the problem.
# 
# 
# common Message # 26:
# A call to lseek() failed on the specified file. This message might be
# followed by another message that gives more information about the problem.
# 
# 
# common Message # 27:
# A call to mmap() failed on the specified file. This message might be
# followed by another message that gives more information about the problem.
# 
# 
# common Message # 28:
# A call to the specified function failed on the specified file. This
# message might be followed by another message that gives more information
# about the problem.
# 
# Here are some things to check:
# o  Is another process writing to or deleting the file that you are
#    trying to read/write/create?
# o  Are you trying to create/write a file to a disk that is almost full?
# o  Are you experiencing a timeout due to accessing a file across a
#    network?
# o  Are you trying to create/write a very large file (around 2 Gig or
#    more)?  If so, is your system configured for large file support?
# 
# 
# common Message # 29:
# A call to stat() failed on the specified file. Verify that the file
# exists and that you have the correct access permission for all
# directories in the path. This message might be followed by another
# message that gives more information about the problem.
# 
# 
# common Message # 30:
# A lock file could not be created at the specified location because the
# maximum number of files is already locked.
# 
# 
# common Message # 31:
# An unlink() on the specified file failed. This message might be followed
# by another message that gives more information about the problem.
# 
# 
# common Message # 32:
# The specified design unit is not of the expected type. Verify that you
# have specified the correct design unit name and that the design unit
# is of an appropriate type for the operation that you are trying to
# perform.
# 
# 
# common Message # 33:
# Under Windows, file names of the form aux, con, nul, prn, aux.*, con.*,
# nul.*, and prn.* are reserved for use by the OS; therefore, a ModelSim
# library cannot be created with this type of name.
# 
# 
# common Message # 34:
# The specified library cannot be created because it already exists.
# 
# 
# common Message # 35:
# A problem occurred while trying to create the specified directory.
# Verify that the path up to the new directory exists, that you have the
# correct permissions along the full path, and that you have enough disk
# space. This message might be followed by another message that gives more
# information about the problem.
# 
# 
# common Message # 36:
# In order for sm_entity to access a SmartModel, the libsm entry and one
# of the libswift entries in the [lmc] section of the specified project
# file must be uncommented.
# [DOC: ModelSim User's Manual - Logic Modeling SmartModels chapter]
# 
# 
# common Message # 37:
# In order for hm_entity to access a hardware model, the libhm entry and
# one of the libsfi entries in the [lmc] section of the specified project
# file must be uncommented.
# [DOC: ModelSim User's Manual - Logic Modeling hardware models chapter]
# 
# 
# common Message # 38:
# The specified file cannot be found in the specified archive.
# 
# 
# common Message # 39:
# The specified archive file has not been opened.
# 
# 
# common Message # 40:
# An unexpected end-of-file condition was encountered while reading the
# specified archive file.
# 
# 
# common Message # 41:
# There was a problem when trying to rename the specified file in the
# specified mode. Make sure that the path exists and that you have the
# correct permissions in the directory. This message might be followed
# by another message that gives more information about the problem.
# 
# 
# common Message # 42:
# The indicated library exists, but the format of the library is not
# supported by this version of ModelSim. This was probably caused by
# a more recent installation of ModelSim being used to create a library
# that is not backward-compatible with the version of ModelSim currently
# in use.
# 
# 
# common Message # 43:
# This feature is not supported in this version of the product.
# It may require a separate license or a different version.
# 
# 
# common Message # 44:
# A problem occurred while trying to create the specified file. Verify
# that the path exists and that you have the correct permissions in the
# directory. Also, if any environment variables were used in the original
# specification of the filename, make sure that they are set to valid
# values. This message might be followed by another message that gives
# more information about the problem.
# 
# 
# common Message # 45:
# All SystemC modules to be instantiated by HDL design units should be
# exported using the SC_MODULE_EXPORT macro.
# 
# 
# common Message # 46:
# Either the port size is based on a generic value or the port type is not
# supported at the SystemC-HDL boundary. Please refer to the User's Manual
# for details on the supported port types.
# 
# 
# common Message # 47:
# vmake does not support SystemC modules.
# 
# 
# common Message # 48:
# Check your ModelSim installation and make sure your path is set to
# point to the correct location of ModelSim.
# 
# 
# common Message # 49:
# vdel currently does not support deletion of individual SystemC design units.
# Use vdel -allsystemc to delete all SystemC design unit in a given library.
# 
# 
# common Message # 50:
# ModelSim uses the system() call to produce intermediate output.
# The system() call has failed. Please check the logfile for further
# information.
# 
# 
# common Message # 51:
# ModelSim uses the system() call to produce intermediate output.
# The system() call appears to have succeeded, but the expected output
# file does not exist. Usually this means that the command that was
# executed failed in some way, but did not return a non-zero exit status.
# 
# 
# common Message # 52:
# An attempt to suppress a message or change its severity level failed
# because the message number does not correspond to a message in the
# message system.
# 
# 
# common Message # 53:
# An attempt to suppress a message or change its severity level failed
# because its severity level is either Fatal or Internal. Only a message
# whose severity level is Note, Warning, or Error can be suppressed or
# have its severity level changed.
# 
# 
# common Message # 54:
# The total number of unnamed optimized designs that this library can hold
# must be set to an integer value from 1 to 32000.
# 
# 
# common Message # 55:
# Please specify only one scalar type and one vector type.
# 
# 
# common Message # 56:
# The dependency file generated by the "vopt" tool has either been
# removed, is for an older version of the tool or has been corrupted.
# Normally re-running vopt on the design will recreate this file and
# solve the issue.
# 
# 
# common Message # 57:
# The specified library cannot be found or is not valid.  Verify that the
# library pathname exists, that it has been created with the "vlib"
# command, and that you have the correct permissions for accessing it.
# 
# 
# common Message # 58:
# The specified design unit is missing its version string from the
# "_info" file in the library that contains it.  Normally, re-compiling
# the design unit will fix the problem.
# 
# 
# common Message # 59:
# The specified design unit has been recompiled since the last run of
# "vopt".  By default the design will be re-optimized before a new
# simulation is run.
# 
# 
# common Message # 60:
# No additional information is available.
# 
# 
# common Message # 61:
# Inherited verification unit has not been defined.
# 
# 
# common Message # 62:
# No additional information is available.
# 
# 
# common Message # 63:
# No additional information is available.
# 
# 
# common Message # 64:
# The execution of the 0in command failed. Please check the 
# associated error log for more details.
# 
# 
# common Message # 65:
# -0in_options needs an additional argument. Please pass the options needed for the 0in tools with the -0in_options and make sure to have the options in quotes.
# 
# 
# common Message # 66:
# The execution of the executable mentioned in the error message failed. Please check if the expected arguments were being passed to the executable.
# 
# 
# common Message # 67:
# No additional information is available.
# 
# 
# common Message # 68:
# No additional information is available.
# 
# 
# common Message # 69:
# A typedef with a hierarchical name is required to reference a simple
# type identifier within a directly visible interface.
# [DOC: IEEE P-180 LRM - Section 4.9
# 
# 
# common Message # 70:
# Compilation of the C/C++ src files failed. Please check the error log for more details
# 
# 
# common Message # 71:
# Creation of qv_dpi.so failed. Please check the error log for more details.
# 
# 
# common Message # 72:
# The built-in library referenced by the optimized design has changed since
# it was originally created.  Normally this means the ModelSim installation
# directory has changed, or that design-units have been modified or removed
# from the built-in ModelSim libraries.  Typically this should not occur, but
# in the event of getting this error, the design needs to be re-optimized
# with the "vopt" tool.
# 
# 
# common Message # 73:
# 
# 
# common Message # 74:
# 
# 
# common Message # 75:
# 
# 
# common Message # 76:
# 
# 
# common Message # 77:
# 
# 
# common Message # 78:
# 
# 
# common Message # 79:
# 
# 
# common Message # 80:
# 
# 
# common Message # 81:
# 
# 
# common Message # 82:
# 
# 
# common Message # 83:
# 
# 
# common Message # 84:
# 
# 
# common Message # 85:
# 
# 
# common Message # 86:
# 
# 
# common Message # 87:
# 
# 
# common Message # 88:
# 
# 
# common Message # 89:
# Could not verify the operating system being run. Check the ModelSim
# release notes for a list of supported operating systems.
# 
# 
# common Message # 90:
# Check your ModelSim installation or set your path to point to the
# correct location of ModelSim.
# 
# 
# common Message # 91:
# GNU compilers are not supported on HP-UX. Set the compiler path
# to point to the aCC compiler instead.
# 
# 
# common Message # 92:
# Detected improperly formed CppPath variable in modelsim.ini. Point directly at a compiler executable, such as /usr/bin/g++.
# 
# 
# common Message # 93:
# ModelSim requires that aCC version 3.45 be installed at /opt/aCC in order
# to run SystemC designs on HP-UX. Install the compiler.
# 
# 
# common Message # 94:
# The current operating system is not supported.
# 
# 
# common Message # 95:
# ModelSim's SystemC requires that you use a pre-configured g++ compiler.
# Your installation directory is missing the compiler installation.
# Download and install the appropriate tarball from the ftp site.
# 
# 
# common Message # 96:
# 
# 
# common Message # 97:
# 
# 
# common Message # 98:
# 
# 
# common Message # 100:
# Real literal syntax requires that a dot (decimal or base point) be
# present in the mantissa.  A real literal with no dot (i.e., an integer
# literal) is accepted but is not LRM-compliant.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 13.4.1 Decimal literals]
# [DOC: IEEE Std 1076-1993 VHDL LRM - 14.3 Package TEXTIO]
# 
# 
# common Message # 101:
# Real literal syntax requires that the dot (decimal or base point) be
# between two digits.  A dot as the first character of a real literal is
# accepted but is not LRM-compliant.
# 
# 
# common Message # 102:
# Real literal syntax requires that the dot (decimal or base point) be
# between two digits.  A dot as the last character of a real literal is
# accepted but is not LRM-compliant.
# 
# 
# common Message # 103:
# A newline character was found embedded in an extended identifier.
# Since a newline character is a non-graphic character that is also a
# separator, it is treated as terminating the extended identifier just as
# the expected final backslash character would have been.
# 
# 
# common Message # 104:
# No characters were found between the initial and terminal backslash
# characters that delineate the extended identifier.
# 
# 
# common Message # 105:
# Only graphic characters are allowed between the initial and terminal
# backslash characters that delineate an extended identifier.
# 
# 
# common Message # 106:
# No characters were found after the initial backslash character that
# begins an escaped identifier.
# 
# 
# common Message # 107:
# An escaped identifier must contain only printable characters.
# 
# 
# common Message # 108:
# No terminating backslash character was found when parsing an extended
# identifier.
# 
# 
# common Message # 109:
# Abstract literal syntax requires that a dot (decimal or base point),
# when it appears, be between two digits.
# 
# 
# common Message # 110:
# Abstract literal syntax requires that an underline character, when it
# appears, be between two digits.
# 
# 
# common Message # 111:
# No digits or extended digits were present when parsing a number
# appearing in a abstract literal.
# 
# 
# common Message # 112:
# Number appearing in an abstract literal must terminate with a digit.
# 
# 
# common Message # 113:
# Based literal syntax requires that the mantissa part be bracketed by
# an initial and terminating '#' or ':' character; both occurrences must
# be the same.
# 
# 
# common Message # 114:
# [13.4.1 Decimal literals], line 196:
#   An exponent for an integer literal must not have a minus sign.
# [13.4.2 Based literals], line 220:
#   An exponent for a based integer literal must not have a minus sign.
# 
# 
# common Message # 115:
# The syntax does not allow a decimal point in the digits of the
# exponent part of an abstract literal, and there is no other legal
# interpretation that allows a decimal point where it was found.
# 
# 
# common Message # 116:
# The digit is not legal in the literal in which it appears because its
# value is greater than or equal to the base of the literal.
# 
# 
# common Message # 117:
# The digit found in an abstract literal is neither a digit nor an
# extended digit.
# 
# 
# common Message # 118:
# [13.4.2 Based literals], line 205:
#   The base must be at least two and at most sixteen.
# 
# 
# common Message # 119:
# The integer value cannot be contained in a signed 32-bit integer.
# 
# 
# common Message # 120:
# No additional information
# 
# common Message # 121:
# No additional information
# 
# common Message # 122:
# No additional information
# 
# common Message # 123:
# No additional information
# 
# common Message # 124:
# No additional information
# 
# common Message # 125:
# The shared library has been built on a machine incompatible with 
# the current machine. Please use comptabile machines to compile, link 
# and simulate the design.
# 
# 
# common Message # 129:
# ModelSim uses the system() call to produce intermediate output.
# The system() call has failed. Please check the logfile for further
# information.
# 
# 
# vcom Message # 1001:
# For the -skip and -just options, one or more of the following design
# unit indications must be specified:
#   e or E - entities
#   a or A - architectures
#   p or P - packages
#   b or B - package bodies
#   c or C - configurations
# [DOC: ModelSim Command Reference - vcom command]
# 
# 
# vcom Message # 1002:
# While attempting to bind a component to an entity, a generic of the
# specified name which appears in the specified component declaration was
# not found to be declared as a formal generic in the specified entity.
# This message may be displayed as a warning if the entity is being chosen
# for a default binding. If the default binding is overridden later by a
# specific binding, then this warning can be ignored. Otherwise, this is
# an elaboration error. The warning version of this message is controlled by
# the vcom option -nowarn 1.
# [DOC: IEEE Std 1076-2002 VHDL LRM - 5.2.2 Default binding indication]
# 
# 
# vcom Message # 1003:
# No more than the specified number of -noaccel options can be specified.
# All -noaccel options encountered after the limit is reached are ignored.
# 
# 
# vcom Message # 1004:
# Design unit dependencies have changed since the last time this design
# unit was compiled, therefore it should be recompiled instead of
# refreshed. You can force the design unit to be refreshed by using the
# -force_refresh option but this might result in incorrect simulation.
# 
# 
# vcom Message # 1005:
# An fseek() on the source file being copied to the specified destination
# file failed. This message might be followed by another message that
# gives more information about the problem.
# 
# 
# vcom Message # 1006:
# An fread() on the source file being copied to the specified destination
# file unexpectedly encountered an end-of-file condition. This message
# might be followed by another message that gives more information about
# the problem.
# 
# 
# vcom Message # 1007:
# An fread() on the source file being copied to the specified destination
# file failed. This message might be followed by another message that
# gives more information about the problem.
# 
# 
# vcom Message # 1008:
# An fwrite() on the specified file failed. This message might be followed
# by another message that gives more information about the problem.
# 
# 
# vcom Message # 1009:
# The array bounds of the result of the implicit "&" operator are being
# computed using the 1993 rules because the 1987 rules are untenable.
# This may be important when this result is used as the actual to a
# subprogram call (when the formal is an unconstrained array type)
# because the formal takes on the bounds of the actual.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.2.4 Adding operators]
# [DOC: IEEE Std 1076-1993 VHDL LRM - 3.2.1.1 Index constraints and discrete ranges]
# 
# 
# vcom Message # 1010:
# The slice is a null slice if the direction of the discrete range is not
# the same as that of the object denoted by the prefix of the slice name.
# [DOC: IEEE Std 1076-1987 VHDL LRM - 6.5 Slice names]
# This was changed to an error in VHDL 1993, see message #1012.
# 
# 
# vcom Message # 1011:
# It is impossible to create a null slice (see warning message #1010) when
# the bounds of the discrete range are identical.
# 
# 
# vcom Message # 1012:
# It is an error if the direction of the discrete range of a slice name
# is not the same as that of the index range of the array denoted by the
# prefix of the slice name.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 6.5 Slice names]
# 
# 
# vcom Message # 1013:
# The value of a signal is not defined until after the design hierarchy is
# elaborated. Use of the signal name in a declarative item is prohibited
# because the value is undefined until the entire design has been
# elaborated.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 12.3 Elaboration of a declarative part]
# 
# 
# vcom Message # 1014:
# When the expression is of an array type, the length of the array must
# be known at compile time.  The simulator is less restrictive than the
# LRM requires as long as the array length of the expression can be
# determined in the compiler.
# IEEE Std 1076-1993, 8.8 Case statement:
# 
#   If the expression is of a one-dimensional character array type, then
#   the expression must be one of the following:
#     -- The name of an object whose subtype is locally static
#     -- An indexed name whose prefix is one of the members of this list
#        and whose indexing expressions are locally static expressions
#     -- A slice name whose prefix is one of the members of this list and
#        whose discrete range is a locally static discrete range
#     -- A function call whose return type mark denotes a locally static
#        subtype
#     -- A qualified expression or type conversion whose type mark
#        denotes a locally static subtype
# 
#   It is an error if the element subtype of the one-dimensional character
#   array type is not a locally static subtype.
# 
# 
# vcom Message # 1015:
# Array index values are limited to 32-bit integers. Computation of a
# value has resulted in an overflow; that is, the value cannot be
# contained in only 32 bits.
# 
# 
# vcom Message # 1017:
# The <entity>(<architecture>) portion of a +acc option design unit
# specification has bad syntax or is missing an identifier.
# [DOC: ModelSim Command Reference - vcom command]
# 
# 
# vcom Message # 1018:
# A illegal VHDL identifier was encountered.
# 
# 
# vcom Message # 1019:
# IEEE Std 1076-1993, 6.5 Slice names, line 193:
#   The prefix of a slice must be appropriate for a one-dimensional
#   array object.
# 
# 
# vcom Message # 1020:
# VHDL syntax requires exactly one formal part in an association element
# when formal part is present.
# IEEE Std 1076-1993, 4.3.2.2 Association lists, line 433:
#     association_element ::=
#       [ formal_part => ] actual_part
# 
#     formal_part ::=
#         formal_designator
#       | function_name ( formal_designator )
#       | type_mark ( formal_designator )
# 
# 
# vcom Message # 1021:
# IEEE Std 1076-1987, 4.3.3.2 Association Lists, page 4-11:
#     formal_part ::=
#         formal_designator
#       | function_name ( formal_designator )
# 
# Syntax for the formal part does not allow a type conversion;
# this capability was added for VHDL 1993.
# 
# 
# vcom Message # 1022:
# IEEE Std 1076-1993, 4.3.2.2 Association lists, line 435:
#     formal_part ::=
#         formal_designator
#       | function_name ( formal_designator )
#       | type_mark ( formal_designator )
# 
# IEEE Std 1076-1993, 4.3.2.2 Association lists, line 503:
#   A formal [designator] may be either an explicitly declared interface
#   object or member (see Section 3) of such an interface object.
# 
# IEEE Std 1076-1993, Section 3 Types, line 37:
#   A member of an object is either
#       -- A slice of the object
#       -- A subelement of the object
#       -- A slice of a subelement of the object.
# 
# 
# vcom Message # 1023:
# IEEE Std 1076-1993, 4.3.2.2 Association lists, line 459:
#   Named associations can be given in any order, but if both positional
#   and named associations appear in the same association list, then all
#   positional associations must appear first and at their normal
#   position. Hence once a named association is used, the rest of the
#   association list must use only named associations.
# 
# 
# vcom Message # 1024:
# IEEE Std 1076-1993, 4.3.2.2 Association lists, line 508:
#   Each association element that associates a slice or subelement
#   (or slice thereof) of an interface object must identify the formal
#   with a locally static name.
# 
# 
# vcom Message # 1025:
# IEEE Std 1076-1993, 5.2.1.2 Generic map and port map aspects, line 295:
#   No scalar formal may be associated with more than one actual. No
#   scalar subelement of any composite formal may be associated more than
#   once in the same association list.
# Similarly at lines 303 and 307.
# 
# IEEE Std 1076-1993, 7.3.3 Function calls, line 465:
#   For each formal parameter of a function, a function call must specify
#   exactly one corresponding actual parameter. This actual parameter is
#   specified either explicitly, by an association element (other than the
#   actual part OPEN) in the association list or, in the absence of such
#   and association element, by a default expression (see 4.3.2).
# Similarly in 8.6 Procedure call statement, line 381 for procedure calls.
# 
# 
# vcom Message # 1026:
# IEEE Std 1076-1993, 4.3.2.2 Association lists, line 503:
#   A formal may be either an explicitly declared interface object or
#   member (see Section 3) of such an interface object. In the former
#   case, such a formal is said to be associated in whole. In the latter
#   cases, named association must be used to associate the formal and
#   actual; the subelements of such a formal are said to be associated
#   individually. Furthermore, every scalar subelement of the explicitly
#   declared interface object must be associated exactly once with an
#   actual (or subelement thereof) in the same association list, and all
#   such associations must appear in a contiguous sequence within that
#   association list.
# 
# 
# vcom Message # 1027:
# IEEE Std 1076-1993, 4.3.2.2 Association lists, line 453:
#   Each association element in an association list associates one actual
#   designator with the corresponding interface element in the interface
#   list of a subprogram declaration, component declaration, entity
#   declaration, or block statement. The corresponding interface element
#   is determined either by position or name.
# 
# 
# vcom Message # 1028:
# IEEE Std 1076-1993, 5.2.1.2 Generic map and port map aspects, line 295:
#   No scalar formal may be associated with more than one actual. No
#   scalar subelement of any composite formal may be associated more than
#   once in the same association list.
# Similarly at lines 303 and 307.
# 
# IEEE Std 1076-1993, 7.3.3 Function calls, line 465:
#   For each formal parameter of a function, a function call must specify
#   exactly one corresponding actual parameter. This actual parameter is
#   specified either explicitly, by an association element (other than the
#   actual part OPEN) in the association list or, in the absence of such
#   and association element, by a default expression (see 4.3.2).
# Similarly in 8.6 Procedure call statement, line 381 for procedure calls.
# 
# 
# vcom Message # 1029:
# IEEE Std 1076-1993, 6.5 Slice names, line 193:
#   The prefix of a slice must be appropriate for a one-dimensional
#   array object.
# 
# 
# vcom Message # 1030:
# IEEE Std 1076-1993, 2.1.1.2 Signal parameters, line 115:
#   If an actual signal is associated with a signal parameter of any mode,
#   and if the type of the formal is a scalar type, then it is an error if
#   the bounds and direction of the subtype denoted by the subtype
#   indication of the formal are not identical to the bounds and direction
#   of the subtype denoted by the subtype indication of the actual.
# 
# 
# vcom Message # 1031:
# IEEE Std 1076-1993, 1.1.1.1 Generics, line 74:
#   It is an error if no actual is specified for a given formal generic
#   and no default expression is present in the corresponding interface
#   element.
# 
# 
# vcom Message # 1032:
# IEEE Std 1076-1993, 4.3.2.2 Association lists, line 511:
#   If an interface element in an interface list includes a default
#   expression for a formal generic, for a formal port of any mode other
#   than LINKAGE, or for a formal variable or constant parameter of mode
#   IN, then any corresponding association list need not include an
#   association element for that interface element. If the association
#   element is not included, or if the actual OPEN is given, then the
#   value of the default expression is used as the actual expression or
#   signal value in an implicit association element for that interface
#   element.
# 
# 
# vcom Message # 1033:
# IEEE Std 1076-1993, 4.3.2.2 Association lists, line 511:
#   If an interface element in an interface list includes a default
#   expression for a formal generic, for a formal port of any mode other
#   than LINKAGE, or for a formal variable or constant parameter of mode
#   IN, then any corresponding association list need not include an
#   association element for that interface element. If the association
#   element is not included, or if the actual OPEN is given, then the
#   value of the default expression is used as the actual expression or
#   signal value in an implicit association element for that interface
#   element.
# 
# 
# vcom Message # 1034:
# IEEE Std 1076-1993, 4.3.2.2 Association lists, line 511:
#   If an interface element in an interface list includes a default
#   expression for a formal generic, for a formal port of any mode other
#   than LINKAGE, or for a formal variable or constant parameter of mode
#   IN, then any corresponding association list need not include an
#   association element for that interface element. If the association
#   element is not included, or if the actual OPEN is given, then the
#   value of the default expression is used as the actual expression or
#   signal value in an implicit association element for that interface
#   element.
# 
# 
# vcom Message # 1035:
# IEEE Std 1076-1993, 1.1.1.2 Ports, line 112:
#   A port of mode IN may be unconnected or unassociated (see 4.3.2.2)
#   only if its declaration includes a default expression (see 4.3.2).
# 
# 
# vcom Message # 1036:
# IEEE Std 1076-1993, 1.1.1.2 Ports, line 113:
#   A port of any mode other than IN may be unconnected or unassociated
#   as long as its type is not an unconstrained array type.
# 
# 
# vcom Message # 1037:
# IEEE Std 1076-1993, 4.3.2.2 Association lists, line 511:
#   If an interface element in an interface list includes a default
#   expression for a formal generic, for a formal port of any mode other
#   than LINKAGE, or for a formal variable or constant parameter of mode
#   IN, then any corresponding association list need not include an
#   association element for that interface element. If the association
#   element is not included, or if the actual OPEN is given, then the
#   value of the default expression is used as the actual expression or
#   signal value in an implicit association element for that interface
#   element.
# 
# 
# vcom Message # 1038:
# IEEE Std 1076-1987, 4.3.3.2 Association Lists:
# The standard is not clear on whether or not it is valid to have the
# formal part of a named association be in the form of a conversion
# function call when the mode of the formal is IN. This is not supported
# by vcom -87.
# 
# IEEE Std 1076-1993, 4.3.2.2 Association lists, line 463:
#   The formal part of a named element association may be in the form of
#   a function call, where the single argument of the function is the
#   formal designator itself, if and only if the mode of the formal is
#   OUT, INOUT, BUFFER, or LINKAGE, and if the actual is not OPEN.
# 
# IEEE Std 1076-2002, 4.3.2.2 Association lists, Page 67:
#   The formal part of a named association element may be in the form of
#   a function call, where the single argument of the function is the
#   formal designator itself, if and only if the mode of the formal is
#   OUT, INOUT, BUFFER, or LINKAGE, and if the actual is not OPEN.
# 
# 
# 
# vcom Message # 1039:
# IEEE Std 1076-1993, 4.3.2.2 Association lists, line 468:
#   [T]he formal part of a named element association may be in the form
#   of a type conversion, where the expression to be converted is the
#   formal designator itself, if and only if the mode of the formal is
#   OUT, INOUT, BUFFER, or LINKAGE, and if the actual is not OPEN.
# 
# IEEE Std 1076-2002, 4.3.2.2 Association lists, Page 67:
#   [T]he formal part of a named association element may be in the form
#   of a type conversion, where the expression to be converted is the 
#   formal designator itself, if and only if the mode of the formal is
#   OUT, INOUT, BUFFER, or LINKAGE, and if the actual is not OPEN.
# 
# 
# vcom Message # 1040:
# IEEE Std 1076-1987, 4.3.3.2 Association Lists:
# The standard is not clear on whether or not it is valid to have the
# actual part of a (named or positional) association element be in the
# form of a conversion function call when the mode of the associated
# formal is OUT or BUFFER. This is not supported by vcom -87.
# 
# IEEE Std 1076-1993, 4.3.2.2 Association lists, line 474:
#   [T]he actual part of a (named or positional) element association may
#   be in the form of a function call, where the single argument of the
#   function is the actual designator itself, if and only if the mode of
#   the formal is IN, INOUT, or LINKAGE, and if the actual is not OPEN.
# 
# IEEE Std 1076-2002, 4.3.2.2 Association lists, Page 67:
#   [T]he actual part of a (named or positional) association element may
#   be in the form of a function call, where the single argument of the
#   function is the actual designator itself, if and only if the mode of
#   the formal is IN, INOUT, or LINKAGE, and if the actual is not OPEN.
# 
# 
# 
# vcom Message # 1041:
# IEEE Std 1076-1993, 4.3.2.2 Association lists, line 481:
#   [T]he actual part of a (named or positional) element association may
#   be in the form of a type conversion, where the expression to be type
#   converted is the actual designator itself, if and only if the mode of
#   the formal is IN, INOUT, or LINKAGE, and if the actual is not OPEN.
# 
# IEEE Std 1076-2002, 4.3.2.2 Association lists, Page 67:
#   [T]he actual part of a (named or positional) association element may
#   be in the form of a type conversion, where the expression to be type
#   converted is the actual designator itself, if and only if the mode of
#   the formal is IN, INOUT, or LINKAGE, and if the actual is not OPEN.
# 
# 
# vcom Message # 1042:
# IEEE Std 1076-1993, 4.3.2.2 Association lists, lines 465 and 476:
#   [T]he function name must denote a function whose single parameter
#   is of the type of the [formal|actual] and whose result is the type of
#   the corresponding [actual|formal].
# 
# 
# 
# vcom Message # 1043:
# IEEE Std 1076-1993, 2.1.1.2 Signal parameters, line 113:
#   It is an error if a conversion function or type conversion appears in
#   either the formal part or the actual part of an association element
#   that associates an actual signal with a formal signal parameter.
# 
# 
# 
# vcom Message # 1044:
# IEEE Std 1076-1993, 2.1.1.2 Signal parameters, line 113:
#   It is an error if a conversion function or type conversion appears in
#   either the formal part or the actual part of an association element
#   that associates an actual signal with a formal signal parameter.
# 
# 
# 
# vcom Message # 1045:
# IEEE Std 1076-1987, 4.3.3.2 Association Lists --
# The standard is not clear on when it is and is not valid to associate
# OPEN with a formal. Associating OPEN with formal subelements that are
# associated individually is not supported by vcom -87.
# 
# IEEE Std 1076-1993, 4.3.2.2 Association lists line 516:
#   It is an error if an actual of OPEN is associated with a formal that
#   is associated individually. An actual of OPEN counts as the single
#   association allowed for the corresponding formal but does not supply
#   a constant, signal, or variable (as is appropriate to the object
#   class of the formal) to the formal.
# EXAMPLE:
#   Using the following association list as an example:
#     ( OPEN, p1 => OPEN, p2(7 downto 0) => OPEN )
#   For the associations "OPEN" and "p1 => OPEN", the formals are
#   associated in whole; therefore the first two OPEN associations are
#   legal whether the first formal and p1 are scalars or composites.
#   For the association "p2(7 downto 0) => OPEN", the subelements of
#   the formal are associated individually because of the slice
#   specification; therefore the OPEN association is not legal even
#   if the slice encompasses the entire range of p2.
# 
# 
# vcom Message # 1046:
# IEEE Std 1076-1993, 4.3.2.2 Association lists, line 516:
#   It is an error if an actual of OPEN is associated with a formal that
#   is associated individually. An actual of OPEN counts as the single
#   association allowed for the corresponding formal but does not supply
#   a constant, signal, or variable (as is appropriate to the object
#   class of the formal) to the formal.
# EXAMPLE:
#   Using the following association list as an example:
#     ( OPEN, p1 => OPEN, p2(7 downto 0) => OPEN )
#   For the associations "OPEN" and "p1 => OPEN", the formals are
#   associated in whole; therefore the first two OPEN association are
#   legal whether the first formal and p1 are scalars or composites.
#   For the association "p2(7 downto 0) => OPEN", the subelements of
#   the formal are associated individually because of the slice
#   specification; therefore the OPEN association is not legal even
#   if the slice encompasses the entire range of p2.
# 
# 
# vcom Message # 1047:
# IEEE Std 1076-1993, 2.1.1 Formal parameters, line 48:
#   In a subprogram call, the actual designator (see 4.3.2.2) associated
#   with a formal parameter of class signal must be a signal. The actual
#   designator associated with a formal of class variable must be a
#   variable. The actual designator associated with a formal of class
#   constant must be an expression. The actual designator associated with
#   a formal of class file must be a file.
# 
# 
# vcom Message # 1048:
# IEEE Std 1076-1993, 7.3.2.2 Array aggregates, line 415:
#   A named association of an array aggregate is allowed to have a choice
#   that is not locally static, or likewise a choice that is a null range,
#   only if the aggregate includes a single element association and this
#   element association has a single choice. An OTHERS choice is locally
#   static if the applicable index constraint is locally static.
# We allow a non-locally static choice if the only other choice in the
# aggregate is an OTHERS choice (locally static or not) in the last
# association element.  Use the -pedanticerrors switch for strict VHDL
# compliance to make this an error.
# 
# 
# vcom Message # 1049:
# The value of a signal is not defined until after the design hierarchy is
# elaborated. Use of the signal name in a declarative item is prohibited
# because the value is undefined.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 12.3 Elaboration of a declarative part]
# 
# 
# vcom Message # 1050:
# IEEE Std 1076-1993, 4.3.2.2 Association lists, line 463:
#   The formal part of a named element association may be in the form of
#   a function call, where the single argument of the function is the
#   formal designator itself, if and only if the mode of the formal is
#   OUT, INOUT, BUFFER, or LINKAGE, and if the actual is not OPEN.
#   In this case, the function name must denote a function whose single
#   parameter is of the type of the formal and whose result is the type
#   of the corresponding actual.
# 
# IEEE Std 1076-1993, 4.3.2.2 Association lists, line 474:
#   Similarly, the actual part of a (named or positional) element
#   association may be in the form of a function call, where the single
#   argument of the function is the actual designator itself, if and only
#   if the mode of the formal is IN, INOUT, or LINKAGE, and if the actual
#   is not OPEN. In this case, the function name must denote a function
#   whose single parameter is of the type of the actual, and whose result
#   is the type of the corresponding formal.  In addition, the formal must
#   not be of class constant for this interpretation to hold (the actual
#   is interpreted as an expression that is a function call if the class
#   of the formal is constant).
# 
# 
# vcom Message # 1051:
# IEEE Std 1076-1993, 4.3.2.2 Association lists, line 463:
#   The formal part of a named element association may be in the form of
#   a function call, where the single argument of the function is the
#   formal designator itself, if and only if the mode of the formal is
#   OUT, INOUT, BUFFER, or LINKAGE, and if the actual is not OPEN.
#   In this case, the function name must denote a function whose single
#   parameter is of the type of the formal and whose result is the type
#   of the corresponding actual.
# 
# IEEE Std 1076-1993, 4.3.2.2 Association lists, line 474:
#   Similarly, the actual part of a (named or positional) element
#   association may be in the form of a function call, where the single
#   argument of the function is the actual designator itself, if and only
#   if the mode of the formal is IN, INOUT, or LINKAGE, and if the actual
#   is not OPEN. In this case, the function name must denote a function
#   whose single parameter is of the type of the actual, and whose result
#   is the type of the corresponding formal.  In addition, the formal must
#   not be of class constant for this interpretation to hold (the actual
#   is interpreted as an expression that is a function call if the class
#   of the formal is constant).
# 
# 
# vcom Message # 1052:
# IEEE Std 1076-1993, 4.3.2.2 Association lists, line 463:
#   The formal part of a named element association may be in the form of
#   a function call, where the single argument of the function is the
#   formal designator itself, if and only if the mode of the formal is
#   OUT, INOUT, BUFFER, or LINKAGE, and if the actual is not OPEN.
#   In this case, the function name must denote a function whose single
#   parameter is of the type of the formal and whose result is the type
#   of the corresponding actual.
# 
# IEEE Std 1076-1993, 4.3.2.2 Association lists, line 474:
#   Similarly, the actual part of a (named or positional) element
#   association may be in the form of a function call, where the single
#   argument of the function is the actual designator itself, if and only
#   if the mode of the formal is IN, INOUT, or LINKAGE, and if the actual
#   is not OPEN. In this case, the function name must denote a function
#   whose single parameter is of the type of the actual, and whose result
#   is the type of the corresponding formal.  In addition, the formal must
#   not be of class constant for this interpretation to hold (the actual
#   is interpreted as an expression that is a function call if the class
#   of the formal is constant).
# 
# 
# vcom Message # 1053:
# IEEE Std 1076-1993, 12.6.2 Propagation of signal values, line 498:
#   The driving value of a formal part is obtained by evaluating the
#   formal part as follows:  If no conversion function or type conversion
#   is present in the formal part, then the driving value of the formal
#   part is the driving value of the signal denoted by the formal
#   designator.  Otherwise, the driving value of the formal part is the
#   value obtained by applying either the conversion function or type
#   conversion (whichever is contained in the formal part) to the driving
#   value of the signal denoted by the formal designator.
# 
# This necessitates that the FUNCTION used as a conversion function in the
# formal part of an association element have a class constant formal
# parameter as its (single) formal parameter because otherwise (with a
# formal parameter of class signal) there could be no guarantee that only
# the driving value of the signal denoted by the formal designator was
# being used.
# 
# 
# vcom Message # 1054:
# IEEE Std 1076-1993, 12.6.2 Propagation of signal values, line 521:
#   If S is a connected port of mode IN or INOUT, then the effective
#   value of S is the same as the effective value of the actual part
#   of the association element that associates an actual with S (see
#   4.3.2.2). The effective value of an actual part is obtained by
#   evaluating the actual part, using the effective value of the signal
#   denoted by the actual designator in place of the actual designator.
# 
# This necessitates that the FUNCTION used as a conversion function in the
# actual part of an association element have a class constant formal
# parameter as its (single) formal parameter because otherwise (with a
# formal parameter of class signal) there could be no guarantee that only
# the effective value of the signal denoted by the actual designator was
# being used.
# 
# 
# vcom Message # 1060:
# IEEE Std 1076-1993, 7.3.2 Aggregates, line 389:
#   An element association with the choice OTHERS is allowed in either
#   an array aggregate or a record aggregate if the association appears
#   last and has this single choice; it specifies all remaining elements,
#   if any.
# 
# 
# vcom Message # 1061:
# IEEE Std 1076-1993, 7.3.2 Aggregates, line 389:
#   An element association with the choice OTHERS is allowed in either
#   an array aggregate or a record aggregate if the association appears
#   last and has this single choice; it specifies all remaining elements,
#   if any.
# 
# 
# vcom Message # 1062:
# IEEE Std 1076-1993, 7.3.2 Aggregates, line 380:
#   Both named and positional associations can be used in the same
#   aggregate, with all positional associations appearing first (in
#   textual order) and all named associations appearing next (in any
#   order, except that no associations may follow an OTHERS association).
# 
# 
# vcom Message # 1063:
# Each element of the value defined by an aggregate must be represented
# once and only once in the aggregate.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.3.2 Aggregates]
# 
# 
# vcom Message # 1064:
# If the choice OTHERS is given as a choice of a record aggregate, it must
# represent at least one element.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.3.2.1 Record aggregates]
# 
# 
# vcom Message # 1065:
# The record element name specified in a choice of an element association
# in a record aggregate does not have a corresponding record element in
# the record type.
# 
# 
# vcom Message # 1066:
# IEEE Std 1076-1993, 7.3.2 Aggregates, line 392:
#   Each element of the value defined by an aggregate must be represented
#   once and only once in the aggregate.
# 
# 
# vcom Message # 1067:
# A choice in a named element association of an aggregate of a record
# type must be either an element simple name or the reserved word OTHERS.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.3.2 Aggregates]
# 
# 
# vcom Message # 1068:
# IEEE Std 1076-1993, 3.2.1 Array types, line 286:
#   The name for an element of an array uses one or more index values
#   belonging to specified discrete types.
# 
# IEEE Std 1076-1993, 7.3.2.2 Array aggregates, line 407:
#   For an aggregate of a one-dimensional array type, each choice must
#   specify values of the index type[.]
# 
# 
# vcom Message # 1069:
# IEEE Std 1076-1993, 7.3.2.2 Array aggregates, line 414:
#   Apart from a final element association with the single choice OTHERS,
#   the rest (if any) of the element associations of an array aggregate
#   must be either all positional or all named.
# 
# 
# vcom Message # 1070:
# A choice must be of the same type as the index subtype of the base
# array type.  Since the bounds are not the same type, at least one
# of them is not of the same type as the index subtype.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.3.2.2 Array aggregates]
# 
# 
# vcom Message # 1071:
# A choice must be of the same type as the index subtype of the base
# array type.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.3.2.2 Array aggregates]
# 
# 
# vcom Message # 1072:
# IEEE Std 1076-1993, 7.3.2.2 Array aggregates, line 415:
#   A named association of an array aggregate is allowed to have a choice
#   that is not locally static, or likewise a choice that is a null range,
#   only if the aggregate includes a single element association and this
#   element association has a single choice. An OTHERS choice is locally
#   static if the applicable index constraint is locally static.
# 
# 
# vcom Message # 1073:
# IEEE Std 1076-1993, 7.3.2.2 Array aggregates, line 415:
#   A named association of an array aggregate is allowed to have a choice
#   that is not locally static, or likewise a choice that is a null range,
#   only if the aggregate includes a single element association and this
#   element association has a single choice. An OTHERS choice is locally
#   static if the applicable index constraint is locally static.
# We allow a non-locally static choice if the only other choice in the
# aggregate is an OTHERS choice (locally static or not) in the last
# association element.  Use the -pedanticerrors switch for strict VHDL
# compliance to make this an error.
# 
# 
# vcom Message # 1074:
# IEEE Std 1076-1993, 7.3.2.2 Array aggregates, line 415:
#   A named association of an array aggregate is allowed to have a choice
#   that is not locally static, or likewise a choice that is a null range,
#   only if the aggregate includes a single element association and this
#   element association has a single choice. An OTHERS choice is locally
#   static if the applicable index constraint is locally static.
# ModelSim allows a non-locally static OTHERS choice if all the other
# element associations are positional associations, or if all the other
# choices in named associations are locally static, or if there only one
# other non-locally static choice.  Use the -pedanticerrors switch for
# strict VHDL compliance to make this an error.
# 
# 
# vcom Message # 1075:
# IEEE Std 1076-1993, 7.3.2 Aggregates, line 392:
#   Each element of the value defined by an aggregate must be represented
#   once and only once in the aggregate.
# 
# 
# vcom Message # 1076:
# IEEE Std 1076-2002, 7.3.2.2 Array aggregates, page 109:
#   The subtype of an array aggregate that has an OTHERS choice must be
#   determinable from the context. That is, an array aggregate with an
#   OTHERS choice must appear only in one of the following contexts:
# 
#     a) As an actual associated with a formal parameter or formal generic
#        declared to be of a constrained array subtype (or subelement
#        thereof)
# 
#     b) As the default expression defining the default initial value of a
#        port declared to be of a constrained array subtype
# 
#     c) As the result expression of a function, where the corresponding
#        function result type is a constrained array subtype
# 
#     d) As a value expression in an assignment statement, where the
#        target is a declared object, and the subtype of the target is a
#        constrained array subtype (or subelement of such a declared
#        object)
# 
#     e) As the expression defining the initial value of a constant or
#        variable object, where that object is declared to be of a
#        constrained array subtype
# 
#     f) As the expression defining the default values of signals in a
#        signal declaration, where the corresponding subtype is a
#        constrained array subtype
# 
#     g) As the expression defining the value of an attribute in an
#        attribute specification, where that attribute is declared to be of
#        a constrained array subtype
# 
#     h) As the operand of a qualified expression whose type mark denotes
#        a constrained array subtype
# 
#     i) As a subaggregate nested within an aggregate, where that aggregate
#        itself appears in one of these contexts
# 
# 
# vcom Message # 1077:
# In a type conversion between array types, a check is made that any
# constraint on the element subtype is the same for the operand array type
# as for the target array type.
# For an element subtype that is a scalar subtype, the bounds of
# the range constraint must match those of the subtype of the operand.
# For an element subtype that is an array subtype, the bounds of
# each index range in the index constraint must match those of the
# operand.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.3.5 Type conversions]
# Allowed if target type element constraint is a superset of the operand
# type element constraint.
# 
# 
# vcom Message # 1078:
# The name is ambiguous according to the visibility rules.
# IEEE Std 1076-1993, 10.4 Use clauses, line 234:
#   Potentially visible declarations that have the same designator are not
#   made directly visible unless each of them is either an enumeration
#   literal specification or the declaration of a subprogram (either by a
#   subprogram declaration or by an implicit declaration).
# 
# 
# 
# vcom Message # 1079:
# The left and right bounds of a range expression (of the form
# simple_expression direction simple_expression) must either
# have the same type, or either both be of some integer type or
# both be of some floating point type.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 3.1.2 Integer types]
# [DOC: IEEE Std 1076-1993 VHDL LRM - 3.1.3 Physical types]
# [DOC: IEEE Std 1076-1993 VHDL LRM - 3.1.4 Floating point types]
# 
# 
# vcom Message # 1080:
# For a discrete range used in a constrained array definition and defined
# by a range, an implicit conversion to the predefined type INTEGER is
# assumed if each bound is either a numeric literal or an attribute, and
# if the type of both bounds (prior to the implicit conversion) is the
# type universal_integer.
# Otherwise, both bounds must be of the same discrete type, other than
# universal_integer; this type must be determined independently of the
# context, but using the fact that the type must be discrete and that
# both bounds must have the same type. These rules also apply to a
# discrete range used in an iteration scheme (see 8.9) or a generation
# scheme (see 9.7).
# [DOC: IEEE Std 1076-1993 VHDL LRM - 3.2.1.1. Index constraints and discrete ranges]
# 
# 
# vcom Message # 1081:
# For a discrete range used in a constrained array definition and defined
# by a range, an implicit conversion to the predefined type INTEGER is
# assumed if each bound is either a numeric literal or an attribute, and
# if the type of both bounds (prior to the implicit conversion) is the
# type universal_integer.
# Otherwise, both bounds must be of the same discrete type, other than
# universal_integer; this type must be determined independently of the
# context, but using the fact that the type must be discrete and that
# both bounds must have the same type. These rules also apply to a
# discrete range used in an iteration scheme (see 8.9) or a generation
# scheme (see 9.7).
# [DOC: IEEE Std 1076-1993 VHDL LRM - 3.2.1.1. Index constraints and discrete ranges]
# 
# 
# vcom Message # 1082:
# For a discrete range used in a constrained array definition and defined
# by a range, an implicit conversion to the predefined type INTEGER is
# assumed if each bound is either a numeric literal or an attribute, and
# if the type of both bounds (prior to the implicit conversion) is the
# type universal_integer.
# Otherwise, both bounds must be of the same discrete type, other than
# universal_integer; this type must be determined independently of the
# context, but using the fact that the type must be discrete and that
# both bounds must have the same type. These rules also apply to a 
# discrete range used in an iteration scheme (see 8.9) or a generation
# scheme (see 9.7).
# [DOC: IEEE Std 1076-1993 VHDL LRM - 3.2.1.1. Index constraints and discrete ranges]
# 
# 
# vcom Message # 1083:
# The implicit operator "=" (likewise "/=") will return FALSE
# (likewise TRUE) if the operands have different array index range
# lengths at any position in the index constraint.
# 
# 
# vcom Message # 1084:
# If a range constraint is used in a subtype indication, the type of the
# expressions (likewise, of the bounds of a range attribute) must be the
# same as the base type of the type mark of the subtype indication.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 3.1 Scalar types]
# 
# 
# vcom Message # 1085:
# If a range constraint is used in a subtype indication, the type of the
# expressions (likewise, of the bounds of a range attribute) must be the
# same as the base type of the type mark of the subtype indication.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 3.1 Scalar types]
# 
# 
# vcom Message # 1086:
# The bounds of the discrete range define those of the slice and must be
# of the type of the index of the array.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 6.5 Slice names]
# 
# 
# vcom Message # 1087:
# The bounds of the discrete range define those of the slice and must be
# of the type of the index of the array.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 6.5 Slice names]
# 
# 
# vcom Message # 1088:
# Index expression(s) of an indexed name can not be range(s).
# [DOC: IEEE Std 1076-1993 VHDL LRM - 6.4 Indexed names]
# 
# 
# vcom Message # 1089:
# A slice name denotes a one-dimensional array composed of a sequence of
# consecutive elements of another one-dimensional array. The prefix must
# be of a one-dimensional array type, and there must be exactly one
# discrete range.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 6.5 Slice names]
# 
# 
# vcom Message # 1090:
# A process that has no sensitivity list, contains no wait statements,
# and contains no calls to procedures that contain wait statements will
# execute forever without advancing time.
# 
# IEEE Std 1076-2002, 9.2 Process statement:
#   The execution of a process statement consists of the repetitive
#   execution of its sequence of statements. After the last statement in
#   the sequence of statements of a process statement is executed,
#   execution will immediately continue with the first statement in the
#   sequence of statements.
# 
# This message is controlled by the vcom option -nowarn 2.
# 
# 
# vcom Message # 1091:
# The keyword POSTPONED must not appear at the end of a process that does
# not start with the keyword POSTPONED.
# 
# IEEE Std 1076-2002, 9.2 Process statement:
# 
#   If the reserved word POSTPONED precedes the initial reserved word
#   PROCESS, the process statement defines a postponed process; otherwise,
#   the process statement defines a nonpostponed process.
# 
#   If the reserved word POSTPONED appears at the end of a process
#   statement, the process must be a postponed process.
# 
# 
# vcom Message # 1092:
# Signals in process sensitivity lists must be static.
# IEEE Std 1076-2002, 9.2 Process statement:
#   It is an error if any name that does not denote a static signal name
#   (see 6.1) for which reading is permitted appears in the sensitivity
#   list of a process statement.
# 
# 
# vcom Message # 1093:
# EXIT and NEXT statements cannot appear outside of a LOOP statement.
# 
# IEEE Std 1076-2002, 8.10 Next statement:
# 
#   A next statement is used to complete the execution of one of the
#   iterations of an enclosing loop statement (called "loop" in the
#   following text).
# 
#   A next statement with a loop label is only allowed within the labeled
#   loop and applies to that loop; a next statement without a loop label
#   is only allowed within a loop and applies only to the innermost
#   enclosing loop (whether labeled or not).
# 
# IEEE Std 1076-2002, 8.11 Exit statement:
# 
#   An exit statement is used to complete the execution of an enclosing
#   loop statement (called "loop" in the following text).
# 
#   An exit statement with a loop label is only allowed within the labeled
#   loop and applies to that loop; an exit statement without a loop label
#   is only allowed within a loop and applies only to the innermost
#   enclosing loop (whether labeled or not).
# 
# 
# vcom Message # 1094:
# When a label is specified with an EXIT or NEXT statement, it must be the
# label of a LOOP statement.
# 
# IEEE Std 1076-2002, 8.10 Next statement:
# 
#   A next statement with a loop label is only allowed within the labeled
#   loop and applies to that loop; a next statement without a loop label
#   is only allowed within a loop and applies only to the innermost
#   enclosing loop (whether labeled or not).
# 
# IEEE Std 1076-2002, 8.11 Exit statement:
# 
#   An exit statement with a loop label is only allowed within the labeled
#   loop and applies to that loop; an exit statement without a loop label
#   is only allowed within a loop and applies only to the innermost
#   enclosing loop (whether labeled or not).
# 
# 
# vcom Message # 1095:
# When a label is specified with an EXIT or NEXT statement, the EXIT or
# NEXT statement must be inside of the specified LOOP statement.
# 
# IEEE Std 1076-2002, 8.10 Next statement:
# 
#   A next statement with a loop label is only allowed within the labeled
#   loop and applies to that loop; a next statement without a loop label
#   is only allowed within a loop and applies only to the innermost
#   enclosing loop (whether labeled or not).
# 
# IEEE Std 1076-2002, 8.11 Exit statement:
# 
#   An exit statement with a loop label is only allowed within the labeled
#   loop and applies to that loop; an exit statement without a loop label
#   is only allowed within a loop and applies only to the innermost
#   enclosing loop (whether labeled or not).
# 
# 
# vcom Message # 1096:
# The specified name was referenced as a label but was not found to be a
# label of any statement. A name referenced as a label name must be the name
# of a label on a statement appropriate to the reference.
# 
# 
# vcom Message # 1097:
# VHDL 1987 does not allow an operator as an alias.
# Use VHDL 1993 or later (vcom options -93, -2002, etc.).
# 
# 
# vcom Message # 1098:
# VHDL 1987 does not allow a character as an alias.
# Use VHDL 1993 or later (vcom options -93, -2002, etc.).
# 
# 
# vcom Message # 1099:
# VHDL 1987 does not allow signatures.
# Use VHDL93 or later (vcom options -93, -2002, etc.).
# 
# 
# vcom Message # 1100:
# VHDL 1987 does not allow END ARCHITECTURE.
# Remove ARCHITECTURE or use VHDL 1993 or later.
# 
# 
# vcom Message # 1101:
# Use VHDL93 or later (vcom options -93, -2002, etc.).
# 
# 
# vcom Message # 1102:
# An element association with the choice OTHERS is allowed in either an
# array aggregate or a record aggregate if the association appears last
# and has this single choice.
# [DOC: IEEE std 1076-2002 VHDL LRM - 7.3.2 Aggregates]
# 
# 
# vcom Message # 1103:
# Use VHDL93 or later (vcom options -93, -2002, etc.).
# 
# 
# vcom Message # 1104:
# VHDL 1987 does not allow END CONFIGURATION.
# Remove CONFIGURATION or use VHDL93 or later (vcom options -93, -2002, etc.).
# 
# 
# vcom Message # 1105:
# There must be an entity name here.
# 
# 
# vcom Message # 1106:
# There must be a configuration here.
# 
# 
# vcom Message # 1107:
# Use VHDL 1993 or later (vcom options -93, -2002, etc.).
# 
# 
# vcom Message # 1108:
# Use VHDL 1993 or later (vcom options -93, -2002, etc.).
# 
# 
# vcom Message # 1109:
# Use VHDL 1993 or later (vcom options -93, -2002, etc.).
# 
# 
# vcom Message # 1110:
# Use VHDL 1993 or later (vcom options -93, -2002, etc.).
# 
# 
# vcom Message # 1111:
# Remove ENTITY or use VHDL93 or later (vcom options -93, -2002, etc.).
# 
# 
# vcom Message # 1112:
#  Recompile using VHDL 1993 or later (vcom options -93, -2002, etc.).
# 
# 
# vcom Message # 1113:
# Use VHDL 1993 or later (vcom options -93, -2002, etc.).
# 
# 
# vcom Message # 1114:
# Use VHDL 1993 or later (vcom options -93, -2002, etc.).
# 
# 
# vcom Message # 1115:
# Index constraints are not allowed on the return type.
# 
# 
# vcom Message # 1116:
# VHDL 1987 does not allow END PACKAGE BODY. Remove PACKAGE BODY or use
# VHDL 1993 or later (vcom options -93, -2002, etc.).
# 
# 
# vcom Message # 1117:
# VHDL 1987 does not allow END PACKAGE. Remove PACKAGE or use
# VHDL93 or later (vcom options -93, -2002, etc.).
# 
# 
# vcom Message # 1118:
# In VHDL 1987 functions must call pure subprograms.
# 
# vcom Message # 1119:
# A pure function must not call an impure subprogram.
# 
# vcom Message # 1120:
# Several places in VHDL that allow subtype indications do not allow the
# subtype indication to specify a resolution function. These places are:
#  1) As part of an allocator
#    [DOC: IEEE Std 1076-2002 VHDL LRM - 7.3.6 Allocators]
#  2) As part of the access type declaration
#    [DOC: IEEE Std 1076-2002 VHDL LRM - 3.3 Access types]
# 
# 
# vcom Message # 1121:
# A range constraint in a type definition must be locally static.
# [DOC: IEEE Std 1076-2002 VHDL LRM - 3.1.2 Integer types]
# [DOC: IEEE Std 1076-2002 VHDL LRM - 3.1.3 Physical types]
# [DOC: IEEE Std 1076-2002 VHDL LRM - 3.1.4 Floating point types]
# 
# 
# vcom Message # 1122:
# Remove the name or label or use VHDL 1993 or later
# (vcom options -93, -2002, etc.).
# 
# 
# vcom Message # 1123:
# Remove IS or use VHDL 1993 or later (vcom options -93, -2002, etc.).
# 
# 
# vcom Message # 1124:
# Remove BEGIN or use VHDL 1993 or later (vcom options -93, -2002, etc.).
# 
# 
# vcom Message # 1125:
# VHDL 1987 does not allow END PROCEDURE. Remove PROCEDURE or use VHDL 1993
# or later (vcom options -93, -2002, etc.).
# 
# 
# vcom Message # 1126:
# VHDL 1987 does not allow END FUNCTION. Remove FUNCTION or use VHDL 1993
# or later (vcom options -93, -2002, etc.).
# 
# 
# vcom Message # 1127:
# While attempting to find a default binding for an instance that was not
# specifically bound, a matching entity was found but not used because it
# is out of date relative to at least one of it dependencies and needs to
# be recompiled.
# The warning version of this message can be suppressed with the vcom
# option -nowarn 1.
# 
# 
# vcom Message # 1128:
# In generate statements, declarative items must be separated from concurrent
# statements by the keyword BEGIN.
# 
# 
# vcom Message # 1129:
# While attempting to bind a component to an entity, the type of the
# specified generic in the component declaration was found to be different
# than the matching formal generic of the specified entity. This message
# will be displayed as a warning if the entity is being chosen for a
# default binding. If the default binding is overridden later by a
# specific binding, then this warning can be ignored. Otherwise, this
# will cause an elaboration error.
# The warning version of this message can be suppressed with the vcom
# option -nowarn 1.
# 
# 
# vcom Message # 1130:
# An entity formal port must have a corresponding port declared in the
# component declaration that is bound to the entity if the port is either:
#  a) of mode IN and does not have a default expression, or
#  b) of any other mode and is of an unconstrained array type.
# This message will be displayed as a warning if the entity is being
# chosen for a default binding. If the default binding is overridden
# later by a specific binding, then this warning can be ignored.
# Otherwise, this will cause an elaboration error.
# The warning version of this message can be suppressed with the
# vcom option -nowarn 1.
# 
# 
# vcom Message # 1131:
# The specified port is declared in the specified component declaration
# but the port has no corresponding formal port in the specified entity.
# This message will be displayed as a warning if the entity is being
# chosen for a default binding. If the default binding is overridden
# later by a specific binding, then this warning can be ignored.
# Otherwise, this will cause an elaboration error.
# The warning version of this message can be suppressed with the
# vcom option -nowarn 1.
# 
# 
# vcom Message # 1132:
# The specified port in the specified component declaration is not associated
# with anything in the port map.
# [DOC: IEEE Std 1076-2002 VHDL LRM - 5.2.1.2 Generic map and port map aspects]
# 
# 
# vcom Message # 1133:
# While attempting to bind a component to an entity, the type of the
# specified port in the component declaration was found to be different
# than the matching formal port of the specified entity. This message
# will be displayed as a warning if the entity is being chosen for a
# default binding. If the default binding is overridden later by a
# specific binding, then this warning can be ignored. Otherwise, this
# will cause an elaboration error.
# The warning version of this message can be suppressed with the
# vcom option -nowarn 1.
# 
# 
# vcom Message # 1134:
# While attempting to bind a component to an entity, the mode of the
# specified port in the component declaration was found to be incompatible
# with the matching formal port of the specified entity. Compatible port
# modes are as follows:
# 
#   Formal Port Mode      Actual Port Mode
#   ----------------      ----------------
#   IN                    IN, INOUT, BUFFER
#   OUT                   OUT, INOUT (BUFFER - VHDL 2002 and Verilog only)
#   INOUT                 INOUT (BUFFER - VHDL2002 only)
#   BUFFER                BUFFER (OUT and INOUT - VHDL 2002 only)
#   LINKAGE               any mode
# 
# This message may be displayed as a warning if the entity is being chosen
# for a default binding. If the default binding is overridden later by a
# specific binding, then this warning can be ignored. Otherwise, this is an
# elaboration error.
# The warning version of this message can be suppressed with the
# vcom option -nowarn 1.
# [DOC: IEEE Std 1076-2002 VHDL LRM - 1.1.1.2 Ports]
# 
# 
# vcom Message # 1135:
# The syntax for declaring subprogram parameters that are files changed
# from the 1987 to the 1993 version of the VHDL language. File parameters
# must have the keyword FILE before their declaration.
# 
# 
# vcom Message # 1136:
# The specified name was referenced but was not found. This indicates
# that either the name specified does not exist or is not visible at this
# point in the code.
# 
# 
# vcom Message # 1137:
# The expression did not satisfy the requirements for a CASE expression
# or a selected signal assignment expression of an array type.
# IEEE Std 1076-1993, 8.8 Case statement:
# 
#   If the expression is of a one-dimensional character array type, then
#   the expression must be one of the following:
#     -- The name of an object whose subtype is locally static
#     -- An indexed name whose prefix is one of the members of this list
#        and whose indexing expressions are locally static expressions
#     -- A slice name whose prefix is one of the members of this list and
#        whose discrete range is a locally static discrete range
#     -- A function call whose return type mark denotes a locally static
#        subtype
#     -- A qualified expression or type conversion whose type mark
#        denotes a locally static subtype
# 
#   It is an error if the element subtype of the one-dimensional character
#   array type is not a locally static subtype.
# 
# 
# vcom Message # 1138:
# Attributes must be declared with an attribute declaration before use
# in an attribute specification.
# 
# 
# vcom Message # 1139:
# The identifier did not denote the name of an attribute.
# 
# 
# vcom Message # 1140:
# The 1993 version of VHDL standardized on the attribute FOREIGN for
# foreign subprograms and design units. As a result, a declaration
# of the attribute FOREIGN was added to the standard package.
# If another package declares the attribute FOREIGN and is included via
# a USE clause, both definitions of the attribute should be hidden.
# For upward compatibility the attribute declaration from the standard
# package is being used.
# Use the -pedanticerrors option to force strict language compliance.
# 
# 
# vcom Message # 1141:
# The identifier used here must refer to a visible component declaration.
# 
# 
# vcom Message # 1142:
# The type of the actual designator associated with the formal port of a
# Verilog module is either not a supported type, or could not be
# determined.  When the type cannot be determined, it is usually because
# the subelements of an individually associated formal are not all of the
# same type, making determining the array type impossible.
# 
# 
# vcom Message # 1143:
# The expression is legal under VHDL-1987 but ambiguous under VHDL-1993
# semantics. Either use qualified expressions for the types of parameters
# or compile using VHDL-1987.
# 
# 
# vcom Message # 1144:
# The value does not belong to the range defined by the range constraint
# of the scalar subtype.
# 
# 
# vcom Message # 1145:
# The value does not belong to the range defined by the range constraint
# of the scalar subtype.
# 
# 
# vcom Message # 1146:
# No value can belong to a null range constraint of a scalar subtype.
# 
# 
# vcom Message # 1147:
# The range in the FOR loop of a GENERATE must not depend on a signal or
# other non-static value.
# 
# vcom Message # 1148:
# The condition in an IF condition of a GENERATE must not depend on a signal
# or other non-static value.
# 
# vcom Message # 1149:
# The parameter value of the specified predefined attribute is outside
# the range of the type of the prefix.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 14.1 Predefined attributes]
# 
# 
# vcom Message # 1150:
# The parameter value of the specified predefined attribute is an
# illegal value; the attribute cannot return a legal value given
# this parameter as input.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 14.1 Predefined attributes]
# 
# 
# vcom Message # 1151:
# The result of the specified predefined attribute is outside
# the range of the type of the prefix.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 14.1 Predefined attributes]
# 
# 
# vcom Message # 1152:
# The index value must belong to both the index subtype of the base array
# type and the index range of the constrained array subtype.
# 
# 
# vcom Message # 1153:
# The index value must belong to both the index subtype of the base array
# type and the index range of the constrained array subtype.
# 
# 
# vcom Message # 1154:
# The index value must belong to both the index subtype of the base array
# type and the index range of the constrained array subtype.  This is
# impossible when the range is a null range because no value can belong
# to a null range.
# 
# 
# vcom Message # 1155:
# When using a default binding, a formal port on the entity to which a
# component declaration is bound was not declared in the component.
# This is an error only if the port is of mode IN and does not have a
# default expression, or if the port is of an unconstrained array type.
# This message is for informational purposes only (-lint) and there is
# no LRM violation or potential violation.
# 
# 
# vcom Message # 1156:
# The result of the concatenation would have an array index range whose
# right bound would not belong to the index subtype of the base type
# of the array.
# 
# 
# vcom Message # 1157:
# The array index right bound does not belong to the index subtype of
# the base type of the array at this index position.  The length of the
# array at this index position is too large to be represented by this
# array type.
# 
# 
# vcom Message # 1158:
# Exponentiation is defined as repeated multiplication of the left
# operand by itself for a number of times indicated by the absolute value
# of the right operand.  This operation has resulted in a number too
# large in absolute value to be represented within the limits of the
# implementation.
# 
# 
# vcom Message # 1159:
# Exponentiation with a negative exponent is allowed only for a left
# operand of a floating point type.
# [DOC: IEEE Std 1076-2002 VHDL LRM - 7.2.7 Miscellaneous operators]
# 
# 
# vcom Message # 1160:
# The evaluation of a qualified expression evaluates the operand and
# checks that its value belongs to the subtype denoted by the type mark.
# For array subtypes this means that at each position in the index
# constraint, the index ranges must match.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.3.4 Qualified expressions]
# 
# 
# vcom Message # 1161:
# IEEE Std 1076-1993, 2.1.1.2 Signal parameters, line 115:
#   If an actual signal is associated with a signal parameter of any mode,
#   and if the type of the formal is a scalar type, then it is an error if
#   the bounds and direction of the subtype denoted by the subtype
#   indication of the formal are not identical to the bounds and direction
#   of the subtype denoted by the subtype indication of the actual.
# 
# 
# vcom Message # 1162:
# An expression can not be used as the actual expression for a formal
# that is not of mode IN.
# 
# 
# vcom Message # 1163:
# A Verilog module having a port with a range that depends on a parameter
# results in an equivalent VHDL entity (for the purposes of instantiating
# Verilog in VHDL) with a port of an unconstrained array type.  If the
# port map of the VHDL instance of the Verilog module either has
# individual associations or is an array aggregate or string literal
# expression, then the array length and/or direction might not match
# those of the elaborated Verilog port when the design is loaded,
# possibly causing a bit-wise reversal of the actual value.  For all the
# array types supported at the VHDL-Verilog boundary, the Verilog port
# will be assumed to have a direction of TO because the VHDL rules for
# determining the index range of an unconstrained array formal
# that is associated individually state that the direction is that of
# the index subtype of the array, which is the predefined subtype NATURAL.
# Use a component instantiation where the component port is of a
# constrained array subtype with the same length and direction as the
# corresponding elaborated Verilog module port's range.
# 
# 
# vcom Message # 1164:
# Impure function calls are not globally static expressions and
# the actual of a port connection, if an expression, must be a
# globally static expression.
# 
# 
# vcom Message # 1165:
# IEEE Std 1076-1993, 4.3.3.1 Object aliases, line 573:
#   If the subtype indication denotes a scalar subtype, then the object
#   is viewed as if it were of the subtype specified by the subtype
#   indication; moreover, it is an error if this subtype does not have
#   the same bounds and direction as the subtype denoted by the object
#   name.
# 
# 
# vcom Message # 1166:
# IEEE Std 1076-1993, 7.3.6 Allocators, line 545:
#   The only allowed form of constraint in the subtype indication of an
#   allocator is an index constraint.
# 
# 
# vcom Message # 1167:
# The index value must belong to both the index subtype of the base array
# type and the index range of the constrained array subtype.
# 
# 
# vcom Message # 1168:
# The index value must belong to both the index subtype of the base array
# type and the index range of the constrained array subtype.
# 
# 
# vcom Message # 1169:
# The index constraint must provide a discrete range for each index of
# the array type, and the type of each discrete range must be the same as
# that of the corresponding index.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 3.2.1.1 Index constraints and discrete ranges]
# 
# 
# vcom Message # 1170:
# The index constraint must provide a discrete range for each index of
# the array type, and the type of each discrete range must be the same as
# that of the corresponding index.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 3.2.1.1 Index constraints and discrete ranges]
# 
# 
# vcom Message # 1171:
# The predefined attribute 'DRIVING requires that its prefix signal
# have a driver present in the process in which it appears.
# The predefined attribute 'DRIVING_VALUE requires that the value of
# 'DRIVING not be FALSE at the point of evaluation; this implies that
# 'DRIVING be evaluatable, hence it is an error if no drivers are present.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 14.1 Predefined attributes]
# 
# 
# vcom Message # 1172:
# The rules for multi-dimensional array aggregates require that each
# element representing a subaggregate be either another aggregate or a
# string literal or bit string literal.  Because sub-arrays of
# multi-dimensional array types have no type, there is no type with
# which to resolve the element expression, and no implicit type conversion
# occurs.  ModelSim will perform this type conversion if possible however.
# Use the -pedanticerrors switch to enforce strict LRM compliance and make
# this an error.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.3.2.2 Array aggregates]
# 
# 
# vcom Message # 1173:
# In a type conversion between array types, a check is made that any
# constraint on the element subtype is the same for the operand array type
# as for the target array type.
# For an element subtype that is a scalar subtype, the bounds of
# the range constraint must match those of the subtype of the operand.
# For an element subtype that is an array subtype, the bounds of
# each index range in the index constraint must match those of the
# operand.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.3.5 Type conversions]
# 
# 
# vcom Message # 1174:
# IEEE Std 1076-1993, 7.3.2 Aggregates, line 392:
#   Each element of the value defined by an aggregate must be represented
#   once and only once in the aggregate.
# 
# 
# vcom Message # 1175:
# IEEE Std 1076-1993, 10.3 Visibility, line 143:
#   Within the specification of a subprogram, every declaration with the
#   same designator as the subprogram is hidden.  Where hidden in this
#   manner, a declaration is visible neither by selection nor directly.
# 
# 
# vcom Message # 1176:
# The VHDL 1987 language requires that a subtype indication be present in
# the declaration of an alias.
# [DOC: IEEE Std 1076-1987 VHDL LRM - 4.3.4 Alias Declaration]
# 
# 
# vcom Message # 1177:
# VHDL syntax requires that the target type in a type conversion
# expression be a type mark, which is just a simple type or subtype name
# with no constraint (or resolution function either).
# 
# 
# vcom Message # 1178:
# VHDL syntax requires that a qualified expression type be a type_mark,
# which is just a simple type or subtype name with no constraint (or
# resolution function either).
# 
# 
# vcom Message # 1179:
# An individual association element whose formal designator is a slice
# of the formal has a slice discrete range with a direction different
# from the direction of the formal itself.
# The slice is a null slice if the direction of the discrete range is not
# the same as that of the object denoted by the prefix of the slice name.
# [DOC: IEEE Std 1076-1987 VHDL LRM - 6.5 Slice names]
# This was changed to an error in VHDL 1993, see message #1181.
# 
# 
# vcom Message # 1180:
# It is impossible to create a null slice (see warning message #1179) when
# the bounds of the discrete range are identical.
# 
# 
# vcom Message # 1181:
# An individual association element whose formal designator is a slice
# of the formal has a slice discrete range with a direction different
# from the direction of the formal itself.
# It is an error if the direction of the discrete range of a slice name
# is not the same as that of the index range of the array denoted by the
# prefix of the slice name.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 6.5 Slice names]
# 
# 
# vcom Message # 1182:
# The array index values given in the individual association elements
# corresponding to the formal do not form a complete uninterrupted set
# of values needed to form an association for every subelement of the
# formal.
# IEEE Std 1076-1993, 4.3.2.2 Association lists, line 506:
#   Furthermore, every scalar subelement of the explicitly declared
#   interface object must be associated exactly once with an actual (or
#   subelement thereof) in the same association list, and all such
#   associations must appear in a contiguous sequence within that
#   association list.
# 
# 
# vcom Message # 1183:
# A component instantiation label in the component specification of a
# component configuration is a duplicate of such a label found in the
# component specification of a configuration specification.
# IEEE Std 1076-1993, 5.2 Configuration specification, line 146:
#   It is an error if the elaboration of a configuration specification
#   results in the association of binding information with a component
#   label that is already bound.
# 
# 
# vcom Message # 1184:
# The ALL instantiation list of the component specification of a
# component configuration is associating binding information
# with a component instance that has already been bound in a
# configuration specification.
# IEEE Std 1076-1993, 5.2 Configuration specification, line 146:
#   It is an error if the elaboration of a configuration specification
#   results in the association of binding information with a component
#   label that is already bound.
# 
# 
# vcom Message # 1185:
# A component instantiation label in the component specification of
# a configuration specification is a duplicate of such a label found in a
# preceding configuration specification.
# IEEE Std 1076-1993, 5.2 Configuration specification, line 146:
#   It is an error if the elaboration of a configuration specification
#   results in the association of binding information with a component
#   label that is already bound.
# 
# 
# vcom Message # 1186:
# When the expression is of an array type, the length of the array must
# be known at compile time.  The simulator is less restrictive than the
# LRM requires as long as the array length of the expression can be
# determined in the compiler.
# IEEE Std 1076-1993, 8.8 Case statement:
# 
#   If the expression is of a one-dimensional character array type, then
#   the expression must be one of the following:
#     -- The name of an object whose subtype is locally static
#     -- An indexed name whose prefix is one of the members of this list
#        and whose indexing expressions are locally static expressions
#     -- A slice name whose prefix is one of the members of this list and
#        whose discrete range is a locally static discrete range
#     -- A function call whose return type mark denotes a locally static
#        subtype
#     -- A qualified expression or type conversion whose type mark
#        denotes a locally static subtype
# 
#   It is an error if the element subtype of the one-dimensional character
#   array type is not a locally static subtype.
# 
# 
# vcom Message # 1187:
# A composite type (array or record) may only contain elements that are
# of scalar, composite, or access types; elements of file types are not
# allowed in a composite type.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 3.2 Composite types]
# 
# 
# vcom Message # 1188:
# IEEE Std 1076-1993, 3.2.1.1 Index constraints and discrete ranges, line 410:
#   If the index ranges for an interface object or member of an interface
#   object are obtained from the corresponding association element, then
#   they are determined either by the actual part or by the formal part
#   of the association element, depending on the mode of the interface
#   object, as follows:
# IEEE Std 1076-1993, 3.2.1.1 Index constraints and discrete ranges, line 419:
#   For an interface object or member of an interface object whose mode
#   is OUT, BUFFER, INOUT, or LINKAGE, if the formal part includes a
#   conversion function or a type conversion, then the parameter subtype
#   of that function or the type mark of the type conversion must be a
#   constrained array subtype, and the index ranges are obtained from
#   this constrained subtype; otherwise, the index ranges are obtained
#   from the object denoted by the actual designator.
# 
# 
# vcom Message # 1189:
# IEEE Std 1076-1993, 3.2.1.1 Index constraints and discrete ranges, line 410:
#   If the index ranges for an interface object or member of an interface
#   object are obtained from the corresponding association element, then
#   they are determined either by the actual part or by the formal part
#   of the association element, depending on the mode of the interface
#   object, as follows:
# IEEE Std 1076-1993, 3.2.1.1 Index constraints and discrete ranges, line 419:
#   For an interface object or member of an interface object whose mode
#   is OUT, BUFFER, INOUT, or LINKAGE, if the formal part includes a
#   conversion function or a type conversion, then the parameter subtype
#   of that function or the type mark of the type conversion must be a
#   constrained array subtype, and the index ranges are obtained from
#   this constrained subtype; otherwise, the index ranges are obtained
#   from the object denoted by the actual designator.
# 
# 
# vcom Message # 1190:
# IEEE Std 1076-1993, 3.2.1.1 Index constraints and discrete ranges, line 410:
#   If the index ranges for an interface object or member of an interface
#   object are obtained from the corresponding association element, then
#   they are determined either by the actual part or by the formal part
#   of the association element, depending on the mode of the interface
#   object, as follows:
# IEEE Std 1076-1993, 3.2.1.1 Index constraints and discrete ranges, line 414:
#   For an interface object or member of an interface object whose mode
#   is IN, INOUT, or LINKAGE, if the actual part includes a conversion
#   function or a type conversion, then the result type of that function
#   or the type mark of the type conversion must be a constrained array
#   subtype, and the index ranges are obtained from this constrained
#   subtype; otherwise, the index ranges are obtained from the object
#   denoted by the actual designator.
# 
# 
# vcom Message # 1191:
# IEEE Std 1076-1993, 3.2.1.1 Index constraints and discrete ranges, line 410:
#   If the index ranges for an interface object or member of an interface
#   object are obtained from the corresponding association element, then
#   they are determined either by the actual part or by the formal part
#   of the association element, depending on the mode of the interface
#   object, as follows:
# IEEE Std 1076-1993, 3.2.1.1 Index constraints and discrete ranges, line 414:
#   For an interface object or member of an interface object whose mode
#   is IN, INOUT, or LINKAGE, if the actual part includes a conversion
#   function or a type conversion, then the result type of that function
#   or the type mark of the type conversion must be a constrained array
#   subtype, and the index ranges are obtained from this constrained
#   subtype; otherwise, the index ranges are obtained from the object
#   denoted by the actual designator.
# 
# 
# vcom Message # 1192:
# The number of elements in the array aggregate does not equal the number
# of elements in the index range of the constrained array subtype at the
# corresponding index position.  This is a matching element test that has
# failed.
# 
# 
# vcom Message # 1193:
# The choice values given in the individual association elements of the
# formal correspond to a different number of array elements than the type
# of the formal has at that index position.
# IEEE Std 1076-1993, 4.3.2.2 Association lists, line 506:
#   Furthermore, every scalar subelement of the explicitly declared
#   interface object must be associated exactly once with an actual (or
#   subelement thereof) in the same association list, and all such
#   associations must appear in a contiguous sequence within that
#   association list.
# 
# 
# vcom Message # 1194:
# A FILE declaration was written using 1076-1987 syntax, while the
# file is compiled in conformance to a newer standard (1993 or 2002).
# The FILE declaration will be processed according to the 1076-1987
# language rules.
# 
# 
# vcom Message # 1195:
# A selected name was used that could not be completely resolved. The suffix
# does not exist within the scope of the prefix specified.
# 
# 
# vcom Message # 1196:
# The initial name of a selected name must specifiy a package,
# entity, architecture, configuration, block, subprogram, or record.
# 
# 
# vcom Message # 1197:
# A selected name resolves to an object like a signal, variable,
# or constant that is not valid as a component name.
# 
# 
# vcom Message # 1198:
# The identifer was determined to be a method on a protected type.
# As a method of a protected type it is only visible when used in a
# selected name of the form PROTECT_TYPE_NAME.METHOD or
# SHARED_VARIABLE.METHOD
# 
# 
# 
# vcom Message # 1200:
# The returned value of a function must belong to the return subtype.
# For a return subtype that is a constrained array subtype, the bounds
# of the returned value must match those of this subtype at every index
# position in the index constraint of the array type.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 8.12 Return statement]
# 
# 
# vcom Message # 1201:
# An access value belongs to a corresponding subtype of an access type
# either if the access value is the null value or if the value of the
# designated object satisfies the constraint.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 3.3 Access types]
# 
# 
# vcom Message # 1202:
# VHDL 1987 syntax does not allow an instantiated unit kind to be
# specified in a component instantiation statement. Remove the keyword
# or use VHDL 1993 or later (vcom options -93, -2002, etc.).
# 
# 
# vcom Message # 1203:
# The terminating string literal string bracket character was not found.
# A string literal is formed by a sequence of graphic characters
# (possibly none) enclosed between two quotation marks (") used as
# string brackets.  The quotation marks used as string brackets at both
# ends of a string literal can be replaced by percent signs (%) provided
# that both string brackets are replaced and that the enclosed sequence
# of characters contains no quotation marks.
# 
# 
# vcom Message # 1204:
# The terminating bit string literal bit string bracket character was not
# found.  A bit string literal is formed by a sequence of extended digits
# (possibly none) enclosed between two quotations (") used as bit string
# brackets, preceded by a base specifier.  The quotation marks used as
# bit string brackets at both ends of a bit string literal can be
# replaced by percent signs (%) provided that both bit string brackets
# are replaced.
# 
# 
# vcom Message # 1205:
# The character found in a bit string literal is not an extended digit.
# 
# 
# vcom Message # 1206:
# The character found in a bit string literal is not an extended digit.
# 
# 
# vcom Message # 1207:
# [13.2 Lexical elements, separators, and delimiters], line 130:
#   At least one separator is required between an identifier or an
#   abstract literal and an adjacent identifier or abstract literal.
# 
# 
# vcom Message # 1208:
# If a range constraint is used in a subtype indication, the type of the
# expressions (likewise, of the bounds of a range attribute) must be the
# same as the base type of the type mark of the subtype indication.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 3.1 Scalar types]
# 
# 
# vcom Message # 1209:
# The index constraint must provide a discrete range for each index of
# the array type, and the type of each discrete range must be the same as
# that of the corresponding index.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 3.2.1.1 Index constraints and discrete ranges]
# 
# 
# vcom Message # 1210:
# The index constraint must provide a discrete range for each index of
# the array type, and the type of each discrete range must be the same as
# that of the corresponding index.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 3.2.1.1 Index constraints and discrete ranges]
# 
# 
# vcom Message # 1220:
# An integer divide, modulo, or remainder operation has a right operand
# of zero, which is causing a divide by zero error.
# 
# 
# vcom Message # 1221:
# A floating point divide has a right operand of zero, or a floating point
# exponentiation has a left operand of zero and a right operand of a
# negative value, which is causing a divide by zero condition.
# 
# 
# vcom Message # 1222:
# The expression did not satisfy the requirements for a CASE expression
# or a selected signal assignment expression of an array type.
# IEEE Std 1076-1993, 8.8 Case statement:
# 
#   If the expression is of a one-dimensional character array type, then
#   the expression must be one of the following:
#     -- The name of an object whose subtype is locally static
#     -- An indexed name whose prefix is one of the members of this list
#        and whose indexing expressions are locally static expressions
#     -- A slice name whose prefix is one of the members of this list and
#        whose discrete range is a locally static discrete range
#     -- A function call whose return type mark denotes a locally static
#        subtype
#     -- A qualified expression or type conversion whose type mark
#        denotes a locally static subtype
# 
#   It is an error if the element subtype of the one-dimensional character
#   array type is not a locally static subtype.
# 
# 
# vcom Message # 1223:
# The expression did not satisfy the requirements for a CASE expression
# or a selected signal assignment expression of an array type.
# IEEE Std 1076-1993, 8.8 Case statement:
# 
#   If the expression is of a one-dimensional character array type, then
#   the expression must be one of the following:
#     -- The name of an object whose subtype is locally static
#     -- An indexed name whose prefix is one of the members of this list
#        and whose indexing expressions are locally static expressions
#     -- A slice name whose prefix is one of the members of this list and
#        whose discrete range is a locally static discrete range
#     -- A function call whose return type mark denotes a locally static
#        subtype
#     -- A qualified expression or type conversion whose type mark
#        denotes a locally static subtype
# 
#   It is an error if the element subtype of the one-dimensional character
#   array type is not a locally static subtype.
# 
# 
# vcom Message # 1224:
# The expression did not satisfy the requirements for a CASE expression
# or a selected signal assignment expression of an array type.
# IEEE Std 1076-1993, 8.8 Case statement:
# 
#   If the expression is of a one-dimensional character array type, then
#   the expression must be one of the following:
#     -- The name of an object whose subtype is locally static
#     -- An indexed name whose prefix is one of the members of this list
#        and whose indexing expressions are locally static expressions
#     -- A slice name whose prefix is one of the members of this list and
#        whose discrete range is a locally static discrete range
#     -- A function call whose return type mark denotes a locally static
#        subtype
#     -- A qualified expression or type conversion whose type mark
#        denotes a locally static subtype
# 
#   It is an error if the element subtype of the one-dimensional character
#   array type is not a locally static subtype.
# 
# 
# vcom Message # 1225:
# IEEE Std 1076-1993, 2.1.1.2 Signal parameter:
# 
#   A formal signal parameter is a guarded signal if and only if 
#   it is associated with an actual signal that is a guarded signal.
#   It is an error if the declaration of a formal signal parameter 
#   includes the reserved word BUS. 
#   (The grammar also disallows REGISTER. 
# 
# 
# vcom Message # 1226:
# It is an error if a wait statement appears in an explicit process
# statement that includes a sensitivity list or in a procedure that
# has a parent that is such a process statement.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 8.1 Wait statement]
# 
# 
# vcom Message # 1227:
# IEEE Std 1076-1987 8.2 Assertion statements. The only place the
# keyword report is found in the syntactic description of VHDL 1076-1987
# is within the assertion statement.
# 
# 
# vcom Message # 1228:
# IEEE Std 1076-5.2.1.1 In an entity aspect used in a binding indication
# in a component configuration, The architecture is not required to exist at the time
# the configuration is compiled unless there are explicit block or component configurations.
# This warning message is given to remind the user that the architecture needs to exist 
# by the time the design is loaded.
# Note that this warning is normally issued only as part of the -lint option. 
# To receive this warning outside of lint
# Execute 'vcom -warning 1228 ... ' 
# or make a similar change to the [msg_system] section of the modelsim.ini file.
# 
# 
# vcom Message # 1229:
# The function is making recursive calls to itself.
# 
# 
# vcom Message # 1236:
# IEEE Std 1076-2002, 4.3.1.3 Variable declarations:
# 
#   The base type of the subtype indication of a shared variable
#   declaration must be a protected type.
# 
# 
# vcom Message # 1239:
# An individual association element whose formal designator is a slice
# of the formal has a slice discrete range with a direction different
# from the would-be direction of the formal itself.
# It is an error (null slice in VHDL 1987) if the direction of the
# discrete range of a slice name is not the same as that of the index
# range of the array denoted by the prefix of the slice name.
# 
# However, in the case where the formal is of an unconstrained array
# type (and thus the direction would normally come from the direction of
# the index subtype of this base array type), the compiler will use the
# direction of the first formal slice name that appears in the individual
# association elements in the association list (all slices of this formal
# must therefore have the same direction); this is non-compliant
# behavior.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 6.5 Slice names]
# 
# 
# vcom Message # 1244:
# An individual association element whose formal designator is a slice
# of the formal has a slice discrete range with a direction different
# from a prior slice name of the same formal.  At least one of these
# slice names is an error (VHDL 1993) or unsupported (VHDL 1987).
# 
# 
# vcom Message # 1245:
# The body of package std.textio can never be called.  The accelerated
# implementation must be used because the package body is not an accurate
# representation of the requirements of the language.
# 
# 
# vcom Message # 1246:
# The range specifice contains no value. This occurs when the direction 
# is TO and LEFT is greater than RIGHT, or when the dirction is DOWNTO 
# and LEFT is less than RIGHT.
# 
# 
# vcom Message # 1247:
# The range specifice contains no value. This occurs when the direction 
# is TO and LEFT is greater than RIGHT, or when the dirction is DOWNTO 
# and LEFT is less than RIGHT.
# 
# 
# vcom Message # 1248:
# The range specifice contains no value. This occurs when the direction 
# is TO and LEFT is greater than RIGHT, or when the dirction is DOWNTO 
# and LEFT is less than RIGHT.
# 
# 
# vcom Message # 1249:
# The body of package std.env can never be called.  The accelerated
# implementation must be used because the package body is not an accurate
# representation of the requirements of the language.
# 
# 
# vcom Message # 1250:
# The default binding for this component instantiation cannot be used.
# The preceding compiler warning message contains the reason.  If the
# default binding is is used, an elaboration error will be produced, and
# the design will not load.  This warning can be ignored if the component
# instance will be bound via an explicit binding indication as part of a
# component configuration in an applicable configuration declaration.
# This message can be suppressed with the vcom option -nowarn 1.
# 
# 
# vcom Message # 1253:
# The default binding for the component instantiation statement could not
# created because no entity with the same name as the component could
# not be found.
# 
# 
# vcom-vlog Message # 1900:
# Neither the -refresh nor the -force_refresh option can be used with
# either the -qhpro_syminfo or -qspro_syminfo option because the
# -qhpro_syminfo/-qspro_syminfo options require the original source
# code to be available whereas the -refresh/-force_refresh options do
# not. The -qhpro_syminfo/-qspro_syminfo options are ignored when
# either -refresh or -force_refresh is specified.
# 
# 
# vcom-vlog Message # 1901:
# The file specified for the OptionFile variable in the modelsim.ini file
# could not be found. This is a note that can be ignored if you do not
# care about the option file. If you do care about the option file, then
# verify that the filename is specified correctly, that the file exists,
# and that you have permission to read the file.
# 
# 
# vcom-vlog Message # 1902:
# The specified compiler option is either invalid, requires an argument,
# or had an unusable argument.
# [DOC: ModelSim Command Reference - vcom command, vlog command]
# 
# 
# vcom-vlog Message # 1903:
# While looking for the end of a comment in the specified file, an end
# of file condition was encountered. Verify that the correct file was
# specified with the -f option and that the file is in a valid format.
# 
# 
# vcom-vlog Message # 1904:
# No further information is currently available.
# 
# 
# vcom-vlog Message # 1905:
# The logical name "work" could not be mapped to a physical path name.
# The physical path to the work library can be specified with the compiler
# option -work. The default is ./work.
# [DOC: ModelSim Command Reference - vcom command, vlog command]
# 
# 
# vcom-vlog Message # 1906:
# The specified library could not be opened. Verify that the path
# exists and that the directory is a valid ModelSim library.
# 
# 
# vcom-vlog Message # 1907:
# For the -nowarn option, one of the following must be specified:
#   1 = unbound component (VCOM)
#   2 = process without a wait statement (VCOM)
#   3 = null range (VCOM)
#   4 = no space in time literal (VCOM)
#   5 = multiple drivers on unresolved signal (VCOM)
#   6 = VITAL compliance checks ("VitalChecks" also works) (VCOM)
#   7 = VITAL optimization messages (VCOM)
#   9 = signal value dependency at elaboration (VCOM)
#  10 = VHDL-1993 constructs in VHDL-1987 code (VCOM)
#  11 = PSL warnings (VCOM and VLOG)
#  12 = non-LRM compliance in order to match Cadence behavior (VLOG)
#  13 = constructs that coverage can't handle (VCOM and VLOG)
#  14 = locally static error deferred until run time (VCOM)
#  15 = SystemVerilog assertions using local variable (VLOG)
# [DOC: ModelSim Command Reference - vcom command]
# [DOC: ModelSim Command Reference - vlog command]
# 
# 
# vcom-vlog Message # 1908:
# For the -nowarn option, the following string can be specified instead
# of a number: VitalChecks. This is the same as warning category 6
# as in "-nowarn 6".
# Use "verror 1907" to see a list of all the -nowarn categories.
# 
# 
# vcom-vlog Message # 1909:
# The -gen_xml option cannot determine the proper array bounds when
# concatenating arrays that have parameterized bounds.
# 
# 
# vcom-vlog Message # 1910:
# The syntax for the -gen_xml option is:
#     -gen_xml <entity> <output>
# 
# where:
#     <entity> is the name of the interface to be generated
#     <output> is the name of the file where the results are stored.
# 
# NOTE:  Use a single dash to have the results sent to standard out.
# 
# 
# vcom-vlog Message # 1911:
# The "NODEBUG_PORTS" option was used to compile the element. Therefore,
# no interface information is available to generate the XML output.
# 
# 
# vcom-vlog Message # 1912:
# An invalid option was specified. This message is controlled by the
# setting of Show_BadOptionWarning in the modelsim.ini file.
# 
# 
# vcom-vlog Message # 1913:
# Only one of toggle or extended toggle may be used.
# 
# 
# vcom-vlog Message # 1914:
# For the -nodebug option to vcom, the word ports can be specified after an
# equal sign.
# For example: -nodebug=ports
# 
# For the -nodebug option to vlog, one or more of the following strings can
# be specified after an equal sign and separated by a plus sign:
#   ports
#   pli
# For example: -nodebug=ports+pli
# 
# [DOC: ModelSim Command Reference - vcom command]
# [DOC: ModelSim Command Reference - vlog command]
# 
# 
# vcom-vlog Message # 1915:
# A problem was encountered while trying to load the specified design unit.
# Verify that the specified design unit exists in the specified library and
# that file permissions allow access to it. The vdir command can be used to
# determine which design units exist in a library.
# 
# 
# vcom-vlog Message # 1916:
# The number of parameters provided within a Verilog instantiation of a
# VHDL	design unit exceeds the number of generics specified in its entity
# declaration.
# 
# 
# vcom-vlog Message # 1919:
# The name of the design-unit specified with the -o option to vopt began
# with a string that is reserved for internal use.
# 
# 
# vcom-vlog Message # 1920:
# The -fast switch has been supplanted by the vopt tool.  Please compile your
# files (both VHDL and Verilog) and run "vopt" on the design roots to make
# an optimized design to simulate.  If you still require using -fast, be sure
# to use the -novopt switch when you invoke vsim, or set the "VoptFlow"
# variable in your modelsim.ini file to a non-zero value.
# 
# 
# vcom-vlog Message # 1921:
# The +opt switch has been supplanted by the vopt tool.  Please compile your
# files (both VHDL and Verilog) and run "vopt" on the design roots to make
# an optimized design to simulate.  If you still require using +opt, be sure
# to use the -novopt switch when you invoke vsim, or set the "VoptFlow"
# variable in your modelsim.ini file to a non-zero value.
# 
# 
# vcom-vlog Message # 1922:
# If this error is encountered please contact ModelSim support.
# 
# 
# vcom-vlog Message # 1927:
# Optimized design names exist in the same namespace as design units and so
# cannot be the same as an existing design unit. Choose a name for the
# optimized design that is not already being used in the library into which
# the design is being compiled. The vdir command can be used to find out
# which names are being used in the library.
# 
# 
# vcom-vlog Message # 1928:
# A design name must be specified to vopt with the -o switch.
# 
# 
# vcom-vlog Message # 1929:
# PSL 'inherit' is supported only with vopt.
# 
# 
# vcom-vlog Message # 1930:
# Optimized design names may not include mixed case, non-alphanumeric characters
# and in certain cases cannot exceed certain name lengths.  The optimized design
# name supplied violated one of these restrictions.
# 
# 
# vcom-vlog Message # 1931:
# A design-unit referenced by the design being optimized was not found.  Either
# the library does not exist, or the given entry was not found in the library.
# Use the "vdir" command to verify the library and its contents.
# 
# 
# vcom-vlog Message # 1932:
# The "Depends On:" property for a design-unit has been corrupted somehow.
# Rebuilding the ModelSim libraries should fix the problem.
# 
# 
# vcom-vlog Message # 1933:
# The various tools need to use temporary files when performing their function.
# These files are created in the current "work" library underneath a directory
# named "_temp".  This directry was unable to be created for some reason.
# 
# 
# vcom-vlog Message # 1934:
# The various tools need to use temporary files when performing their function.
# These files are created in the current "work" library underneath a directory
# named "_temp".  An attempt was made with the "mkstemp" system call to make
# such a file, however the call failed for some reason.
# 
# 
# vcom-vlog Message # 1935:
# An error occurred when a compiler temporary file was attempted to be moved to
# another location.
# 
# 
# vcom-vlog Message # 1936:
# An error occurred when a compiler temporary file was attempted to be removed.
# (Normally this file may be safely removed by hand if this error occurs.)
# 
# 
# vcom-vlog Message # 1938:
# The SDF compiler "sdfcom" could not be found in the installation directory.
# Please verify the software has been installed properly.
# 
# vcom-vlog Message # 1939:
# The SDF compiler "sdfcom" was invoked to compile an SDF file referenced
# in the design hierarchy and failed for some reason.  The transcript of
# the compiler should contain the errors indicating what the problem was.
# 
# 
# vcom-vlog Message # 1940:
# When parsing an integer index, a non-integer value was seen.
# 
# 
# vcom-vlog Message # 1941:
# When parsing an integer index, extra non-integer values were found after
# the numeric value was parsed.
# 
# 
# vcom-vlog Message # 1942:
# When parsing an extended identifier, or an integer in parenthesis or
# square-brackets, extra characters were found after the parsing had been
# completed.
# 
# 
# vcom-vlog Message # 1943:
# The pathname given to the -sdf{min|typ|max} switch, indicating where
# to apply the SDF to in the design hierarchy could not be found.
# 
# 
# vcom-vlog Message # 1944:
# The pathname given to the -sdf{min|typ|max} switch, indicating where
# to apply the SDF to in the design hierarchy, resolved to some other
# type of object instead of an instance.
# 
# 
# vcom-vlog Message # 1945:
# The specified compiler option is either invalid or requires an
# argument to be specified with it.
# If the option is an intended runtime option for vsim specify the option with -R.
# [DOC: ModelSim Command Reference - qverilog command]
# 
# 
# vcom-vlog Message # 1946:
# A pathname specified in the SDF file could not be found at the level
# of the design hierarchy at which the SDF annotation is being applied.
# Verify that the SDF file is being applied at the correct level of the
# design.
# 
# 
# vcom-vlog Message # 1947:
# Prints information about recognised FSM's during compile time.
# 
# vcom-vlog Message # 1948:
# The SDF file specified is attempting to annotate to VHDL instances.
# Using compiled SDF in this manner is unsupported in the current version
# of the simulator.  To apply SDF to VHDL you should use the normal
# options on vsim (e.g. -sdftyp) to apply the SDF, and remove the usage
# of those switches in vopt
# 
# 
# vcom-vlog Message # 1949:
# SystemVerilog compilation must be one of multi-file compilation unit
# semantics or single file per compilation unit semantics.
# 
# 
# vcom-vlog Message # 1950:
# The -bbox option allows you to specify an optimized design to replace
# the instantiation of an individual design-unit in the simulation design
# hierarchy.  Specifying multiple roots for this type of replacement does
# not make sense.
# 
# 
# vcom-vlog Message # 1951:
# The property indicating that the given design-unit should be made a
# "black box" was unable to be added for some unknown reason.
# 
# 
# vcom-vlog Message # 1952:
# The acc option syntax is common for all HDL compilers. It is:
# +acc[=<spec>][{+<module>|+<entity>[(<architecture>)][.]}]
# See documentation for further details.
# 
# 
# vcom-vlog Message # 1953:
# An invalid spec character was specified with the +acc option.
# The valid spec characters are:
#   a  Enable access to PSL assertion and coverage properties
#   b  Enable access to bits of vector nets
#   c  Enable access to library cells
#   g  Enable access to parameters
#   l  Enable access to line debugging
#   m  Enable access to primitives from driving nets
#   n  Enable access to nets
#   p  Enable access to ports
#   r  Enable access to registers, memories, and variables
#   s  Enable access to system tasks (and overriding of built-ins)
#   t  Enable access to tasks and functions
#   v  Enable access to variables, constants, and aliases in processes
# [DOC: ModelSim Command Reference - vcom,vlog,and/or vopt commands]
# 
# 
# vlog Message # 2100:
# An error was encountered while trying to create a uselib directory
# specified either by the -compile_uselibs option or by the environment
# variable MTI_USELIB_DIR. Verify that you have write permission in the
# location where the directory is to be created. This message might be
# followed by another message that gives more information about the problem.
# 
# 
# vlog Message # 2101:
# A `uselib directive must refer to a directory, a file, or a library
# extension. For example:
#   `uselib dir=<library_directory>
#   `uselib file=<library_file>
#   `uselib libext=<file_extension>
# [DOC: ModelSim User's Manual - Verilog chapter]
# 
# 
# vlog Message # 2102:
# The -timescale option takes one argument in the following format:
#   <time_units> / <time_precision>
# The format for <time_units> and <time_precision> is the following:
#   <n><units>
# The value of <n> must be 1, 10, or 100.
# The value of <units> must be fs, ps, ns, us, ms, or s.
# In addition, the <time_units> must be greater than or equal
# to the <time_precision>.
# Example usage: -timescale "1ns / 1ps"
# Note that the argument may need to be quoted if it contains
# white space.
# [DOC: ModelSim Command Reference - vlog command]
# 
# 
# vlog Message # 2103:
# The directory path specified with the -y option cannot be found.
# Make sure that the -y option is specified correctly, that the
# directory exists, and that you have read/execute permission for
# the directory. Also make sure that any environment variables used in
# the -y option are defined and set to the correct values.
# [DOC: ModelSim Command Reference - vlog command]
# 
# 
# vlog Message # 2104:
# The secondary name specified with the -fast option cannot be 'verilog'
# because this is the default secondary name for unoptimized code.
# [DOC: ModelSim Command Reference - vlog command]
# 
# 
# vlog Message # 2105:
# The -R option was specified but no top-level modules were found in
# the design that was just compiled.
# [DOC: ModelSim Command Reference - vlog command]
# 
# 
# vlog Message # 2106:
# While doing a refresh, there was a problem opening the specified
# design unit in the specified library. The problem could be one of
# the following:
#   o The library path could not be found.
#   o The library is not a valid ModelSim library.
#   o The design unit was not found in the library.
#   o The data file for the design unit could not be found or opened.
# 
# 
# vlog Message # 2108:
# No module could be found in the design matching the module name
# specified with the +acc option.
# [DOC: ModelSim Command Reference - vlog command]
# 
# 
# vlog Message # 2109:
# Either the `protected block has been modified after being generated
# or it was generated using another vendor's simulation tools.
# [DOC: ModelSim User's Manual - ModelSim compiler directives Section]
# 
# 
# vlog Message # 2110:
# The specified object was used in an expression that does not allow that
# type of object to be used.
# 
# Example:
# 
# When assigning a value to a net, you cannot use the following type of
# assignment statement:
#   DATA = 2'bzz;
# This will result in an "Illegal reference to net" error message.
# Instead, if you want to make several assignments to a net, do something
# like the following:
#   reg  [31:0] DATAr;
#   wire [31:0] DATA = DATAr;
#   initial begin
#     ...
#     DATAr = 4'bzzzz;
#     ...
#     DATAr = 4'b1100;
#     ...
#   end
# 
# 
# vlog Message # 2111:
# A Verilog configuration can contain only one default clause.
# 
# 
# vlog Message # 2112:
# Library map files were added as part of Verilog 2001 configuration
# implementation. A library map file is used to indicate which library a
# particular Verilog source description is to be compiled into. Illegal
# characters were found in the library path name in a library map file.
# Legal characters are all alphanumeric characters, '?', '*', and '.'.
# 
# 
# vlog Message # 2113:
# The library file contains a library pattern that points to a
# non-existent physical directory
# 
# 
# vlog Message # 2114:
# The specified file matched more than one library pattern.
# 
# 
# vlog Message # 2115:
# A library map file must be compiled before any Verilog source files to
# ensure that all modules are compiled into the correct libraries. A library
# map file can be specified anywhere on the command line as long as it is
# preceded by the -libmap switch. The -libmap switch is optional if the map
# file is the first source file on the command line. Multiple library map
# files are allowed, but each one must be preceded by the -libmap switch.
# 
# 
# vlog Message # 2116:
# An environment variable that was used in a configuration library path or
# the -incdir include search path was not found in the current environment.
# 
# 
# vlog Message # 2118:
# Constant functions may not contain any hierarchical references, calls
# to system functions, or references to identifiers other than functions and
# parameters that are defined outside of the function.
# [DOC: IEEE Std 1364-2001 Verilog LRM - Section 10.3.5]
# 
# 
# vlog Message # 2119:
# Automatic variables are not allowed as arguments to system tasks like
# $monitor, $dumpports and $dumpvar.
# [DOC: IEEE Std 1364-2001 Verilog LRM - Section 10.2.3]
# 
# 
# vlog Message # 2122:
# The letter in a display task percent specifier must be one of:
#   b, c, d, e, f, g, h, l, m, o, s, t, u, v, or z.
# To display a literal '%', use '%%'.
# [DOC: IEEE Std 1364-2001 Verilog LRM - Section 17.1.1.2]
# 
# 
# vlog Message # 2123:
# Each percent specifier in a display task format string must correspond
# to a subsequent non-null argument. The only exceptions to this are
# the %l and %m specifiers.
# To display a literal '%', use '%%'.
# [DOC: IEEE Std 1364-2001 Verilog LRM - Section 17.1.1]
# 
# 
# vlog Message # 2124:
# Clocking block sequence or property if clocked must have the same clock as clocking block.
# 
# 
# vlog Message # 2127:
# The following syntax is illegal: [LRM 1363-2001 Sec 13.3.1.4]
#   cell lib.cell liblist lib1 lib2;
# You must use a USE clause instead of a liblist in this case.
# 
# 
# vlog Message # 2128:
# This implementation follows the draft Verilog 1364-2005 rules for
# generate block labels in conditions.  Block labels in conditions must
# not conflict with other declared names in the enclosing scope and
# must not be used in non-nested condition structures, even if those
# conditions are never elaborated.
# 
# 
# vlog Message # 2129:
# This warning is informative only and is meant to assist
# the user in diagnosing design elaboration errors.
# 
# 
# vlog Message # 2130:
# While creating an instance of a system function, it was found that a
# system task of the same name was registered either through the PLI or
# as a built-in systf. This is an error because the HDL code will expect
# the system function to return a value, but the actual system task that
# was registered will not do so.
# 
# 
# vlog Message # 2132:
# This implementation has restricted support for Verilog recursive
# instantiations in the default optimized flow. Recursive instantiations
# with a VHDL parent or those whose conditions depend on constant function
# evaluations are not supported in the optimized flow. Designs with such
# constructs must be simulated with the '-incr' switch.
# 
# 
# vlog Message # 2133:
# In order to deal with potentially unbounded recursive instantiations,
# this implementation limits the depth of instantiations. The limit
# can be modified in your modelsim.ini file if desired.
# 
# 
# vlog Message # 2134:
# In order to deal with potentially unbounded generate for loops,
# this implementation limits the number of iterations of a given loop.
# The limit can be modified in 'modelsim.ini' if desired.
# 
# 
# vlog Message # 2135:
# More port connections were found in an instantiation than were
# expected for the module.
# 
# 
# vlog Message # 2136:
# The second argument to $sdf_annotate() must be an instance path.
# Instance paths must end with either no indices or one index, because
# Verilog does not allow multi-dimensional arrays of instances.
# 
# 
# vlog Message # 2138:
# The design unit was found in the library, but it could not be loaded.
# Could not open the _primary.dat file in the library directory for the
# specified design unit.
# 
# 
# vlog Message # 2139:
# The design unit was found in the library, but it could not be loaded.
# The file fast.dat was in the library directory for the specified design
# unit.  This indicates that the library was probably created with a
# version of ModelSim prior to version 5.5.  This is not compatible with
# this version of ModelSim.
# 
# vlog Message # 2140:
# This can occur with a case like this:
#    covergroup mygroup;
#       mylabel: coverpoint var1;
#       mylabel: coverpoint var2;
#    endgroup
# The second 'mylabel' will provoke the error.  Because coverpoints are
# sometimes named implicitly or named according to the covered variable,
# the error may occur in other circumstances, too.
# 
# vlog Message # 2141:
# Automatic or dynamic variables cannot be written with nonblocking
# or continuous assignments.  Dynamic objects include object handles,
# non-static class properties, dynamic and associative arrays, strings,
# and event variables.
# [DOC: SystemVerilog 3.1a LRM - Section 5.5]
# 
# 
# vlog Message # 2142:
# Only one default skew statement is allow in each clocking block.
# 
# vlog Message # 2143:
# Clocking block identifiers must be declared in the
# enclosing scope of the clocking block.
# 
# vlog Message # 2144:
# Coverpoint expressions must be integral.  No value in a 'bins'
# specification may be unpacked, real, or any other non-integral type.
# 
# 
# vlog Message # 2145:
# Coverpoint expressions must be integral.  No value in a 'bins'
# specification may be unpacked, real, or any other non-integral type.
# 
# 
# vlog Message # 2146:
# Coverpoint expressions must have integral types.  Unpacked types,
# reals, and other non-integral types are illegal.
# 
# 
# vlog Message # 2147:
# Expressions in 'bins' size, value or transition specifications must only
# refer to constants or covergroup constructor arguments.
# 
# 
# vlog Message # 2148:
# IEEE1364[13.3.3] - specify paths without a data source expression are
# treated as level-sensitive and cannot contain a from edge.  Since the
# data source expression is not used by simulation, downgrading of this
# error (to a note or warning) causes the specify path to be accepted as
# an edge-sensitive path.
# 
# 
# vlog Message # 2149:
# Non-blocking assignments to program block variables are illegal.
# 
# 
# vlog Message # 2150:
# blocking assignments to heirarchical references in a program block are illegal.
# 
# 
# vlog Message # 2152:
# From SystemVerilog LRM P1800 Draft 4, Section 21.3:
# Covergroup defined in a Class is called an embedded Covergroup.
# Such embedded Covergroups are implicitly of anonymous type and
# Class containing this Covergroup has implicit variable with same
# name as the embedded Covergroup. Explicit user-defined variables
# of the embedded Covergroup types are not allowed. Following syntax
# for object creation is only allowed for embedded Covergroup types.
#    class c;
#       covergroup ct;
#       endgroup
#       ct = new; // really implicit variable named 'ct' of type 'ct'
#    endclass
# 
# 
# vlog Message # 2153:
# Hierarchical references are not allowed from within SystemVerilog
# packages.
# [DOC: SystemVerilog 3.1a LRM - Section 19.2]
# 
# 
# vlog Message # 2154:
# Cannot mark the specified signal as sparse.
# 
# 
# vlog Message # 2155:
# Global declarations are only legal in SystemVerilog. To enable SystemVerilog you
# can either use the -sv vlog command line switch or give the source file a .sv
# extension.
# 
# 
# vlog Message # 2156:
# default clocking specified multiple times.
# [DOC: SystemVerilog 3.1a LRM - Section 15.11]
# 
# 
# vlog Message # 2157:
# default clocking identifier '%s' does not match previously defined default clock '%s'.
# [DOC: SystemVerilog 3.1a LRM - Section 15.11]
# 
# 
# vlog Message # 2158:
# Automatic variables are not allowed to be used inside a fork-join_none
# or fork-join_any block.
# 
# 
# vlog Message # 2159:
# Unlike native function/task prototypes, other decls require identifiers for formals.
# 
# 
# vlog Message # 2160:
# No further information is available.
# 
# 
# vlog Message # 2161:
# On Windows and AIX, it is not allowed to place C/C++ files containing DPI
# export tasks and functions on the compiler command line.  Instead, compile
# the C/C++ code ahead of time, and then use the -R -sv_lib <libname> switch
# to load the DPI code into the simulator.
# 
# 
# vlog Message # 2162:
# -cuname requires -mfcu on the commandline.
# 
# 
# vlog Message # 2163:
# The compiler directive/macro is not recognized by ModelSim.
# 
# 
# vlog Message # 2164:
# Class or package declarations must be compiled before being referenced.
# 
# 
# vlog Message # 2165:
# ModelSim automatically generates and compiles "glue" code for Systemc
# SystemVerilog DPI tasks and functions. The compilation of the generated
# code failed. See the error message text for clues to the problem.
# 
# 
# vlog Message # 2166:
# ModelSim automatically maintains a database for all DPI-SC TF instances.
# Each time a vlog compile will add the TF instances from current compile 
# into the database as new entries. The related operation is failed.      
# 
# 
# vlog Message # 2167:
# Protected and local class properties are not yet supported
# 
# 
# vlog Message # 2168:
# A SystemVerilog design with $unit declarations references more than one library.
# This may happen when both -libmap and -mfcu are used.
# 
# 
# vlog Message # 2169:
# A SystemVerilog source file within a library directory specified with -y
# contains a declaration in $unit scope and the compiler is in mfcu mode.
# 
# 
# vlog Message # 2170:
# A SystemVerilog source file within a library file specified with -v
# contains a declaration in $unit scope.
# 
# 
# vlog Message # 2171:
# Multi-clock sequence or property is not allowed in clocking block.
# 
# 
# vlog Message # 2172:
# The dpiheader file cannot be generated if a struct argument has
# elements composed of parameterized types or parameterized widths.
# Generating the dpiheader file at a later processing stage may help
# work around this issue, since parameters become better settled
# in later processing stages.
# 
# 
# vlog Message # 2173:
# The P1800-2005 LRM stipulates that C linkage be used for DPI.
# Thus identifier names visible on the C side of DPI must be legal
# C identifiers.
# 
# 
# vlog Message # 2174:
# If a DPI tf has an anonymous struct argument, the DPI tf cannot
# be called due to strong type checking.  Use a typedef instead.
# 
# 
# vlog Message # 2175:
# An un-labeled Coverpoint is covering a simple named variable
# which exists in Covergroup scope or the user specified label of
# Coverpoint is already the name of another object in Covergroup scope.
# Thus hindering the creation of Coverpoint variable with same name.
# 
# 
# vlog Message # 2176:
# A SystemVerilog source file within a library file specified with -v
# contains a package declaration that will not be compiled. Packages are
# ignored during library file scanning.
# 
# 
# vlog Message # 2177:
# No additional information.
# 
# 
# vlog Message # 2178:
# ModelSim automatically maintains a database for all DPI-SC TF instances.
# The current database file present in work library was generated by a later
# verion software and can't be read. Either use a later version software or 
# run a clean recompile of all the source files using the current software.
# 
# 
# vlog Message # 2179:
# ModelSim automatically maintains a database for all DPI-SC TF instances.
# The current database file present in work library was generated by an older
# version software. New SystemC DPI features might not be available unless the
# relevant source files are recompiled with the current software.
# 
# 
# vlog Message # 2180:
# Passing an array of SystemC Data type objects in DPI-SC call is not currently supported.
# 
# 
# vlog Message # 2181:
# Using a parameterized class without explicit parameters creates a
# specialization of the parameterized class using the default parameters.
# A parameterized class is not a type; only specializations of the
# parameterized class are types.
# 
# 
# vlog Message # 2182:
# The indicated variable in an always_comb block might be read before
# it is written.  In that case, the reader will not see the updated value.
# 
# 
# vlog Message # 2183:
# Due to support for separate compilation, it is not possible to determine
# the actual type of a type referenced from an interface.  As a result any 
# references to inherited names must be prefixed by "this." or "super." 
# in order for the compiler to determine that the references are intended to be
# references to members inherited from the final type.
# 
# vlog Message # 2184:
# Due to support for separate compilation, it is not possible to determine
# the actual type of a type parameter.  When a type parameter is used as
# the super class type for a class extension, it is not possible to 
# determine the inherited property or method names.  As a result any references
# to inherited names must be prefixed by "this." or "super." in order
# for the compiler to determine that the references are intended to be
# references to members inherited from the final type.  Using a class type
# as the default allows the compiler to assume knowledge about members
# inherited from the super type.
# 
# vlog Message # 2185:
# This can occur with a case like this:
#    covergroup mygroup;
#       mylabel: cross var1, var1;
#    endgroup
# The second 'var1' will provoke the warning since a cross between a
# coverpoint or variable and itself produces the same results as the
# coverpoint or variable alone.
# 
# vlog Message # 2189:
# ModelSim automatically maintains a database for all DPI-SC TF instances.
# The current database file present in work library was generated on a different
# kind platform. This is incompatiable with current platform. The
# relevant SV source files need to be recompiled on current platform.
# 
# 
# vlog Message # 2198:
# Parameterized value or type is not currently supported in DPI-SC.
# 
# 
# vlog Message # 2199:
# 
# 
# vsim Message # 3000:
# The -t option specifies the simulation time resolution.
# The format is:  -t [<multiplier>]<time_unit>
# The multiplier can be 1, 10, or 100.
# The time_unit must be one of the following: fs, ps, ns, us, ms, sec.
# There must be no space between the multiplier and the time_unit.
# [DOC: ModelSim Command Reference - vsim command]
# 
# 
# vsim Message # 3001:
# Each PLI/VPI shared library must contain one of the following entry points:
#   a veriusertfs table
#   an init_usertfs function
#   a vlog_startup_routines table
# [DOC: ModelSim User's Manual - Verilog Simulation Chapter]
# 
# 
# vsim Message # 3002:
# The loading of a shared library can fail for a variety of reasons.
# There should be an additional message from the loader indicating the
# problem. Verify that the full path to the shared library is correct
# and that the shared library is marked as readable. On Solaris, you
# might need to set the LD_LIBRARY_PATH environment variable. Also, if
# the specification of the shared library contains a reference to an
# environment variable, make sure the environment variable has a value.
# [DOC: ModelSim User's Manual - Verilog Simulation Chapter]
# 
# 
# vsim Message # 3003:
# The specified system task or function was not registered with the
# simulator through a call to init_usertfs() or through a veriusertfs
# or vlog_startup_routines table. Verify that the shared library
# containing the definition and registration of the system task/function
# is being correctly loaded into the simulator. This message is controlled
# by the vsim option +nowarnTOFD.
# [DOC: ModelSim User's Manual - Verilog Simulation Chapter]
# 
# 
# vsim Message # 3004:
# While performing the negative timing constraint algorithm on each module
# that contains timing checks with delayed net arguments, a timing check
# with a negative adjusted setup or hold limit was encountered. The
# negative timing constraint algorithm attempts to find a set of delays
# for the timing check delayed net arguments such that all negative limits
# can be converted to non-negative limits with respect to the delayed nets.
# If there is no solution for a set of limits, then the algorithm sets one
# of the negative limits to zero and recalculates the delays. This process
# is repeated until a solution is found. A warning message is issued for
# each negative limit that is set to zero. This warning is controlled by
# the vsim option +ntc_warn.
# [DOC: ModelSim User's Manual - Verilog Simulation Chapter]
# 
# 
# vsim Message # 3005:
# An unrecoverable error was encountered while ModelSim was loading or
# closing a design, restarting, or shutting down.
# 
# 
# vsim Message # 3006:
# Too many parameters were specified for a module instance.
# Here is an example of code that will cause this warning to occur:
# 
#   module top;
#     b #(1,2) u1(y, a, b, c);
#   endmodule
# 
#   module b(y, a, b, c);
#     output y;
#     input a, b, c;
#     parameter p = 0;
#     c u1();
#     initial $display("b=%d",p);
#   endmodule
# 
#   module c;
#     parameter p = 0;
#     initial $display("c=%d",p);
#   endmodule
# 
# Note that module b contains only one parameter. The extra parameter in
# the module instantiation statement is illegal.
# 
# You can also get this message if you attempt to override a localparameter
# (which is illegal) with an order parameter list. For example:
# 
# module a;
#    parameter  a = 1;
#    localparam c = 3;
#    parameter  b = 2;
# endmodule
# 
# module top;
#    a #(4, 5, 6) u1();
# endmodule
# 
# 
# 
# vsim Message # 3007:
# Too many levels of defparams were detected. The limit is specified in
# the message. Check parameter assignments for a circular dependency.
# Here is a simple example of something that causes this warning:
# 
#   parameter a = 5;
#   parameter b = a + 1;
#   defparam a = b;
# 
# The defparam causes a to change, which then causes b to change. When b
# changes, the defparam re-executes and causes a to change, which causes
# b to change. This continues until the limit is reached.
# 
# Since this is only a warning, elaboration continues. Each parameter
# involved in the iteration will contain the last value set on it
# before the simulator gave up because the iteration limit was exceeded.
# Your design may not simulate as expected. Find the circular dependency,
# if one exists, or look for a place where more than the specified limit
# of defparams occurs and change your code so that there is no circular
# dependency and the depth of defparams fits within the limit.
# 
# 
# vsim Message # 3008:
# While looking up an object by name, an upward reference through a higher
# level of hierarchy was found instead of the expected downward reference
# through an instance at the current level of hierarchy. Here is an example
# of code that causes this warning to occur:
# 
#   module lower;
#   endmodule
# 
#   module mid;
#     reg x;
#     lower u2 ();
#     initial begin
#       x = 0;
#       #20 x = 1;
#       #20 x = 0;
#       #20 $finish;
#     end
#   endmodule
# 
#   module top;
#     wire x;
#     mid u1 ();
#     assign x = u1.u2.u1.x;
#     initial $monitor( $stime,, x,, u1.x);
#   endmodule
# 
# While trying to resolve the reference to u1.u2.u1.x, the compiler determines
# that the second u1 resolves to the module 'mid' which is an unexpected 
# updward reference.
# This warning is controlled by the vsim option +nowarnCNNODP.
# 
# 
# vsim Message # 3009:
# The `timescale directive specifies the time unit and time precision of
# the modules that follow it. A module that has no explicit `timescale
# directive associated with it will be affected by a previously specified
# `timescale directive. This might cause unintentional behavior in the
# module with no explicit `timescale directive because it could end up
# using an inappropriate time unit or time precision. This message is
# controlled by the vsim option +nowarnTSCALE.
# [DOC: ModelSim User's Manual - Verilog Simulation Chapter]
# 
# 
# vsim Message # 3010:
# The `timescale directive specifies the time unit and time precision of
# the modules that follow it. This message indicates that a module that
# has an explicit `timescale directive associated with it was compiled
# after one or more modules that did not have any `timescale directives
# associated with them. The modules without `timescale directives should
# be checked to verify that they do not need them. Also, the time
# precision in the `timescale directive could cause the simulator to run
# at a smaller resolution than that expected by the previously compiled
# modules. This message is controlled by the vsim option +nowarnTSCALE.
# [DOC: ModelSim User's Manual - Verilog Simulation Chapter]
# 
# 
# vsim Message # 3011:
# The Verilog bidirectional pass switch primitives (tran, tranif0,
# tranif1, rtran, rtranif0, and rtranif1) are not guaranteed to function
# properly if a VHDL signal is connected to a Verilog port that is also
# connected to a bidirectional pass switch. In this case, the pass switch
# works only if it is driven in only one direction. The specification of
# how VHDL signals and ports are resolved precludes simulation of
# bidirectional pass switches. (They cannot be modeled in VHDL.)
# 
# 
# vsim Message # 3012:
# A defparam statement cannot be used to define the value of a specparam.
# 
# 
# vsim Message # 3013:
# Local parameters cannot be modified with a defparam statement or by an
# ordered or named parameter value assignment. Local parameters can be
# assigned to a constant expression containing a parameter which itself
# can be modified with the defparam statement or by an ordered or named
# parameter value assignment.  Parameters defined within a package or
# generate construct are treated as local parameters.
# 
# 
# vsim Message # 3014:
# Verilog module ports can be declared such that two or more ports share
# the same internal net, having the effect of shorting the externally
# connected nets. A VHDL signal connected to a Verilog "shorted" port
# is not guaranteed to function properly. The specification of how VHDL
# signals and ports are resolved precludes simulation of shorted ports.
# (They cannot be modeled in VHDL.)
# 
# 
# vsim Message # 3015:
# The size in bits of an object connected to a port must match the size
# in bits of the port or the size in bits of the port multiplied by the
# number of module instances. The first number given for the port size is
# the size in bits of the port. The second number given for the port size
# is the size in bits of the port multiplied by the number of module
# instances. Here is an example of code that causes this warning to occur:
# 
#   module bottom(i1, o1);
#     input  i1;
#     output o1;
#     wire [0:4] i1;
#     wire [0:4] o1;
#     assign o1 = i1;
#   endmodule
# 
#   module top;
#     reg  [4:0] r1;
#     wire [1:0] w1;
#     bottom b1 (r1,w1);
#     initial begin
#       $monitor("w1 = %b", w1);
#       #10 r1 = 'b00000;
#       #10 r1 = 'b00011;
#       #10 r1 = 'b00001;
#     end
#   endmodule
# 
# Note that port 'o1' is 5 bits wide whereas wire 'w1' is only 2 bits wide.
# This message is controlled by the vsim option +nowarnPCDPC.
# 
# 
# vsim Message # 3016:
# The type of the specified object in a module instantiation port list is
# incompatible with the type of the port to which it is being connected.
# This can happen when ports are collapsed and, for example, a tri0 net
# ends up collapsed onto a tri1 net.
# 
# 
# vsim Message # 3017:
# A module instantiation contains fewer objects in its port list than the
# actual module has defined in its port list; therefore, one or more ports
# in the module will be unconnected. If all named ports appear to be
# accounted for, check for extra commas in the module port list which
# cause the definition of null ports. Here is an example of code that
# causes this warning to occur:
# 
#   module b1(p1,,);
#     input p1;
#     initial begin
#       #10 $displayb("%m",,p1);
#     end
#   endmodule
# 
#   module top;
#     reg r1;
#     b1 u1(r1);
#     initial r1 = 0;
#   endmodule
# 
# Note that three port connections are expected because there are two
# commas in the module's port list.
# This message is controlled by the vsim option +nowarnTFMPC.
# [DOC: ModelSim User's Manual - ModelSim messages Appendix,
#  Miscellaneous messages Section]
# 
# 
# vsim Message # 3018:
# The object connected to a UDP terminal at the specified connection point
# in the terminal list of an array of UDP instances must be either one bit
# wide (so that the terminal in each UDP instance is connected to the same
# bit) or of a width equal to the number of UDP instances (so that the
# terminal in each instance is connected to a different bit).
# 
# 
# vsim Message # 3019:
# Too many delay parameters were provided to a UDP instance.
# 
# 
# vsim Message # 3020:
# When the second argument to $deposit is wider than the first argument
# the upper bits of the value of the second are ignored.
# 
# 
# vsim Message # 3021:
# $printtimescale can be specified with or without an argument. When no
# argument is specified, $printtimescale displays the time unit and
# precision of the module that is the current scope. When an argument is
# specified, the argument must be a hierarchical identifier of a module
# and $printtimescale displays the time unit and precision of that module.
# 
# 
# vsim Message # 3022:
# The units_number (1st) argument to $timeformat must be an integer in the
# range 0 to -15 inclusive. This argument represents a time unit. For
# example, -9 represents '1 ns'.
# 
# 
# vsim Message # 3023:
# The precision_number (2nd) argument to $timeformat must be an integer in
# the range 0 to 15 inclusive. This argument controls the number of digits
# of a time value printed after the decimal point.
# 
# 
# vsim Message # 3024:
# The suffix_string (3rd) argument to $timeformat must be non-NULL. It can
# be an empty string. It is normally used to specify the type of time units;
# for example, " ns".
# 
# 
# vsim Message # 3025:
# The field_width (4th) argument to $timeformat must be an integer in the
# range 0 to 40 inclusive. This value controls the minimum field width for
# all %t formats.
# 
# 
# vsim Message # 3026:
# No files have been opened with $dumpports(), therefore there are no
# files to which the limit can be applied.
# 
# 
# vsim Message # 3027:
# The $sdf_annotate configuration file argument is not supported in
# ModelSim. This argument is ignored and can be left null in order to
# use succeeding arguments.
# 
# 
# vsim Message # 3028:
# The $sdf_annotate log file argument is not supported in ModelSim.
# This argument is ignored and can be left null in order to use
# succeeding arguments.
# 
# 
# vsim Message # 3029:
# While creating an instance of a system function, it was found that a
# system task of that name was registered either through the PLI or as
# a built-in systf. This is an error because the HDL code will expect
# the system function to return a value, but the actual system task
# that was registered will not do so. If you wish to use the system
# task here, you should remove the return value.
# 
# 
# vsim Message # 3030:
# A NULL value was passed as the specified argument to the specified PLI
# function which requires a non-NULL value for this argument.
# [DOC: IEEE Std 1364-1995 Verilog LRM - PLI Sections 17-21]
# 
# 
# vsim Message # 3031:
# An invalid value was passed as the specified argument to the specified
# PLI function.
# [DOC: IEEE Std 1364-1995 Verilog LRM - PLI Sections 17-21]
# 
# 
# vsim Message # 3032:
# While creating a setuphold or recrem timing check, a width difference
# was detected between the reference event and the delayed reference or
# the data event and the delayed data.
# 
# 
# vsim Message # 3033:
# The specified design unit could not be found for instantiation. If the
# specified design unit does not contain a library indication then this
# message should be followed by a list of libraries that were searched
# when trying to locate a matching design unit.
# 
# 
# vsim Message # 3034:
# The compiled version of the specified design unit does not match what
# was originally compiled with -fast for this instantiation.
# 
# 
# vsim Message # 3035:
# This warning occurs when the level of an instantiation reaches a certain
# depth. It indicates that the instantiation might be recursive. A further
# attempt is made to complete the instantiation. If the maximum depth
# is reached then an elaboration error is generated.
# 
# 
# vsim Message # 3036:
# Instantiation of the specified design unit reached the maximum
# allowable level; therefore, the instantiation has been aborted.
# Check the specified area of the design for recursive instantiation.
# 
# 
# vsim Message # 3037:
# An instance name was not supplied in an instantiation of the specified module.
# 
# 
# vsim Message # 3038:
# The specified index of the range of the specified array of instances was
# modified after the instantiation of the array of instances. This can
# occur if the instantiated module uses a defparam to modify a parameter
# that is used in indexing an array of instances of that module.
# 
# 
# vsim Message # 3039:
# Instantiation of the specified design unit failed either due to
# licensing or due to not being able to load package Standard (VHDL).
# 
# 
# vsim Message # 3040:
# A -g/-G generic/parameter specified on the vsim command line was not
# found in the design being simulated; or a generic/parameter set via
# the foreign interface was not found in the region being loaded;
# or a parameter in an instantiation of a VHDL design unit doesn't exist.
# Verify that the generic/parameter name is spelled correctly and that
# the generic/parameter exists at the expected location in the design.
# It may be necessary to add +acc=g to the vopt command line to preserve
# visibility to the generic/parameter from vsim.
# 
# 
# vsim Message # 3041:
# A non-numeric index was detected in a reference to the specified
# instance array.
# 
# 
# vsim Message # 3042:
# An index outside of the range of the specified instance array was
# detected in a reference to the instance array.
# 
# 
# vsim Message # 3043:
# The specified name in a simple or hierarchical reference cannot be found
# as an instance or object in the design.
# 
# 
# vsim Message # 3044:
# The specified object name was used in a place where the type of that
# object is not allowed. For example, using the hierarchical name of a
# 1-bit register as an index into a multi-bit net would produce this message.
# 
# 
# vsim Message # 3045:
# Not enough arguments are being passed to the specified task or function.
# 
# 
# vsim Message # 3046:
# Too many arguments are being passed to the specified task or function.
# 
# 
# vsim Message # 3047:
# An output or inout argument of a task must be an expression that is
# valid on the left-hand side of a procedural assignment.
# 
# 
# vsim Message # 3048:
# The starting bound of an indexed part-select is out of range of the
# declared bounds of the specified object.
# 
# 
# vsim Message # 3049:
# The ending bound of an indexed part-select is out of range of the
# declared bounds of the specified object.
# 
# 
# vsim Message # 3050:
# The value being supplied to the specified parameter from a -g/-G
# specification is invalid for that parameter.
# 
# 
# vsim Message # 3051:
# This message can be produced because of the association of a VHDL
# array-type generic (whose elements are not an enumerated type) with a
# Verilog real-type parameter, which is not allowed. It can also be
# produced if a VHDL generic of an unsupported type (such as record,
# access, or file) is associated with a Verilog parameter.
# 
# 
# vsim Message # 3052:
# A VHDL array-type generic contains more bits than the Verilog parameter
# to which it is being associated.
# 
# 
# vsim Message # 3053:
# An out or inout port is connected to something that is not a net. This
# error can occur if a register, literal, or some other expression that
# cannot be driven is connected to an out or inout port.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 12.3.6 Connecting dissimilar ports,
# 12.3.7 Port connection rules]
# 
# 
# vsim Message # 3054:
# The object connected to a port at the specified connection point in the
# port list of an array of instances must be either one bit wide (so that
# the port in each instance is connected to the same bit) or of a width
# equal to the number of instances (so that the port in each instance is
# connected to a different bit).
# 
# 
# vsim Message # 3055:
# The connected VHDL signal is not one of the supported types for
# connecting to a Verilog port. The supported types are bit, bit_vector,
# std_ulogic, std_logic, std_ulogic_vector, std_logic_vector, vl_ulogic,
# vl_logic, vl_ulogic_vector, and vl_logic_vector.
# [DOC: ModelSim User's Manual - Mixed VHDL and Verilog Designs Chapter]
# 
# 
# vsim Message # 3056:
# When instantiated from VHDL, a Verilog port must be connected to a VHDL
# signal or left open. It cannot be connected to a VHDL value.
# 
# 
# vsim Message # 3057:
# A VHDL scalar signal can be connected to a Verilog port only if the
# Verilog port is a scalar. A VHDL array signal can be connected to a
# Verilog port only if the Verilog port is a vector.
# [DOC: ModelSim User's Manual - Mixed VHDL and Verilog Designs Chapter]
# 
# 
# vsim Message # 3058:
# When a Verilog vector port is connected to a VHDL array, the array
# length of the VHDL array and the width of the Verilog port must be the
# same.
# [DOC: ModelSim User's Manual - Mixed VHDL and Verilog Designs Chapter]
# 
# 
# vsim Message # 3059:
# A VHDL scalar signal can be connected to a Verilog port only if the
# Verilog port is a scalar. A VHDL array signal can be connected to a
# Verilog port only if the Verilog port is a vector.
# [DOC: ModelSim User's Manual - Mixed VHDL and Verilog Designs Chapter]
# 
# 
# vsim Message # 3060:
# In a mixed language instantiation, the specified Verilog port could
# not be found in the associated VHDL entity. Verify that the correct
# VHDL/Verilog connection is being made and that extended identifiers
# are being used if necessary.
# [DOC: ModelSim User's Manual - Mixed VHDL and Verilog Designs Chapter]
# 
# 
# vsim Message # 3061:
# Too many Verilog ports were specified in a mixed VHDL/Verilog
# instantiation. Verify that the correct VHDL/Verilog connection is
# being made and that the number of ports matches.
# [DOC: ModelSim User's Manual - Mixed VHDL and Verilog Designs Chapter]
# 
# 
# vsim Message # 3062:
# All ports in a Verilog module that is being instantiated from VHDL must
# be named. (An unnamed port is created when one comma in a port list
# follows another comma with no intervening text.)
# [DOC: ModelSim User's Manual - Mixed VHDL and Verilog Designs Chapter]
# 
# 
# vsim Message # 3063:
# The specified VHDL port cannot be found by that name in the Verilog
# module to which it is being connected. Verify that the correct
# VHDL/Verilog connection is being made and that extended identifiers
# are being used if necessary.
# [DOC: ModelSim User's Manual - Mixed VHDL and Verilog Designs Chapter]
# 
# 
# vsim Message # 3064:
# This message is notification that the internal string buffer has
# wrapped to the beginning.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 18.9 String handling]
# 
# 
# vsim Message # 3065:
# The output of a UDP is connected to something other than a net. An
# object connected to the output of a UDP must be something that can be
# driven, therefore an object like a register or a constant is illegal.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 12.3.7 Port connection rules]
# 
# 
# vsim Message # 3066:
# The number of bits in the actual port(s) at the specified port
# connection does not equal the number of bits for the associated port
# of the instance or instance array.
# 
# 
# vsim Message # 3067:
# All modules instantiated within or below a non-debug module must be
# compiled with the -nodebug option.
# [DOC: ModelSim User's Manual - Source code security and -nodebug Section]
# 
# 
# vsim Message # 3068:
# An invalid argument is being passed to the specified system task or function.
# 
# 
# vsim Message # 3069:
# The specified argument to the specified system task or function is invalid.
# 
# 
# vsim Message # 3070:
# Too many arguments are being passed to the specified system task or function.
# 
# 
# vsim Message # 3071:
# Not enough arguments are being passed to the specified system task or function.
# 
# 
# vsim Message # 3072:
# Arguments are being passed to the specified system task or function
# which takes no arguments.
# 
# 
# vsim Message # 3073:
# The wrong number of arguments are being passed to the specified system
# task or function.
# 
# 
# vsim Message # 3074:
# The first argument to $deposit must be a net or a register.
# 
# 
# vsim Message # 3075:
# The second argument to $deposit must be a literal value or a register.
# 
# 
# vsim Message # 3076:
# If the width of the value of the second argument to $deposit is narrower
# than the width of the first argument, then some of the bits in the first
# argument would not be set; therefore, this $deposit call is ignored.
# 
# 
# vsim Message # 3077:
# The specified function takes only one argument which is an object of type real.
# 
# 
# vsim Message # 3078:
# $getpattern can be used only in a continuous assignment statement where
# the left-hand side is a concatenation of scalar nets.
# 
# 
# vsim Message # 3079:
# The width of the argument to $getpattern must be the same as the width
# of the object(s) on the left-hand side of the assignment statement.
# 
# 
# vsim Message # 3080:
# An invalid format specifier was detected in the first argument to a call
# to $value$plusargs. The valid format specifiers are:
#   b, B, d, D, e, E, f, F, g, G, h, H, o, O, s, S, x, X.
# 
# 
# vsim Message # 3081:
# The first argument to $value$plusargs must be a string which is used
# both for locating the plusarg and for formatting the value.
# 
# 
# vsim Message # 3082:
# The second argument to $value$plusargs must be a modifiable variable
# object capable of receiving a value formatted according to the format
# specifier in the first argument.
# 
# 
# vsim Message # 3083:
# An attempt was made to write to a read-only file.
# 
# 
# vsim Message # 3084:
# The specified argument to the specified system task/function must be a
# valid file descriptor. (The left-most bit of the file descriptor must be
# set.)
# 
# 
# vsim Message # 3085:
# The specified argument to the specified system task or function is not
# recognized as an open file descriptor.
# 
# 
# vsim Message # 3086:
# The third argument to $fseek() specifies how to set the position of the
# next input or output operation on the file. This value must be one of
# the following:
#   0 - set position equal to offset bytes
#   1 - set position to current location plus offset
#   2 - set position to EOF plus offset
# 
# 
# vsim Message # 3087:
# An unexpected format character was encountered in a formatted string
# argument to the specified system task or function.
# Valid format characters are:
#   b, B, c, C, d, D, e, E, f, F, g, G, h, H, m, M,
#   o, O, s, S, t, T, u, U, v, V, x, X, z, Z, %
# 
# 
# vsim Message # 3088:
# An unexpected file mode was passed to the specified system task or
# function. Valid file modes are:
#   a, a+, a+b, ab, ab+, r, r+, r+b, rb, rb+, w, w+, w+b, wb, wb+
# 
# 
# vsim Message # 3089:
# The memory (1st) argument to the specified PLA system task must have an
# ascending range.
# 
# 
# vsim Message # 3090:
# The number of PLA inputs listed in the second argument to the specified
# PLA system task must be less than or equal to the size of the memory word.
# 
# 
# vsim Message # 3091:
# The number of PLA outputs listed in the third argument to the specified
# PLA system task must be less than or equal to the number of memory words.
# 
# 
# vsim Message # 3092:
# The start (2nd) argument of the specified system function must be less
# than the end (3rd) argument.  The start value will be returned as output.
# 
# 
# vsim Message # 3093:
# The mean argument to the specified system function must be greater than
# zero. It is an integer input that causes the average value returned by
# the function to approach the value specified.
# 
# 
# vsim Message # 3094:
# The degree of freedom argument to the specified system function must be
# greater than zero. It is an integer input that helps determine the shape
# of the density function. Larger numbers will spread the returned values
# over a wider range.
# 
# 
# vsim Message # 3095:
# The k_stage argument to the specified system function must be greater than zero.
# 
# 
# vsim Message # 3096:
# The first argument to $countdrivers must be a scalar net or a bit-select
# of a vector net.
# 
# 
# vsim Message # 3097:
# The specified argument to $countdrivers must be an integer object into
# which a value can be written.
# 
# 
# vsim Message # 3098:
# The specified argument to the specified system task must be a memory object.
# 
# 
# vsim Message # 3099:
# The first argument to $sdf_annotate must be a filename represented as a
# character string literal or a reg containing a character string naming
# the file to be opened.
# 
# 
# vsim Message # 3100:
# The optional second argument to $sdf_annotate, if specified, must
# specify the scope to which to annotate the information in the SDF file.
# The SDF annotator uses the hierarchy level of the specified instance for
# running the annotation. Array indices are permitted. If the module
# instance is not specified, the SDF Annotator uses the module containing
# the call to the $sdf_annotate system task as the module instance for
# annotation.
# 
# 
# vsim Message # 3101:
# The optional third argument to $sdf_annotate, if specified, must be a
# character string that  provides the name of a configuration file.
# Information in this file can be used to provide detailed control over
# many aspects of annotation.
# 
# 
# vsim Message # 3102:
# The optional fourth argument to $sdf_annotate, if specified, must be a
# character string that provides the name of the log file used during SDF
# annotation. Each individual annotation of timing data from the SDF file
# results in an entry in the log file.
# 
# 
# vsim Message # 3103:
# The optional fifth argument to $sdf_annotate, if specified, must be a
# character string specifying which member of the min/typ/max triples will
# be annotated. The legal values for this string are: MINIMUM, TYPICAL,
# MAXIMUM, TOOL_CONTROL (default). This overrides any MTM_SPEC keywords
# in the configuration file.
# 
# 
# vsim Message # 3104:
# The optional sixth argument to $sdf_annotate, if specified, must be a
# character string specifying the non-negative scale factors to be used
# while annotating timing values. For example, "1.6:1.4:1.2" causes
# minimum values to be multiplied by 1.6, typical values by 1.4, and
# maximum values by 1.2. The default values are 1.0:1.0:1.0. The scale
# factors argument overrides any SCALE_FACTORS keywords in the
# configuration file.
# 
# 
# vsim Message # 3105:
# The optional seventh argument to $sdf_annotate, if specified, must be a
# character string specifying how the scale factors should be applied to
# the min/typ/max triples. The legal values for this string are:
# FROM_MINIMUM, FROM_TYPICAL, FROM_MAXIMUM, FROM_MTM (default). This
# overrides any SCALE_TYPE keywords in the configuration file.
# 
# 
# vsim Message # 3106:
# The file_pathname argument to the specified system task can be a double
# quoted pathname (literal string), a reg type variable, or an expression
# which denotes the file pathname.
# 
# 
# vsim Message # 3107:
# A file with the specified name has already been opened and is in use.
# 
# 
# vsim Message # 3108:
# The specified system task requires a filename argument.
# 
# 
# vsim Message # 3109:
# The specified argument to the specified system task must be a filename.
# The argument can be a literal string or a variable or expression that
# can be interpreted as a string.
# 
# 
# vsim Message # 3110:
# $dumpfile() can be called only once to open a dump file whereas
# $fdumpfile() can be called to open any number of dumpfiles.
# 
# 
# vsim Message # 3111:
# The last argument to the specified system task must be a filename.
# 
# 
# vsim Message # 3112:
# $dumplimit() requires only one argument which is a file size. It
# specifies the maximum size of the VCD file in bytes. When the size of
# the VCD file reaches this number of bytes, the dumping stops and a
# comment is inserted into the VCD file indicating that the dump limit
# was reached.
# 
# 
# vsim Message # 3113:
# The first n-1 arguments to $dumpports() must be module identifiers.
# Only modules are allowed (not variables). If more than one module
# identifier is specified, they must be separated by commas. Pathnames
# to modules are allowed using the period hierarchy separator. Literal
# strings are not allowed for the module identifier. If no module
# identifiers are specified, the scope is the module from which
# $dumpports() is called.
# 
# 
# vsim Message # 3114:
# An unknown file was passed to one of the $dumpports system tasks. This
# message can occur if $dumpportson(), $dumpportsoff(), $dumpportsall(),
# or $dumpportsflush() is called without first calling $dumpports() with
# the specified filename.
# 
# 
# vsim Message # 3115:
# Dynamic loading of the specified file did not succeed. There might be an
# additional message from the loader indicating the problem. Verify that
# the full path to the file is correct and that the file is marked as
# readable. Also verify that the object file was compiled and linked on
# the same type of platform as the ModelSim that is trying to load it.
# "Same type of platform" means not only HP, Solaris, etc., but also
# 32-bit versus 64-bit. 32-bit ModelSim can load only 32-bit shared
# libraries and 64-bit ModelSim can load only 64-bit shared libraries.
# On Solaris, you might need to set the LD_LIBRARY_PATH environment variable.
# 
# 
# vsim Message # 3116:
# A problem occurred while trying to read symbols from a dynamically
# loaded object file. Verify that the object file was compiled and linked
# on the same type of platform as the ModelSim that is trying to load it.
# This message might be followed by another message that gives more
# information about the problem.
# 
# 
# vsim Message # 3117:
# The simulator does not contain the information necessary to support
# the acc_handle_datapath() function.
# 
# 
# vsim Message # 3118:
# The checkpoint command requires a filename argument.
# 
# 
# vsim Message # 3119:
# A problem occurred when trying to open the GUI checkpoint command file.
# The effect is that virtuals will not be saved in the checkpoint file.
# 
# 
# vsim Message # 3120:
# A problem occurred while copying the GUI checkpoint command file into
# the checkpoint file.
# 
# 
# vsim Message # 3122:
# One or more foreign architectures do not contain save/restore callbacks.
# This means that the state of those foreign architectures will not be
# saved in the checkpoint file.
# 
# 
# vsim Message # 3123:
# An unrecoverable error occurred during the checkpoint process;
# therefore, checkpointing is aborted and no checkpoint file is written.
# 
# 
# vsim Message # 3124:
# The value ranges of a formal port and the actual to which it is
# connected must intersect. For example, a formal port whose value range
# is 1 to 5 cannot be connected to an actual signal whose value range is
# 6 to 10.
# 
# 
# vsim Message # 3125:
# The file supplied for the checkpoint command could not be removed
# to allow it to be over-written.  The error should contain additional
# information from the system as to why the failure occurred.
# 
# 
# vsim Message # 3126:
# The file supplied for the checkpoint command could not be over-written
# since it is in use from a currently active "restore".  A different name
# for the new checkpoint file must be given.
# 
# 
# vsim Message # 3127:
# The specified code coverage exclusion file could not be opened for
# reading. Verify that the path to the file exists and that the file
# permissions allow reading.
# 
# 
# vsim Message # 3129:
# The specified value is not a valid line number.
# 
# 
# vsim Message # 3130:
# A veriusertfs entry does not contain a task/function name. This entry
# is ignored. The tfname field of an s_tfcell data structure must contain
# a system task/function name in order for the callback functions to be
# matched to a system task/function call in Verilog code. See veriuser.h
# for a description of the s_tfcell data structure.
# 
# 
# vsim Message # 3131:
# A NULL region ID was passed to the specified function. The region ID
# parameter is required.
# [DOC: ModelSim Foreign Language Interface Manual]
# 
# 
# vsim Message # 3132:
# A NULL process ID was passed to the specified function. The process ID
# parameter is required.
# [DOC: ModelSim Foreign Language Interface Manual]
# 
# 
# vsim Message # 3133:
# A NULL signal ID was passed to the specified function. The signal ID
# parameter is required.
# [DOC: ModelSim Foreign Language Interface Manual]
# 
# 
# vsim Message # 3134:
# A NULL driver ID was passed to the specified function. The driver ID
# parameter is required.
# [DOC: ModelSim Foreign Language Interface Manual]
# 
# 
# vsim Message # 3135:
# A NULL type ID was passed to the specified function. The type ID
# parameter is required.
# [DOC: ModelSim Foreign Language Interface Manual]
# 
# 
# vsim Message # 3136:
# A NULL variable ID was passed to the specified function. The variable ID
# parameter is required.
# [DOC: ModelSim Foreign Language Interface Manual]
# 
# 
# vsim Message # 3137:
# A NULL function pointer was passed to the specified function. The
# function pointer parameter is required.
# [DOC: ModelSim Foreign Language Interface Manual]
# 
# 
# vsim Message # 3138:
# A NULL time pointer was passed to the specified function. The time
# pointer parameter is required.
# [DOC: ModelSim Foreign Language Interface Manual]
# 
# 
# vsim Message # 3139:
# A NULL char pointer was passed to the specified function. The char
# pointer parameter is required.
# [DOC: ModelSim Foreign Language Interface Manual]
# 
# 
# vsim Message # 3140:
# A NULL name was passed to the specified function. The name parameter
# is required.
# [DOC: ModelSim Foreign Language Interface Manual]
# 
# 
# vsim Message # 3141:
# A NULL or empty library name string was passed to mti_LoadRegion().
# The library name parameter is required.
# 
# 
# vsim Message # 3142:
# A NULL or empty design unit name string was passed to mti_LoadRegion().
# The design unit name parameter is required.
# 
# 
# vsim Message # 3143:
# The specified instance name (5th parameter to mti_LoadRegion()) is
# already being used in the requested region (4th parameter).
# 
# 
# vsim Message # 3144:
# The specified name (1st parameter to mti_CreateProcess()) is already
# being used in the current context.
# 
# 
# vsim Message # 3145:
# The specified priority is invalid. Please see
# <install_dir>/modeltech/include/mti.h for valid priority values.
# 
# 
# vsim Message # 3146:
# The specified name (1st parameter to mti_CreateProcessWithPriority())
# is already being used in the current context.
# 
# 
# vsim Message # 3147:
# A problem occurred when trying to restore the requested process. This
# can occur if the name passed to mti_RestoreProcess() does not match the
# name used when the process was originally created. It can also occur if
# internal data for the process is missing.
# [DOC: ModelSim Foreign Language Interface Manual - mti_RestoreProcess()]
# 
# 
# vsim Message # 3148:
# An invalid force type was passed to mti_ForceSignal(). Please see
# <install_dir>/modeltech/include/mti.h for the valid force types.
# 
# 
# vsim Message # 3149:
# The specified problem occurred during the actual forcing or releasing of
# the signal.
# 
# 
# vsim Message # 3150:
# mti_GetArrayVarValue() cannot be used to get the value of a record variable.
# [DOC: ModelSim Foreign Language Interface Manual - mti_GetArrayVarValue()]
# 
# 
# vsim Message # 3151:
# mti_GetVarAddr() cannot be used to get the address of a record variable.
# [DOC: ModelSim Foreign Language Interface Manual - mti_GetVarAddr()]
# 
# 
# vsim Message # 3152:
# mti_SetVarValue() cannot be used to set the value of a record variable.
# [DOC: ModelSim Foreign Language Interface Manual - mti_SetVarValue()]
# 
# 
# vsim Message # 3153:
# A NULL value pointer was passed to mti_Image(). The value pointer
# parameter is required.
# [DOC: ModelSim Foreign Language Interface Manual - mti_Image()]
# 
# 
# vsim Message # 3154:
# A NULL function pointer was passed to the specified function.
# The function pointer parameter is required.
# [DOC: ModelSim Foreign Language Interface Manual]
# 
# 
# vsim Message # 3155:
# The FLI is not available in the PE version of the product.
# 
# 
# vsim Message # 3156:
# A NULL command was passed to mti_SetCmdIntercepts(). The command
# parameter is required.
# [DOC: ModelSim Foreign Language Interface Manual - mti_SetCmdIntercepts()]
# 
# 
# vsim Message # 3157:
# An invalid command was passed to mti_SetCmdIntercepts().
# [DOC: ModelSim Foreign Language Interface Manual - mti_SetCmdIntercepts()]
# 
# 
# vsim Message # 3158:
# A NULL section name was passed to mti_FindProjectEntry(). The section
# name parameter is required.
# [DOC: ModelSim Foreign Language Interface Manual - mti_FindProjectEntry()]
# 
# 
# vsim Message # 3159:
# The specified foreign initialization function could not be found in the
# specified object file. Verify that the initialization function name is
# spelled correctly and that this object file is supposed to contain this
# function.
# 
# 
# vsim Message # 3160:
# An error occurred when trying to load the specified object file. Verify
# that the object file exists and that you have read permission. Also, if
# the foreign attribute that refers to the object file contains a reference
# to an environment variable, make sure the environment variable has a value.
# [DOC: ModelSim Foreign Language Interface Manual - Using the VHDL FLI Section]
# 
# 
# vsim Message # 3161:
# A foreign attribute must contain the name of an initialization function
# and the name of a shared library.
# [DOC: ModelSim Foreign Language Interface Manual]
# 
# 
# vsim Message # 3162:
# A foreign attribute must contain the name of an initialization function
# and the name of one shared library. Optional parameters can follow a
# semi-colon (;).
# [DOC: ModelSim Foreign Language Interface Manual]
# 
# 
# vsim Message # 3164:
# A NULL signal name was passed to mti_GetDrivingSignals(). The signal
# name parameter is required.
# [DOC: ModelSim Foreign Language Interface Manual - mti_GetDrivingSignals()]
# 
# 
# vsim Message # 3165:
# An invalid signal name was passed to mti_GetDrivingSignals(). Verify
# that the signal name is spelled correctly and that the signal exists in
# the design.
# 
# 
# vsim Message # 3166:
# The specified object file was loaded more than once. Verify that this
# was intentional because the behavior of global data structures could be
# not as expected.
# 
# 
# vsim Message # 3167:
# The LMC_HOME environment variable must be set to the root of the
# SmartModel Library installation directory when using the vsim option -lmc.
# 
# 
# vsim Message # 3168:
# A problem occurred while trying to find the specified symbol in a
# dynamically loaded object file.
# 
# 
# vsim Message # 3169:
# Changed package bodies are not automatically reloaded because all
# generated code that depends upon a package uses type and constant
# information directly out of the package body as part of the generated
# code. Reloading a package body would corrupt all generated code that
# uses the package body; therefore, the entire design must be reloaded.
# 
# 
# vsim Message # 3170:
# The specified design unit could not be found for loading. Verify that
# the design unit has been compiled into the correct library and that the
# library is mapped correctly. (Check the modelsim.ini file.) The vlib
# command creates ModelSim libraries and the vmap command maps them.
# 
# 
# vsim Message # 3171:
# The compiled machine code for the specified design unit could not be
# found for loading. Verify that the design unit has been compiled into
# the correct library and that the library is mapped correctly. (Check the
# modelsim.ini file.) The vlib command creates ModelSim libraries and the
# vmap command maps them.
# 
# 
# vsim Message # 3172:
# Here is an example of how this message can occur.
# Say you have a design where module A instantiates module B, module A
# changes one or more parameters of module B, and this design is compiled
# with -fast. Say you have another design where module C instantiates
# module B and you compile module C without -fast and you do not recompile
# module B. In this case, module C is attempting to use module B which has
# had some of its parameters frozen for use only with module A; therefore,
# this error message occurs.
# 
# 
# vsim Message # 3173:
# No architecture could be found for the specified entity. Verify that the
# entity and its architecture(s) have been compiled into the correct library
# and that the library is mapped correctly. (Check the modelsim.ini file.)
# The vlib command creates ModelSim libraries and the vmap command
# maps them.
# 
# 
# vsim Message # 3174:
# A package that contains certain kinds of objects like procedures,
# functions, or deferred constants requires a package body to complete
# their definition. Verify that the package and its body have been
# compiled into the correct library and that the library is mapped
# correctly. (Check the modelsim.ini file.) The vlib command creates
# ModelSim libraries and the vmap command maps them.
# 
# If you get this message for the std.standard package, then this package
# has been corrupted and you need to uninstall and reinstall ModelSim.
# 
# 
# vsim Message # 3175:
# A problem occurred while trying to open the specified file. Verify that
# the path exists and that you have write permission in the directory.
# The assert file is controlled by either the -assertfile option to vsim
# or the AssertFile variable in the modelsim.ini file.
# 
# 
# vsim Message # 3176:
# The number provided to the step command must be an integer. The usage
# of the command should be displayed after the error message.
# [DOC: ModelSim Command Reference - step command]
# 
# 
# vsim Message # 3177:
# The restore command requires a filename argument.
# 
# 
# vsim Message # 3178:
# The checkpoint file is either invalid or corrupted. Verify that the
# specified file path points to a checkpoint file.
# 
# 
# vsim Message # 3180:
# When attempting to restore the state of a previous simulation an
# unrecoverable problem occurred.  (This is an internal error and should
# not normally occur.)
# 
# 
# vsim Message # 3181:
# The simulator was unable to allocate the required amount of memory in
# the required location during a restore operation. Verify that the
# restore is being done on the same type of machine as that which created
# the checkpoint file.
# 
# 
# vsim Message # 3182:
# A checkpoint file that was not created during the current session of
# vsim cannot be restored with the restore command. Instead, you must quit
# vsim and reinvoke it with the -restore option.
# 
# 
# vsim Message # 3183:
# A checkpoint file must be loaded into the same version of the simulator
# as the one by which it was written.
# 
# 
# vsim Message # 3184:
# A checkpoint file must be restored on the same type of platform on
# which it was created.
# 
# 
# vsim Message # 3185:
# The number of bytes logged as written to a checkpoint file does not
# match the number of bytes read from the checkpoint file during the
# specified restore phase. A mismatch often indicates reading out of
# position, because the saves call backs did not match the restore
# call backs.
# 
# 
# vsim Message # 3186:
# Restore of the simulation failed do to a licensing error.
# 
# 
# vsim Message # 3187:
# The time resolution taken from the checkpoint file is not compatible
# with the time resolution with which the simulator was invoked. In order
# to restore the checkpoint file, reinvoke the simulator with an appropriate
# time resolution.
# 
# 
# vsim Message # 3188:
# An attempt to open the specified user file that was open when the
# checkpoint file was created failed. Verify that the file path is valid
# and that file permissions are set for proper access.
# 
# 
# vsim Message # 3189:
# A user file that was open for output and not at the initial position
# (not empty) when the checkpoint file was created could not be found
# during the restore operation. The simulator will attempt to recreate
# the file in read/write mode and reposition it to its former position.
# The original file contents cannot be restored.
# 
# 
# vsim Message # 3190:
# There was a problem positioning the specified file to the position where
# it was at the time of the checkpoint.
# 
# 
# vsim Message # 3191:
# There was a problem creating the GUI restore command file. This means
# that the GUI might not come up in the same state that it was in when the
# checkpoint was created. Verify that the file path exists and that you
# have write permission in the directory.
# 
# 
# vsim Message # 3192:
# The -fast compiled secondary might have been deleted from the library,
# or a subsequent compilation of a different module having the same name
# might have purged the library of the -fast compiled secondaries for that
# module.
# 
# 
# vsim Message # 3193:
# Dynamic loading of the specified file did not succeed. Verify that the
# full path to the file is correct and that the file is marked as readable.
# Also verify that the object file was compiled and linked on the same type
# of platform as the ModelSim that is trying to load it.
# 
# 
# vsim Message # 3194:
# The delay scale specified with the vsim options -sdfmin, -sdftyp, and
# -sdfmax must be a real number.
# For example:
#   vsim -sdfmin@0.5 test11.sdf top
# 
# 
# vsim Message # 3195:
# An @ symbol was detected in an -sdfmin, -sdftyp, or -sdfmax vsim option
# but it was not followed by a delay scale. The delay scale specified with
# the vsim options -sdfmin, -sdftyp, and -sdfmax must be a real number.
# For example:
#   vsim -sdfmin@0.5 test11.sdf top
# 
# 
# vsim Message # 3196:
# An SDF file specified with an -sdfmin, -sdftyp, or -sdfmax vsim option
# could not be found. Verify that the file exists and that you have the
# correct permissions to access the file.
# 
# 
# vsim Message # 3197:
# Dynamic loading of the specified file did not succeed. Verify that the
# full path to the file is correct and that the file is marked as readable.
# Also verify that the object file was compiled and linked on the same
# type of platform as the ModelSim that is trying to load it. "Same type
# of platform" means not only HP, Solaris, etc., but also 32-bit versus
# 64-bit. 32-bit ModelSim can load only 32-bit shared libraries and 64-bit
# ModelSim can load only 64-bit shared libraries. On Solaris, you might
# need to set the LD_LIBRARY_PATH environment variable.
# 
# 
# vsim Message # 3198:
# Unloading of a dynamically loaded shared object did not succeed for the
# specified reason.
# 
# 
# vsim Message # 3199:
# An unexpected error occurred while processing the Load Complete callback
# list at the end of the loading phase.
# 
# 
# vsim Message # 3200:
# An unexpected error occurred while processing the Restore Complete
# callback list at the end of the restore phase.
# 
# 
# vsim Message # 3201:
# The specified Tcl init file could not be opened. Verify that the file
# path exists and that you have read permission.
# 
# 
# vsim Message # 3202:
# The signal connected to the specified port has a type conversion or
# conversion function in the port map. This cannot be supported with the
# -dumpports functionality.
# 
# 
# vsim Message # 3203:
# When dumping a VHDL VCD file with the -dumpports option, the signal
# connected to an INOUT port must be a std_ulogic type or subtype thereof.
# 
# 
# vsim Message # 3204:
# If you are trying to generate a VCD file for a Verilog design and
# resimulate it then you have most likely used the wrong vcd commands.
# Here are the correct procedures to generate and resimulate a Verilog
# design with a VCD file:
# 
#   vsim <design>
#   vcd dumpports -file <vcd_file>
#   run -all
#   quit -f
#   vsim -vcdstim <vcd_file> <design>
#   run -all
# 
# Note that the VCD file format created with dumpports is not the correct
# format for the -vcdread option.
# 
# Here are the correct procedures to generate a VCD file from a VHDL
# design that can be resimulated with the -vcdread option:
# 
#   vsim <design>
#   splitio <design block>
#   vcd file -nomap -direction
#   vcd add -ports <design_block>/*
#   run -all
#   quit -sim
#   vsim -vcdread dump.vcd <design>
#   run -all
# 
# [DOC: ModelSim Command Reference - splitio, vcd, and vsim commands]
# 
# 
# vsim Message # 3205:
# When using the vsim option -vcdread, the top level design unit must
# be a VHDL entity/architecture. When using the vsim option -vcdstim, the
# top level design unit must be either a VHDL entity/architecture or a
# Verilog module.
# [DOC: ModelSim Command Reference - vsim command]
# 
# 
# vsim Message # 3206:
# The specified port which appears in the VCD file cannot be found in
# the top-level design unit. Verify that the correct VCD file is being
# applied to the design.
# 
# 
# vsim Message # 3207:
# If you are trying to generate a VCD file for a VHDL, Verilog, or mixed
# HDL design, and resimulate it, then you have most likely used the wrong
# vcd commands.
# [DOC: ModelSim User's Manual - Value Change Dump (VCD) Files Chapter]
# 
# 
# vsim Message # 3208:
# The VCD parser encountered the end of the VCD file while it was looking
# for a token. Check the VCD file to make sure that its format is valid.
# 
# 
# vsim Message # 3209:
# The VCD parser encountered the specified character instead of the
# '$' that it was expecting when attempting to read a VCD command.
# 
# 
# vsim Message # 3210:
# An unexpected command was encountered in the VCD file.
# The valid commands are:
#   $comment    $date      $dumpall  $dumpoff         $dumpon
#   $dumpports  $dumpvars  $end      $enddefinitions  $scope
#   $timescale  $upscope   $var      $vcdclose        $version
# 
# 
# vsim Message # 3211:
# The VCD parser encountered the specified character instead of
# the numeric digit that it was expecting.
# 
# 
# vsim Message # 3212:
# The VCD parser encountered the specified timescale number instead
# of the 1, 10, or 100 that it was expecting. The timescale must be
# specified as 1, 10 or 100 followed by a time unit which is one of:
# fs, ps, ns, us, ms, or s.
# 
# 
# vsim Message # 3213:
# The VCD parser encountered the specified timescale unit instead
# of the valid timescale unit that is was expecting. The timescale
# must be specified as 1, 10 or 100 followed by a time unit which is
# one of: fs, ps, ns, us, ms, or s.
# 
# 
# vsim Message # 3214:
# The VCD timescale must be greater than or equal to the simulator
# time resolution.
# 
# 
# vsim Message # 3215:
# The width of a port in a $var statement must be 1.
# 
# 
# vsim Message # 3216:
# An unexpected command was encountered in the definition section of
# the VCD file. The valid commands are:
#   $comment  $date     $enddefinitions  $scope  $timescale
#   $upscope  $version  $vcdclose        $var
# 
# 
# vsim Message # 3217:
# A port of type std_logic can have only the following values:
#   U, X, 0, 1, Z, W, L, H, -
# 
# 
# vsim Message # 3218:
# A port of type bit can have only the following values: 0, 1.
# 
# 
# vsim Message # 3219:
# The valid extended VCD port values are:
#   D   Input low
#   d   Input low (two or more drivers active)
#   0   Input and output are driving low
#   U   Input high
#   u   Input high (two or more drivers active)
#   1   Input and output are driving high
#   N   Input unknown
#   Z   Input tri-state
#   F   Input and output unconnected
#   f   Input and output tri-state
#   L   Output low
#   l   Output low (two or more drivers active)
#   H   Output high
#   h   Output high (two or more drivers active)
#   X   Output unknown
#   T   Output tri-state
#   A   Unknown (input driving low, output driving high)
#   a   Unknown (input driving low, output driving unknown)
#   B   Unknown (input driving high, output driving low)
#   b   Unknown (input driving high, output driving unknown)
#   C   Unknown (input driving unknown, output driving low)
#   c   Unknown (input driving unknown, output driving high)
#   ?   Unknown
# [DOC: ModelSim User's Manual - Value Change Dump (VCD) Files Chapter]
# 
# 
# vsim Message # 3220:
# While resimulating from a VCD file, a $dumpoff command was encountered.
# This command cannot be simulated and since there will be data missing
# beyond this point because of the $dumpoff resimulation is stopped.
# 
# 
# vsim Message # 3221:
# The expected VCD simulation commands are:
#   $comment   $dumpall  $dumpon    $dumpports
#   $dumpvars  $end      $vcdclose  #<time>
#   b, B, r, R, 0, 1, x, X, z, Z, u, U, w, W, l, L, h, H, -, p
# 
# 
# vsim Message # 3222:
# The specified port with the specified mode listed in the VCD file
# could not be found in the design.
# 
# 
# vsim Message # 3223:
# The specified object that was found to match a name in the VCD file
# must be a signal in order for VCD stimulation to work.
# 
# 
# vsim Message # 3224:
# The specified object that was found to match a name in the VCD file
# must be of mode IN or INOUT in order for VCD stimulation to work.
# 
# 
# vsim Message # 3225:
# The specified object that was found to match a name in the VCD file
# must be a scalar in order for VCD stimulation to work.
# 
# 
# vsim Message # 3226:
# The specified object that was found to match a name in the VCD file
# must be a vector in order for VCD stimulation to work.
# 
# 
# vsim Message # 3227:
# The specified object that was found to match a name in the VCD file
# must be of type STD_LOGIC or BIT in order for VCD stimulation to work.
# 
# 
# vsim Message # 3228:
# The specified object that was found to match a name in the VCD file
# must have a range that encompasses the specified index in order for
# VCD stimulation to work.
# 
# 
# vsim Message # 3229:
# The specified object that was found to match a name in the VCD file
# must be a NET in order for VCD stimulation to work.
# 
# 
# vsim Message # 3230:
# During VCD stimulation a #<time> command read from the VCD file was
# not greater than or equal to the current simulation time. This is an
# unrecoverable error. The VCD file is closed and no further processing
# of the VCD file is done.
# 
# 
# vsim Message # 3231:
# A problem was encountered while trying to reposition a user file
# that had previously been closed because too many files were open.
# This message should be followed by another message that gives more
# information about the problem.
# 
# 
# vsim Message # 3232:
# A problem was encountered while trying to close the least recently
# used user file. This message might be followed by another message
# that gives more information about the problem.
# 
# 
# vsim Message # 3233:
# Settings of the Veriuser ini variable are frozen at elaboration
# whereas the PLIOBJS environment variable setting overrides the
# elaboration setting.
# 
# 
# vsim Message # 3234:
# The specified generic either could not be found in the model or was
# declared to be of an incorrect type. VITAL timing and control generics
# must have a specific name format and be of a specific set of subtypes
# (a scalar of type time, an array of scalars of type time, or an array
# of arrays of scalars of type time).
# [DOC: IEEE Std 1076.4-2000 VITAL ASIC Modeling Specification - 4.3.2 Generics]
# 
# 
# vsim Message # 3235:
# The specified generic must be a scalar of type time, an array of
# scalars of type time, or an array of arrays of scalars of type time.
# 
# 
# vsim Message # 3236:
# The specified internal signal delay (tisd) generic is not required
# when the associated signal has the most negative setup time which
# defined the value for the internal clock delay.
# 
# 
# vsim Message # 3237:
# A shared library filename could not be found in the specified
# foreign attribute. A foreign attribute must be of the form:
#   ATTRIBUTE foreign OF architecture_name : ARCHITECTURE IS
#     "app_init_func_name app.sl; parameter";
# 
# 
# vsim Message # 3238:
# The format specified was accStringVal, accBinStrVal, accOctStrVal,
# accDecStrVal, or accHexStrVal but the value->value.str field passed
# to acc_set_value() is NULL.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.96 acc_set_value()]
# 
# 
# vsim Message # 3240:
# The SDF file is attempting to set a non-existent generic. Verify that
# the SDF file is being applied at the correct level of the design. If
# the cell being annotated is a VITAL cell, the simulator constructs a
# VITAL generic name based on the SDF entry. The VITAL cell must contain
# a generic by that name.
# [DOC: IEEE Std 1076.4-2000 VITAL ASIC Modeling Specification -
#  4.3.2.1 Timing generics, 5.2.7 Mapping to timing generics]
# [DOC: ModelSim User's Manual -
#  Standard Delay Format (SDF) Timing Annotation Chapter]
# 
# 
# vsim Message # 3241:
# A generic must have an initial value so that the INCREMENT
# specification can increment or decrement it.
# 
# 
# vsim Message # 3242:
# The number of edges specified in the SDF construct does not match
# the number of edges expected by the specified generic.
# [DOC: IEEE Std 1076.4-2000 VITAL ASIC Modeling Specification -
#  5.2 The VITAL SDF map]
# 
# 
# vsim Message # 3243:
# The number of edges specified for a delay must be 1, 2, 3, 6, or 12.
# [DOC: OVI Standard Delay Format Specification v3.0 -
#  Chapter 3, Section: Delay Definition Entries (page 3-16)]
# 
# 
# vsim Message # 3244:
# While processing an interconnect path delay generic with multiple
# sources, an unexpected SDF statement was encountered when either a
# PORT or INTERCONNECT statement was expected.
# 
# 
# vsim Message # 3245:
# The specified SDF constructs must have bit specs on the same ports.
# 
# 
# vsim Message # 3246:
# The specified generic must be either of type VitalDelayType or
# of type VitalDelayArrayType.
# 
# 
# vsim Message # 3247:
# If an SDF construct does not contain bit specs (indicating an array
# type), then the corresponding generic must be of type VitalDelayType.
# 
# 
# vsim Message # 3248:
# Based on the SDF construct at the specified file/line, the
# specified generic should be of the specified type.
# [DOC: IEEE Standard for VITAL ASIC (Application Specific Integrated Circuit)
#      Modeling Specification (Std 1076.4-2000) - Chapter 5. Backannotation]
# 
# 
# vsim Message # 3249:
# If an SDF construct does not contain bit specs (indicating an
# array type), then the corresponding generic must be of one of the
# specified scalar types.
# 
# 
# vsim Message # 3250:
# A cell INSTANCE specified in the SDF file could not be found at the
# hierarchical level in the design at which the SDF annotation is being
# applied. Verify that the SDF file is being applied at the correct level
# of the design.
# [DOC: OVI Standard Delay Format Specification v3.0 -
#  Chapter 3, Section: Cell Entries (pages 3-9 to 3-10)]
# [DOC: ModelSim User's Manual -
#  Standard Delay Format (SDF) Timing Annotation Chapter]
# 
# 
# vsim Message # 3251:
# Either the specified port or the instance containing the port could
# not be found in the design. Verify that the SDF file is being applied
# at the correct level of the design.
# [DOC: ModelSim User's Manual -
#  Standard Delay Format (SDF) Timing Annotation Chapter]
# 
# 
# vsim Message # 3252:
# A non-port object was detected in an SDF construct where a port was expected.
# 
# 
# vsim Message # 3253:
# A bit-select or part-select was detected on a scalar port. Verify
# that the SDF file is being applied at the correct level of the design.
# 
# 
# vsim Message # 3254:
# A part-select must have the same direction (ascending or descending)
# as the bounds of the object.
# 
# 
# vsim Message # 3255:
# The specified bit-select or part-select is not entirely within the
# bounds of the object.
# 
# 
# vsim Message # 3256:
# The two ports specified in an IOPATH, PATHPULSE, NOCHANGE, SKEW,
# SETUP, HOLD, SETUPHOLD, RECOVERY, REMOVAL, or RECREM entry must be
# from the same module instance.
# 
# 
# vsim Message # 3257:
# If both the source and the destination ports of an INTERCONNECT
# statement are outputs, then the delay is annotated to the source port.
# If the source port is not driven by gate level primitives and does not
# have any specify block path to it, then there is nothing to which the
# annotation can be applied.
# 
# 
# vsim Message # 3258:
# For the specified DEVICE construct in the SDF file, no paths to an
# output port could be found.
# 
# 
# vsim Message # 3259:
# The first port instance in an INTERCONNECT entry must be an output
# or bidirectional port. The second port instance must be an input
# or bidirectional port.
# [DOC: OVI Standard Delay Format Specification v3.0 -
#  Chapter 3, Section: Delay Definition Entries (page 3-22)]
# 
# 
# vsim Message # 3260:
# The module instance related to the IOPATH construct at the specified
# line in the SDF file does not contain the expected input/bidir to
# output/bidir path delay in a specify block. Verify that the SDF file
# is being applied to the correct design instance and that a specify block
# exists in this module instance and contains the appropriate IO path.
# If you are using the vlog +delay_mode options, they could affect the
# delays being used.
# 
# 
# vsim Message # 3261:
# No module path in a specify block in the related module instance was
# found to match the SDF construct on the specified line. Verify that
# the SDF file is being applied to the correct design instance and that
# a specify block exists in this module instance and contains the
# appropriate module path. If a COND is being used, verify that the order
# of the condition is the same in the specify block as it is in the
# SDF file.
# 
# 
# vsim Message # 3262:
# No timing check in a specify block in the related module instance was
# found to match the SDF construct on the specified line. Verify that
# the SDF file is being applied to the correct design instance and that
# a specify block exists in this module instance and contains the
# appropriate timing check.
# 
# 
# vsim Message # 3263:
# The name specified in a CELLTYPE entry does not match the definition
# name of the module or primitive instance specified in the INSTANCE
# entry. Verify that the SDF file is being applied to the correct
# design instance.
# 
# 
# vsim Message # 3264:
# A cell instance must refer to a module or primitive, or a VITAL architecture.
# 
# 
# vsim Message # 3265:
# The specified VHDL instance was not found during VHDL VITAL SDF
# annotation but was found during Verilog SDF annotation using Verilog
# hierarchical path rules. VHDL VITAL instances must be specified with
# a full VHDL hierarchical path name to the -sdfmin, -sdftyp, and
# -sdfmax vsim options.
# 
# 
# vsim Message # 3266:
# SDF annotation can be applied only to Verilog module instances and
# VHDL VITAL instances. The specified instance is neither of these.
# 
# 
# vsim Message # 3267:
# The specified generic associated with the specified SDF file/line
# either could not be found in the model or was declared to be of an
# incorrect type. VITAL timing and control generics must have a
# specific name format and be of a specific set of subtypes (a scalar
# of type time, an array of scalars of type time, or an array of
# arrays of scalars of type time).
# [DOC: IEEE Std 1076.4-2000 VITAL ASIC Modeling Specification - 4.3.2 Generics]
# 
# 
# vsim Message # 3268:
# A VITAL compliant VHDL model that models negative constraints must
# declare an internal clock delay generic for each clock (reference)
# signal that is associated with a negative setup (or recovery) constraint.
# [DOC: IEEE Std 1076.4-2000 VITAL ASIC Modeling Specification -
#  8.2 Modeling negative timing constraints]
# 
# 
# vsim Message # 3269:
# A VITAL compliant VHDL model that models negative constraints must
# declare an internal clock delay generic for each clock (reference)
# signal that is associated with a negative setup (or recovery) constraint.
# [DOC: IEEE Std 1076.4-2000 VITAL ASIC Modeling Specification -
#  8.2 Modeling negative timing constraints]
# 
# 
# vsim Message # 3270:
# A VITAL compliant VHDL model that models negative constraints must
# declare an internal signal delay generic for every data (test)
# signal that is associated with a negative hold (or removal) constraint.
# [DOC: IEEE Std 1076.4-2000 VITAL ASIC Modeling Specification -
#  8.2 Modeling negative timing constraints]
# 
# 
# vsim Message # 3271:
# A VITAL compliant VHDL model that models negative constraints must
# declare an internal signal delay generic for every data (test)
# signal that is associated with a negative hold (or removal) constraint.
# [DOC: IEEE Std 1076.4-2000 VITAL ASIC Modeling Specification -
#  8.2 Modeling negative timing constraints]
# 
# 
# vsim Message # 3272:
# A timing generic beginning with the prefix tbpd represents a
# propagation delay that is adjusted to accommodate negative timing
# constraints. There must exist, in the same entity generic clause, a
# corresponding propagation delay (tpd) generic denoting the same ports,
# condition name, and edge.
# [DOC: IEEE Std 1076.4-2000 VITAL ASIC Modeling Specification -
#  4.3.2.1.3.14 Biased propagation delay]
# 
# 
# vsim Message # 3273:
# A timing generic beginning with the prefix tbpd represents a
# propagation delay that is adjusted to accommodate negative timing
# constraints. There must exist, in the same entity generic clause,
# a corresponding propagation delay (tpd) generic denoting the same
# ports, condition name, and edge.
# [DOC: IEEE Std 1076.4-2000 VITAL ASIC Modeling Specification -
#  4.3.2.1.3.14 Biased propagation delay]
# 
# 
# vsim Message # 3274:
# There are two possible causes for this error message:
# 
# 1) An attempt was made to load and execute one or more libraries that
# were compiled with a different major version number than the simulator.
# Libraries must always be recompiled or refreshed when moving from one
# major version of ModelSim to another (for example, from 5.5 to 5.6).
# The -refresh option of the compiler can be used if the HDL source code
# is not available.
# 
# 2) A required shared library was not loaded; therefore, one or more
# foreign subprograms do not have any associated executable code. Find
# the shared library that contains the required foreign subprogram code
# and make sure that vsim loads it. You can do this via a FOREIGN attribute
# in your VHDL code or by specifying the -foreign option to vsim. If you
# have already specified the shared library, make sure that the path
# to it exists and that you have the proper permissions to read it.
# 
# 
# vsim Message # 3275:
# The specified design unit could not be found for loading. Verify that
# the design unit has been compiled into the correct library and that the
# library is mapped correctly. (Check the modelsim.ini file.) The vlib
# command creates ModelSim libraries and the vmap command maps them.
# 
# 
# vsim Message # 3276:
# ModelSim will process only one -do command-line option. In order to
# invoke multiple do files, create a top-level do file and have it call
# other do files via the do command.
# 
# 
# vsim Message # 3277:
# The -elab option causes ModelSim to elaborate the design and then save
# it to a file, therefore a design unit name must be specified.
# 
# 
# vsim Message # 3278:
# The -elab and -load_elab options are mutually exclusive. The -elab
# option elaborates a design and saves the elaboration in a file
# whereas the -load_elab option loads a simulation from a previously
# created elaboration file.
# 
# 
# vsim Message # 3279:
# The -elab and -restore options are mutually exclusive. The -elab
# option elaborates a design and saves the elaboration in a file
# whereas the -restore option loads a simulation from a previously
# created checkpoint file.
# 
# 
# vsim Message # 3280:
# No more than ten -foreign options can be specified. Alternate methods
# of loading foreign shared libraries are via foreign architectures or
# foreign subprograms.
# [DOC: ModelSim Command Reference - vsim command]
# [DOC: ModelSim Foreign Language Interface Manual]
# 
# 
# vsim Message # 3281:
# A command line generic assignment must be of one of the following forms:
#   -g<generic_name>=<value>
#   -G<generic_name>=<value>
# [DOC: ModelSim Command Reference - vsim command]
# 
# 
# vsim Message # 3282:
# The +pulse_r/<percent> option sets the module path pulse rejection
# limit as a percentage of the path delay, therefore the value must be
# a number in the range 0 to 100 inclusive.
# 
# 
# vsim Message # 3283:
# The +pulse_r/<percent> option sets the module path pulse rejection
# limit as a percentage of the path delay, therefore the value must be
# a number in the range 0 to 100 inclusive.
# 
# 
# vsim Message # 3284:
# The pulse reject limit must be less than or equal to the pulse error
# limit. A pulse that is less than the reject limit will not propagate
# to the module path destination. A pulse that is less than the error
# limit but greater than or equal to the reject limit will generate a
# logic X on the path destination. A pulse that is greater than or equal
# to the error limit will propagate to the path destination.
# 
# 
# vsim Message # 3285:
# The +pulse_e/<percent> option sets the module path pulse error limit
# as a percentage of the path delay, therefore the value must be a
# number in the range 0 to 100 inclusive.
# 
# 
# vsim Message # 3286:
# The +pulse_e/<percent> option sets the module path pulse error limit
# as a percentage of the path delay, therefore the value must be a
# number in the range 0 to 100 inclusive.
# 
# 
# vsim Message # 3287:
# The pulse reject limit must be less than or equal to the pulse error
# limit. A pulse that is less than the reject limit will not propagate
# to the module path destination. A pulse that is less than the error
# limit but greater than or equal to the reject limit will generate a
# logic X on the path destination. A pulse that is greater than or equal
# to the error limit will propagate to the path destination.
# 
# 
# vsim Message # 3288:
# The +pulse_int_r/<percent> option sets the interconnect path pulse
# rejection limit as a percentage of the path delay, therefore the
# value must be a number in the range 0 to 100 inclusive.
# 
# 
# vsim Message # 3289:
# The +pulse_int_r/<percent> option sets the interconnect path pulse
# rejection limit as a percentage of the path delay, therefore the
# value must be a number in the range 0 to 100 inclusive.
# 
# 
# vsim Message # 3290:
# The pulse reject limit must be less than or equal to the pulse error
# limit. A pulse that is less than the reject limit will not propagate
# to the module path destination. A pulse that is less than the error
# limit but greater than or equal to the reject limit will generate a
# logic X on the path destination. A pulse that is greater than or equal
# to the error limit will propagate to the path destination.
# 
# 
# vsim Message # 3291:
# The +pulse_int_e/<percent> option sets the interconnect path pulse
# error limit as a percentage of the path delay, therefore the value
# must be a number in the range 0 to 100 inclusive.
# 
# 
# vsim Message # 3292:
# The +pulse_int_e/<percent> option sets the interconnect path pulse
# error limit as a percentage of the path delay, therefore the value
# must be a number in the range 0 to 100 inclusive.
# 
# 
# vsim Message # 3293:
# The pulse reject limit must be less than or equal to the pulse error
# limit. A pulse that is less than the reject limit will not propagate
# to the module path destination. A pulse that is less than the error
# limit but greater than or equal to the reject limit will generate a
# logic X on the path destination. A pulse that is greater than or equal
# to the error limit will propagate to the path destination.
# 
# 
# vsim Message # 3294:
# The options -excluded and -totals cannot be used concurrently nor can
# they be used with the options -lines and -zeroes; however, the options
# -lines and -zeroes can be used concurrently.
# [DOC: ModelSim Command Reference - coverage report command]
# 
# 
# vsim Message # 3295:
# The -filemap_elab option defines a file mapping to be used during
# the loading of an elaborated design that was previously saved. This
# option can be used only when the -load_elab option is used.
# 
# 
# vsim Message # 3296:
# The specified option is not a valid simulator invocation option.
# [DOC: ModelSim Command Reference - vsim command]
# 
# 
# vsim Message # 3297:
# Some modules contain instances that have been inlined as a result of
# performance optimizations. The ports of these instances are not visible
# and therefore cannot be annotated to. You must recompile the modules
# that are specified in the mti_inlined_mods.txt file (or the transcript
# in case mti_inlined_mods.txt could not be opened for writing).
# 
# 
# vsim Message # 3298:
# A bus fight has been detected where two or more drivers are driving
# a node with the same strength and that strength is the strongest of
# all drivers currently driving the node.
# 
# 
# vsim Message # 3299:
# A node that is in a high impedance state for a time equal to or
# greater than the user-defined limit has been detected.
# 
# 
# vsim Message # 3300:
# The specified node was active after the period during which the
# circuit should have settled.
# 
# 
# vsim Message # 3303:
# The specified feature is not supported when the simulator is in
# cosimulation mode.
# 
# 
# vsim Message # 3304:
# You do not have a license that allows you to use the specified feature.
# 
# 
# vsim Message # 3305:
# The command that caused this error message to appear cannot be used
# until code coverage is turned on. Code coverage can be turned on by
# specifying the vsim option -coverage.
# [DOC: ModelSim User's Manual - Code Coverage Chapter]
# 
# 
# vsim Message # 3306:
# No coverage data has been collected.
# [DOC: ModelSim User's Manual - Code Coverage Chapter]
# 
# 
# vsim Message # 3307:
# A null filename was specified to the coverage_data command.
# [DOC: ModelSim User's Manual - Code Coverage Chapter]
# 
# 
# vsim Message # 3308:
# Either no coverage data has been collected for the specified file or
# the filename was specified incorrectly.
# [DOC: ModelSim User's Manual - Code Coverage Chapter]
# 
# 
# vsim Message # 3309:
# Only one contention file, one float file, and one stable file can
# be opened during a simulation.
# 
# 
# vsim Message # 3310:
# The -period option must be specified with the first check stable on command.
# [DOC: ModelSim Command Reference - check stable on command]
# 
# 
# vsim Message # 3311:
# The sample frequency specified to the profile interval command must be
# an integer in the range 1 to 999 inclusive. This number represents the
# number of milliseconds to wait between each sample collected during a
# profiled simulation run. The default is 10ms.
# [DOC: ModelSim Command Reference - profile interval command]
# 
# 
# vsim Message # 3312:
# The cutoff percentage specified to the profile report command must be
# a number in the range 0.0 to 100.0 inclusive. This number filters out the
# entries in the report that had less than that percentage of time spent
# in them.
# [DOC: ModelSim Command Reference - profile report command]
# 
# 
# vsim Message # 3313:
# A problem occurred while generating the data for a profile report.
# For help, provide the full error message, including the code, to
# support@model.com along with a description of what you were doing
# at the time the problem occurred.
# 
# 
# vsim Message # 3314:
# The 'power add' command is not supported for atomic vector nets. If
# you want to use this command, recompile the design with the -noatomic
# compiler option.
# 
# 
# vsim Message # 3315:
# The 'power add' command must be used to turn on power checking before
# the 'power report' or the 'power reset' command can be used.
# [DOC: ModelSim Command Reference - power commands]
# 
# 
# vsim Message # 3316:
# SUMMARY:
# 
# While performing the negative timing constraint algorithm on each module
# that contains timing checks with delayed net arguments, a timing check
# with a negative adjusted setup or hold limit was encountered. The
# negative timing constraint algorithm attempts to find a set of delays
# for the timing check delayed net arguments such that all negative limits
# can be converted to non-negative limits with respect to the delayed
# nets. If there is no solution for a set of limits, then the algorithm
# sets one of the negative limits to zero and recalculates the delays.
# This process is repeated until a solution is found. A warning message is
# issued for each negative limit that is set to zero only when the vsim
# option +ntc_warn is used.
# 
# DETAILS WITH EXAMPLES:
# 
# For Verilog models with negative timing checks to function correctly
# some module inputs must be delayed before they are used in the
# functional evaluation. These models must have delayed versions of their
# inputs in their $setuphold and $recrem timing constraints that are used
# in their functional evaluation. The timing checks are performed on the
# inputs while the model's functional evaluation uses the delayed version
# of the inputs.
# 
# For example, given a posedge D-flipflop module with a negative setup
# limit like:
# 
#     $setuphold(posedge CLK, D, -10, 20, notifier,,, dCLK, dD);
# 
# The delayed versions of CLK and D are dCLK and dD respectively. The
# -10 setup limit allows posedge CLK to occur 10 time units before D.
# 
#                                 0
#                                      -10       20
# D(violation)                           /////////
#                                  ___________________
# CLK              _______________|
# 
# Without delaying CLK by 11, an old value for D could be latched.
# (Note that an additional unit of delay is added to prevent race
# conditions.)
# 
# Consider the inputs:
# 
#                                         9
#                                          ________________
# D                _______________________|
# 
#                                 0
#                                  ___________________
# CLK              _______________|
# 
#                                         9
#                                          ________________
# dD               _______________________|
# 
#                                           11
#                                            _________
# dCLK             _________________________|
# 
# No timing violation is reported and the value of D high should be
# latched. For this reason the posedge CLK transition is delayed by the
# amount of the negative setup limit. The effect of this delay could also
# affect other inputs with a specified timing relationship to CLK. Vsim
# is responsible for calculating the delay between all inputs and their
# delayed versions.
# 
# If a solution cannot be determined, the smallest negative setup/recovery
# limit is zeroed and the calculation of delays is repeated. If no
# negative setup/recovery limits exist, then the smallest negative
# hold/removal limit is zeroed. This process is repeated until a delay
# solution is found.
# 
# Message 3316 indicates that a timing check in the design was zeroed
# because a delay solution was not found. Invoking vsim with the +ntc_warn
# option will identify the timing check that is being zeroed.
# 
# CAUSES OF NO SOLUTION WARNINGS:
# 
# Several conditions can occur to prevent vsim from finding a delay
# solution. A valid condition is when edge-specific input delays cause a
# large enough divergence as to overshadow setup and hold constraint values.
# 
# Consider:
# 
#   $setuphold(posedge CLK, posedge D, 40, -10, notifier,,, dCLK, dD);
#   $setuphold(posedge CLK, negedge D, 121, -110, notifier,,, dCLK, dD);
# 
#                                      40     -10
# D(posedge Viol)                      /////////
#                 120   -110
# D(negedge Viol)    /////
#                                                    ______________
# CLK ______________________________________________|
# 
# In this case the timing values are correct. A negative hold indicates
# that the data path contains a delay larger than the clock path to
# register element. The falling data path contains a delay much larger
# than the rising data path delay. Because input delays are not
# level sensitive, no solution is possible for this situation.
# 
# Cadence implemented a workaround for this problem which vsim started
# supporting in version 5.5d. The vsim options -extend_tcheck_data_limit
# and -extend_tcheck_ref_limit perform this function. These options affect
# only limits of related timing checks (opposing edge triggers on reference
# or data signals) to extend them so that their violation regions overlap.
# Extending a violation region increases the pessimism in the simulation.
# 
# The ref limit for a $setuphold is the setup limit, while the data
# limit is the hold limit. The arguments to the -extend_tcheck_data_limit
# and the -extend_tcheck_ref_limit options are specified as percentages of
# the violation region to be extended.
# 
# For the above example, -extend_tcheck_ref_limit 100 will attempt to
# extend the:
# 
#                                      40     -10
# D(posedge Viol)                      /////////
# 
# to:
# 
#                             90              -10
# D(posedge Viol)             //////////////////
# 
# so an -extend_tcheck_ref_limit 1000 will converge and provide limits of:
# 
#                        110                   -10
# D(posedge Viol)        ///////////////////////
#                 120   -110
# D(negedge Viol)    /////
# 
# Note that the violation region is extended only enough to converge.
# With this violation region, dD can have a delay of 110 which satisfies
# both timing checks.
# 
# Often no timing solution is found due to a timing check constraint not
# being annotated correctly so that a default value in the model is used
# which is incompatible with the loaded delays in the rest of the design.
# 
# For example, consider a model where the default timing values are 1 and
# for some reason the $recrem is not annotated from the SDF file so the
# default timing values are used. The timing would be the following:
# 
#   $setuphold(posedge CLK, D, -10, 20, notifier,,, dCLK, dD);
#   $setuphold(negedge PRESET, D, -25, 30, notifier,,, dPRESET, dD);
#   $recrem(posedge CLK, negedge PRESET, 1, 1, notifier,,, dCLK, dPRESET);
# 
# To satisfy the negative setups, delays of 11 for dCLK and 26 for dPRESET
# are calculated.
# 
#                                     -10   20
# D(violation)                          /////
#                                 0
#                                  ________________________________
# CLK              _______________|
#                                            -25   30
# D(violation)                                 /////
#                                 0
#                                  ________________________________
# PRESET           _______________|
#                                       11
#                                        __________________________
# dCLK             _____________________|
#                                              26
#                                               ___________________
# dPRESET           ___________________________|
# 
# This satisfies the $setuphold checks, but not the $recrem whose effect is
# to require that the delay for dCLK and dPRESET must be only 1 apart.
# In an attempt to solve this, dD is delayed by 9 (so the delays for dCLK
# and dPreset could be made 29 and 30 respectively.
# 
#                                          -19   29
# D(violation w/ dCLK)                       /////
# 
#                                                     -34   39
# D(violation w/ dPRESET)                               /////
# 
#                                                29
#                                                 _________________
# dCLK             ______________________________|
# 
#                                                 30
#                                                  ________________
# dPRESET          _______________________________|
# 
# By delaying dD by 9 and adding additional delay to dCLK and dPRESET it
# is possible to satisfy the:
# 
#   $setuphold(posedge CLK, D, -10, 20, notifier,,, dCLK, dD);
#   $recrem(posedge CLK, negedge PRESET, 1, 1, notifier,,, dCLK, dPRESET);
# 
# timing checks, but not the:
# 
#   $setuphold(negedge PRESET, D, -25, 30, notifier,,, dPRESET, dD);
# 
#                                                     -34   39
# D(violation w/ dPRESET)                               /////
#                                                 30
#                                                  ________________
# dPRESET          _______________________________|
# 
# as there is a region where a D change is valid and would not get used
# in the model's function (any time up to 4 after dPRESET). Thus no
# solution is found in this case.
# 
# If the:
# 
#   $recrem(posedge CLK, negedge PRESET, 1, 1, notifier,,, dCLK, dPRESET);
# 
# allowed a dCLK to lead dPRESET by at least 15, the following
# dCLK/dPRESET delays would have provided a solution:
# 
#                                       11
#                                        __________________________
# dCLK             _____________________|
#                                              26
#                                               ___________________
# dPRESET           ___________________________|
# 
# [DOC: ModelSim User's Manual - Verilog Simulation Chapter]
# 
# 
# vsim Message # 3317:
# While performing the negative timing constraint algorithm on each module
# that contains timing checks with delayed net arguments, a timing check
# with a negative adjusted setup or hold limit was encountered. The
# negative timing constraint algorithm attempts to find a set of delays
# for the timing check delayed net arguments such that all negative limits
# can be converted to non-negative limits with respect to the delayed
# nets. If there is no solution for a set of limits and either the
# -extend_tcheck_data_limit or -extend_tcheck_ref_limit vsim option is
# specified, then all similar timing check regions are tested for
# convergence. Similar timing checks (same type checks on same inputs with
# same delay nets) with violation regions that do not converge (overlap)
# might have their limits extended to force convergence. A warning message
# is issued for each negative limit that is extended. The
# -extend_tcheck_data_limit and -extend_tcheck_ref_limit options enable
# the +ntc_warn option.
# [DOC: ModelSim User's Manual - Verilog Simulation Chapter]
# 
# 
# vsim Message # 3318:
# The -extend_tcheck_data_limit and -extend_tcheck_ref_limit options
# are mutually exclusive.
# [DOC: ModelSim User's Manual - Verilog Simulation Chapter]
# 
# 
# vsim Message # 3319:
# The argument to -extend_tcheck_ref_limit must be an integer percentage
# specifying the amount a reference limit can be extended to facilitate
# delay net delay convergence.
# [DOC: ModelSim User's Manual - Verilog Simulation Chapter]
# 
# 
# vsim Message # 3320:
# The argument to -extend_tcheck_data_limit must be an integer percentage
# specifying the amount a data limit can be extended to facilitate delay
# net delay convergence.
# [DOC: ModelSim User's Manual - Verilog Simulation Chapter]
# 
# 
# vsim Message # 3321:
# The string parameter to the predefined attribute 'VALUE cannot be
# interpreted as an integer value that belongs to the integer type
# or subtype denoted by the prefix of the attribute name.
# 
# 
# vsim Message # 3322:
# The specified number is not a currently valid breakpoint ID. Use the
# bp command with no arguments to find out which breakpoints are set.
# [DOC: ModelSim Command Reference - bd command, bp command]
# 
# 
# vsim Message # 3323:
# A breakpoint line number is an integer greater than zero.
# [DOC: ModelSim Command Reference - bd command]
# 
# 
# vsim Message # 3324:
# No breakpoint was found to be set at the specified file and line number,
# therefore it cannot be deleted. Use the bp command with no arguments to
# find out which breakpoints are set.
# [DOC: ModelSim Command Reference - bd command, bp command]
# 
# 
# vsim Message # 3325:
# No hierarchical regions in the design were found to have been compiled
# from the specified source file. This condition will occur for all
# source files that have been compiled with the -nodebug option.
# 
# 
# vsim Message # 3326:
# The requested breakpoint or when command ID number is already being used
# for another breakpoint or when command. Use the bp or when command with
# no arguments to get a list of all breakpoints/when commands along with
# their IDs.
# [DOC: ModelSim Command Reference - bp and when commands]
# 
# 
# vsim Message # 3327:
# A breakpoint or when command ID number must be an integer greater than zero.
# [DOC: ModelSim Command Reference - bp, bd, and when commands]
# 
# 
# vsim Message # 3328:
# The specified instance was not found in the design. Verify that the
# instance path is spelled and specified correctly.
# [DOC: ModelSim Command Reference - bp command]
# 
# 
# vsim Message # 3329:
# Setting a breakpoint on a process is not supported.
# [DOC: ModelSim Command Reference - bp command]
# 
# 
# vsim Message # 3330:
# The specified line in the specified file is not executable, therefore
# a breakpoint cannot be set on it.
# 
# 
# vsim Message # 3331:
# The type of bp command that was issued requires a filename and line
# number to be specified. The usage of the command should be displayed
# after the error message.
# [DOC: ModelSim Command Reference - bp command]
# 
# 
# vsim Message # 3332:
# An attempt was made to write to a VHDL file or TEXTIO file that has
# not been opened.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 3.4.1 File operations, 14.3 Package TEXTIO]
# 
# 
# vsim Message # 3333:
# An attempt was made to write to a VHDL file or TEXTIO file that has
# been opened only for reading.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 3.4.1 File operations, 14.3 Package TEXTIO]
# 
# 
# vsim Message # 3334:
# Because of the way that a record is formatted, it cannot be written
# to stdout.
# 
# 
# vsim Message # 3335:
# The vcl data structure associated with the object handle and vcl flag
# passed to acc_vcl_delete() could not be found. Either the callback had
# not previously been added or it has already been removed.
# 
# 
# vsim Message # 3336:
# An attempt was made to read past the end of the specified VHDL file.
# Ensure that your code properly checks for end of file conditions.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 3.4.1 File operations]
# 
# 
# vsim Message # 3337:
# An attempt was made to read from a VHDL file or a TEXTIO file that
# has not been opened.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 3.4.1 File operations, 14.3 Package TEXTIO]
# 
# 
# vsim Message # 3338:
# An attempt was made to read from a VHDL file or TEXTIO file that has
# been opened only for writing or appending.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 3.4.1 File operations, 14.3 Package TEXTIO]
# 
# 
# vsim Message # 3339:
# When a FILE object is associated with stdin, the file type of the FILE
# object must be file of CHARACTER or file of STRING.  This is because
# all other types of values have binary representations that do not
# readily lend themselves to being input from the command line.
# 
# 
# vsim Message # 3340:
# The ENDFILE function cannot be called on an unopened VHDL file.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 3.4.1 File operations]
# 
# 
# vsim Message # 3341:
# The specified file has already been opened, so it cannot be opened again.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 3.4.1 File operations]
# 
# 
# vsim Message # 3342:
# It is an error if a wait statement appears in an explicit process
# statement that includes a sensitivity list or in a procedure that
# has a parent that is such a process statement.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 8.1 Wait statement]
# 
# 
# vsim Message # 3343:
# Time values in wait statements must be greater than or equal to zero.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 8.1 Wait statement]
# 
# 
# vsim Message # 3344:
# An unresolved signal can have only one driver. The drivers command can be
# used to find all of the drivers on the specified signal.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 4.3.1.2 Signal declarations]
# 
# 
# vsim Message # 3345:
# An unconstrained array output port appears in a port map with a type
# conversion on it. A type conversion does not constrain an unconstrained
# array because there is no way to match elements.
# [DOC: IEEE Std 1076-1993 VHDL LRM -
#  7.2.2 Relational operators,
#  7.3.5 Type conversions]
# 
# 
# vsim Message # 3346:
# An unconstrained array output port appears in a port map with a type
# conversion on it. A type conversion does not constrain an unconstrained
# array because there is no way to match elements.
# [DOC: IEEE Std 1076-1993 VHDL LRM -
#  7.2.2 Relational operators,
#  7.3.5 Type conversions]
# 
# 
# vsim Message # 3347:
# After elaboration, the specified port is still unconstrained. If the
# port is an IN port, then the port declaration must include a default
# value if the port is not connected. If the port is of any mode other
# than IN and the type of the port is an unconstrained array type, then
# the port must be connected.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 1.1.1.2 Ports]
# 
# 
# vsim Message # 3348:
# The size of the actual array signal connected to an array port is either
# greater than or less than the size of the port. Two array objects can be
# connected only if their sizes are equal.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 4.3.2.2 Association lists]
# 
# 
# vsim Message # 3349:
# A user defined system task or function has been redefined at run time
# with vpi_register_systf. The last task or function registered will be
# the one in effect until another registration occurs or the simulation ends.
# 
# 
# vsim Message # 3350:
# The specified generic has not been given a value during elaboration.
# One of the following methods can be used to give the generic a value:
#   o Specify a default value in the generic declaration
#   o Use a generic map to specify a value
#   o Use a -g or -G vsim option to specify a value
# [DOC: IEEE Std 1076-1993 VHDL LRM -
#  1.1.1.1 Generics,
#  4.3.2 Interface declarations,
#  5.2.1.2 Generic map and port map aspects]
# [DOC: ModelSim Command Reference - vsim command]
# 
# 
# vsim Message # 3351:
# The value does not satisfy the constraints of the subtype of the
# generic.  This value will be ignored; the effective value will be the
# value specified in the design.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 12.2.2 The generic map aspect]
# 
# 
# vsim Message # 3352:
# Instantiation of a Verilog UDP in a VHDL model is not supported in
# ModelSim mixed-language simulation.
# [DOC: ModelSim User's Manual - Mixed VHDL and Verilog Designs Chapter]
# 
# 
# vsim Message # 3353:
# Instantiation of a Verilog optimized cell in a VHDL model is not
# supported in ModelSim mixed-language simulation.
# 
# 
# vsim Message # 3354:
# The source and destination signals of a parallel connection must
# contain the same number of bits.
# [DOC: IEEE Std 1364-1995 Verilog LRM -
#  13.3.5 Full connection and parallel connection paths]
# 
# 
# vsim Message # 3355:
# When there is a hierarchical reference that ultimately must be a net,
# but it is a register instead, then a continuous assignment to an
# implicit net is automatically created. If the hierarchical reference
# resolves to something that is not a net and it is not a valid
# right-hand side for a continuous assignment, then this error message
# is issued. An example of an illegal right-hand side would be a
# reference to an entire memory (rather than a memory element).
# 
# 
# vsim Message # 3356:
# An index into the specified object is either unknown (X) or outside of
# the declared range of the object.
# 
# 
# vsim Message # 3358:
# An indexed part-select into the specified object is either unknown (X)
# or outside of the declared range of the object.
# 
# 
# vsim Message # 3359:
# The connection to a primitive output must be a scalar net. This message
# occurs during elaboration because of a hierarchical reference to an
# object whose type cannot be determined until this time.
# 
# 
# vsim Message # 3360:
# The connection to a primitive output must be a scalar net. This message
# occurs during elaboration because of a hierarchical reference to an
# object whose size cannot be determined until this time.
# 
# 
# vsim Message # 3361:
# By the end of elaboration, all unconstrained VHDL array ports must be
# constrained. In this case, the Verilog module that is instantiating the
# VHDL model containing the specified port has not connected anything to
# the port to give it constraints and the port has no default value.
# 
# 
# vsim Message # 3362:
# The allowed VHDL types for Verilog connection are: bit, bit_vector,
# std_ulogic, std_ulogic_vector, vl_ulogic, vl_ulogic_vector, or any of
# their subtypes.
# [DOC: ModelSim User's Manual - Mixed VHDL and Verilog Designs Chapter]
# 
# 
# vsim Message # 3363:
# The array length of a VHDL port must match the width of the Verilog
# port(s) to which it is connected.
# [DOC: ModelSim User's Manual - Mixed VHDL and Verilog Designs Chapter]
# 
# 
# vsim Message # 3364:
# A VHDL port of mode OUT or INOUT cannot be connected to a Verilog object
# that is not a net. This also applies in pure Verilog designs.
# [DOC: IEEE Std 1364-1995 Verilog LRM -
#  12.3.6 Connecting dissimilar ports,
#  12.3.7 Port connection rules]
# 
# 
# vsim Message # 3365:
# More port connections were found in an instantiation than were
# expected for the module.
# 
# 
# vsim Message # 3366:
# Instantiations for modules containing unnamed ports must connect the ports
# by position. An unnamed port is created when a comma succeeds another
# comma (",,") in the list of ports in a module declaration or when the
# port expression is a bit-select, a part-select, or a concatenation.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 12.3 Ports]
# 
# 
# vsim Message # 3367:
# In an instantiation of a UDP, the ports must be connected by position.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 8.6 UDP instances]
# 
# 
# vsim Message # 3368:
# In an instantiation of a UDP, either too few or too many connections
# were listed.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 8.6 UDP instances]
# 
# 
# vsim Message # 3369:
# A given design unit can be specified only once to the vsim command
# as a top-level design unit.
# 
# 
# vsim Message # 3370:
# A top-level design unit can be only a VHDL entity or configuration,
# or a Verilog module.
# [DOC: ModelSim Command Reference - vsim command]
# 
# 
# vsim Message # 3371:
# While initializing a range, either unknown (X) values or an overflow
# or underflow were detected in either the msb or the lsb of the range.
# 
# 
# vsim Message # 3372:
# This error occurs when determining the width of the following kind of
# concatenation expression:
#   {n{1'b1}}
# This means to replicate 1'b1 n times. If n is a parameter, then the
# value must be determined during elaboration. The multiplier must not
# contain an X and must not overflow a 32-bit integer.
# 
# 
# vsim Message # 3373:
# The range of a part-select must have the same direction (either
# ascending or descending) as the object of which it is a part.
# [DOC: IEEE Std 1364-1995 Verilog LRM -
#  4.2.1 Net and register bit-select and part-select addressing]
# 
# 
# vsim Message # 3374:
# Either the msb or lsb of the part-select is outside of the range of
# the object which it is indexing.
# 
# 
# vsim Message # 3375:
# The object is not a valid object in the expression context. An object
# of one of the following types is expected: net, register, integer, real,
# time, parameter, specparam.
# 
# 
# vsim Message # 3376:
# Either the object is not an indexable object or an incorrect number
# of indexes is being used to index the object.
# 
# 
# vsim Message # 3377:
# Either the object is not a part-selectable object or an incorrect
# number of indexes is being used to part-select the object.
# 
# 
# vsim Message # 3378:
# Either the object cannot be part-selected and then indexed or an
# incorrect number of indexes is being used to part-select and index
# the object.
# 
# 
# vsim Message # 3379:
# The specified object is not a valid target for the specified type of
# assignment, deassign, force, or release.
# 
# 
# vsim Message # 3380:
# The design unit listed before this error message is not in a valid
# compiled format. Verify that the proper design unit and library were
# specified in the design. If the source code is available, the design
# unit can be recompiled using the appropriate compiler.
# 
# 
# vsim Message # 3381:
# The design unit listed before this error message was compiled with a
# previous major version of ModelSim. Libraries must always be recompiled
# or refreshed when moving from one major version of ModelSim to another
# (for example, from 5.5 to 5.6) or from a beta version to a full-fledged
# release version. The -refresh option of the compiler can be used if the
# HDL source code is not available.
# 
# 
# vsim Message # 3382:
# The design unit listed before this error message was compiled with a
# newer major version of ModelSim. Libraries must always be recompiled or
# refreshed when moving from one major version of ModelSim to another
# (for example, from 5.6 to 5.5) or from a beta version to a full-fledged
# release version. The -refresh option of the compiler can be used if the
# HDL source code is not available.
# 
# 
# vsim Message # 3383:
# The design unit listed before this error message was compiled on a
# platform of a different object type. 32-bit ModelSim can load only
# 32-bit libraries and 64-bit ModelSim can load only 64-bit libraries.
# The -refresh option of the compiler can be used to create the appropriate
# object format of the library.
# 
# 
# vsim Message # 3384:
# The design unit listed before this error message was compiled by a
# different Model Technology product (e.g., PE vs. SE). The -refresh
# option of the compiler can be used to create the appropriate library
# objects.
# 
# 
# vsim Message # 3385:
# An object (A) in one package depends on an object (B) in the other
# package which depends on the first object (A) in the first package.
# 
# 
# vsim Message # 3389:
# More port connections were found in an instantiation than were
# expected for the module.
# 
# 
# vsim Message # 3390:
# The result of the specified predefined attribute is outside
# the range of the type of the prefix.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 14.1 Predefined attributes]
# 
# 
# vsim Message # 3391:
# Allocation of more memory than is physically installed in the machine
# can cause paging to occur. Increasing the amount of physical memory in
# the machine can alleviate this problem. Using locked memory or shared
# memory may also help. Monitoring the memory used by the ModelSim
# processes (vsim, vish, vlm) might help you determine where the major
# memory usage is occurring.
# The amounts of memory given in the message are approximate and reflect
# the beginning of the detected potential problem; the actual amount of
# memory ultimately needed for a given design may be larger.
# [DOC: ModelSim User's Manual - Tips and Techniques Appendix]
# 
# 
# vsim Message # 3396:
# The specified file was not found to be a currently open VCD file.
# [DOC: ModelSim Command Reference - vcd commands]
# 
# 
# vsim Message # 3397:
# The specified VCD file is already opened.
# [DOC: ModelSim Command Reference - vcd commands]
# 
# 
# vsim Message # 3398:
# The specified default VCD file is already opened. The -file option
# can be used to specify a different filename.
# [DOC: ModelSim Command Reference - vcd commands]
# 
# 
# vsim Message # 3399:
# For dumpports functionality, you can use either the 'vcd file'
# command with the -dumpports option or the 'vcd dumpports' command.
# [DOC: ModelSim Command Reference - vcd files command]
# 
# 
# vsim Message # 3400:
# The default VCD output file has already been opened. Multiple VCD
# files can be created by using the 'vcd files' command.
# [DOC: ModelSim Command Reference - vcd file command]
# 
# 
# vsim Message # 3401:
# The -map option allows you to override the default VHDL std_logic values.
# The mapping should be specified as a list of character pairs. The first
# character in a pair must be one of the std_logic characters UX01ZWLH-.
# The second character is the character you wish to be recorded in the
# VCD file. Example: vcd file -map "L z H z".
# [DOC: ModelSim Command Reference - vcd commands]
# 
# 
# vsim Message # 3402:
# The valid std_logic values are UX01ZWLH-.
# [DOC: ModelSim Command Reference - vcd commands]
# 
# 
# vsim Message # 3403:
# The VCD file size limit must be specified as a non-negative integer.
# [DOC: ModelSim Command Reference - vcd commands]
# 
# 
# vsim Message # 3404:
# The address must be within the bounds of the memory being loaded.
# 
# 
# vsim Message # 3406:
# The width of the data is larger than the width of the memory word.
# 
# 
# vsim Message # 3407:
# The data word currently being loaded is outside of the range of the
# addresses to be loaded.  The rest of the file has been skipped.
# 
# 
# vsim Message # 3408:
# Not enough data words were found to fill the expected memory range.
# 
# 
# vsim Message # 3409:
# The allowable binary digits are 0, 1, x, X, z, Z, and ?.
# 
# 
# vsim Message # 3410:
# The allowable hex digits are 0-9, a-f, A-F, x, X, z, Z, and ?.
# 
# 
# vsim Message # 3411:
# The allowable address digits are 0-9, a-f, and A-F.
# 
# 
# vsim Message # 3412:
# The data word currently being loaded is outside of the range of the
# addresses to be loaded.  The rest of the file has been skipped.
# 
# 
# vsim Message # 3413:
# A leading underscore is not allowed in an address or data specification.
# 
# 
# vsim Message # 3414:
# End of file was reached while looking for the end of the specified comment.
# 
# 
# vsim Message # 3415:
# A forward slash ('/') was detected without a succeeding asterisk ('*')
# or forward slash ('/') to indicate the start of a comment. A comment can
# either start with '//' and extend until the end of the line or it can
# start with '/*', extend for one or more lines, and be terminated by '*/'.
# 
# 
# vsim Message # 3416:
# The time value is either less than integer'left or greater than
# integer'right and therefore cannot be represented as an integer.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 14.1 Predefined attributes]
# 
# 
# vsim Message # 3417:
# The time value corresponding to the specified position number is less
# than the simulator resolution and has therefore been truncated to zero.
# 
# 
# vsim Message # 3418:
# Two arrays can be concatenated only if their elements are of the same
# type. Since the sizes are different, they are not the same type.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.2.4 Adding operators]
# 
# 
# vsim Message # 3419:
# The total size of the array is too large to be allocated in the simulator.
# 
# 
# vsim Message # 3420:
# Many operations require that two array values or a constrained array
# subtype and an array value have the same length, i.e., they satisfy the
# matching element requirement.
# 
# 
# vsim Message # 3421:
# The value does not belong to the range defined by the range constraint
# of the scalar subtype.
# 
# 
# vsim Message # 3422:
# The result of the concatenation would have an array index range whose
# right bound would not belong to the index subtype of the base type
# of the array.
# 
# 
# vsim Message # 3424:
# The specified std_logic operator requires that its two arguments be
# of the same length.
# 
# 
# vsim Message # 3425:
# The hierarchical DIVIDER is set to be a '/', but a '.' was found in
# a place where a hierarchical divider was expected.
# 
# 
# vsim Message # 3426:
# The hierarchical DIVIDER is set to be a '.', but a '/' was found in
# a place where a hierarchical divider was expected.
# 
# 
# vsim Message # 3427:
# The pulse reject limit must be less than or equal to the pulse error
# limit. A pulse that is less than the reject limit will not propagate to
# the module path destination. A pulse that is less than the error limit
# but greater than or equal to the reject limit will generate a logic X on
# the path destination. A pulse that is greater than or equal to the error
# limit will propagate to the path destination.
# [DOC: OVI Standard Delay Format Specification v3.0 -
#  Chapter 3, Section: Delay Entries (pages 3-12 to 3-13)]
# 
# 
# vsim Message # 3428:
# The values specified in a PATHPULSEPERCENT entry must be less than
# or equal to 100.0.
# [DOC: OVI Standard Delay Format Specification v3.0 -
#  Chapter 3, Section: Delay Entries (page 3-14)]
# 
# 
# vsim Message # 3429:
# For a NOCHANGE timing check, an edge specification must be included
# for the control port.
# [DOC: OVI Standard Delay Format Specification v3.0 -
#  Chapter 3, Section: Timing Check Entries (page 3-35)]
# 
# 
# vsim Message # 3430:
# Valid timescales are: 1us, 10us, 100us, 1ns, 10ns, 100ns, 1ps, 10ps, 100ps.
# 
# 
# vsim Message # 3431:
# Valid timescale units are: us, ns, ps.
# 
# 
# vsim Message # 3432:
# The most likely cause of this message is that you have specified the
# wrong instance name or the wrong filename with the -sdfmin, -sdftyp,
# or -sdfmax vsim option. Another possibility is that the instance that
# you expected to be instantiated in the design is not the instance that
# was instantiated. If you have both a VHDL and a Verilog model of the
# instance in question, verify that the appropriate model is being
# instantiated.
# [DOC: ModelSim User's Manual -
#  Standard Delay Format (SDF) Timing Annotation Chapter]
# 
# 
# vsim Message # 3433:
# The object being annotated takes only up to the specified number of
# delay values. Any delay values specified beyond that are ignored.
# This message occurs, for example, if an interconnect delay with more
# than 3 values is applied to a primitive device.
# [DOC: OVI Standard Delay Format Specification -
#  Chapter 3, Section: Delay Entries]
# 
# 
# vsim Message # 3434:
# The SDF annotator was not able to uniquely identify the source port of
# an INTERCONNECT statement. This is because the source port is driven by
# a behavioral statement instead of a primitive. This can be fixed by
# putting a buffer (or some other primitive) between the behavioral
# statement and the output or inout that it is driving.
# 
# 
# vsim Message # 3435:
# For optimized cells (-fast), if a specify block contains only rise and
# fall (0,1) delays and the SDF file tries to annotate X transition
# delays, then this warning message is displayed and the X transition
# delays are ignored.
# 
# 
# vsim Message # 3436:
# One of the sources of a multisource input to input interconnect delay
# does not have a driver on it; therefore, a module input port delay is
# applied to the destination port instead of an interconnect delay.
# 
# 
# vsim Message # 3437:
# The instance has been inlined as a result of performance optimization.
# The ports of these instances are not visible and therefore cannot be
# annotated to. You must recompile the modules that are specified in the
# mti_inlined_mods.txt file (or the transcript in case mti_inlined_mods.txt
# could not be opened for writing).
# 
# 
# vsim Message # 3438:
# A non-zero INTERCONNECT delay is specified from a source output lower
# in the hierarchy to a destination output higher in the hierarchy.
# Verilog-XL treats such an INTERCONNECT delay as a delay on the drivers
# of the source. ModelSim adds the INTERCONNECT delay to the driver delays
# because there may also be IOPATH delays (which must come before the
# INTERCONNECT delays in the SDF file). (Note that output to output delays
# are not legal according to the SDF Specification.)
# 
# 
# vsim Message # 3439:
# When trying to convert an SDF edge specifier into an internal edge
# specifier (e.g. accEdge01), it was found that there was no value
# equivalent to the specified edge. Transitions to and from Z cannot
# be converted.
# 
# 
# vsim Message # 3440:
# None of the instances in the specified SDF file were found in the
# design. You might have specified the wrong SDF file or the SDF file
# might have been applied to the wrong instance.
# [DOC: ModelSim User's Manual -
#  Standard Delay Format (SDF) Timing Annotation Chapter]
# 
# 
# vsim Message # 3441:
# Some of the instances in the specified SDF file were not found in the
# design. You might have specified the wrong SDF file, the SDF file might
# have been applied to the wrong instance, or the SDF file might contain
# data that is no longer relevant.
# [DOC: ModelSim User's Manual -
#  Standard Delay Format (SDF) Timing Annotation Chapter]
# 
# 
# vsim Message # 3442:
# The suggested instance contains all instance paths that could not be
# annotated at the instance currently selected for this SDF file. This is
# probably the instance to which the SDF file should be applied. Compare
# the SDF file to the design to determine at which level of hierarchy the
# SDF file should be applied.
# [DOC: ModelSim User's Manual -
#  Standard Delay Format (SDF) Timing Annotation Chapter]
# 
# 
# vsim Message # 3443:
# The SDF file was applied to the top level when it should, perhaps, have
# been applied to a lower level instance. Compare the SDF file to the
# design to determine at which level the SDF file should be applied.
# [DOC: ModelSim User's Manual -
#  Standard Delay Format (SDF) Timing Annotation Chapter]
# 
# 
# vsim Message # 3444:
# One or more problems occurred during SDF annotation. Look earlier in
# the transcript for error messages that indicate what the problems are.
# [DOC: ModelSim User's Manual -
#  Standard Delay Format (SDF) Timing Annotation Chapter]
# 
# 
# vsim Message # 3445:
# One or more problems occurred during parsing of the SDF file. Look
# earlier in the transcript for error messages that indicate what the
# problems are.
# [DOC: ModelSim User's Manual -
#  Standard Delay Format (SDF) Timing Annotation Chapter]
# 
# 
# vsim Message # 3446:
# Normally a negative pulse (trailing edge scheduled before leading
# edge) is cancelled. The +show_cancelled_e vsim option will cause
# negative pulses to be handled similarly to path pulses.
# [DOC: ModelSim Command Reference - vsim command]
# 
# 
# vsim Message # 3447:
# A path pulse error occurs when a narrow pulse is propagated through a
# path delay. If the pulse is too narrow, as defined by the pulse error
# limit (+pulse_e vsim option), then this warning message is issued.
# [DOC: ModelSim Command Reference - vsim command]
# 
# 
# vsim Message # 3448:
# Most timing constraints cannot have negative values, therefore any
# negative values are set to zero. The exceptions are $nochange,
# $setuphold, and $recrem.  $nochange is always allowed to have a
# negative value. $setuphold and $recrem are allowed to have negative
# values only if the +no_neg_tchk option to vsim is not used.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 14.5 Timing check system tasks]
# 
# 
# vsim Message # 3449:
# One reason for this message is that an attempt was made to write at
# or beyond the offset maximum of the file. You can write a file only
# as large as your operating system will allow. Another reason for this
# message is that you are trying to write to a read-only file.
# 
# 
# vsim Message # 3451:
# The 'toggle report' and 'toggle reset' commands cannot be used until
# the 'toggle add' command is given.
# [DOC: ModelSim Command Reference - toggle commands]
# 
# 
# vsim Message # 3452:
# Once the VCD header has been created, it is too late to give
# the 'vcd add' command or to call $dumpvars() or $fdumpvars().
# 
# 
# vsim Message # 3453:
# VCD dumping for the specified file has not been enabled, therefore
# the vcd command or Verilog system task that caused this message to
# appear cannot be executed.
# 
# 
# vsim Message # 3454:
# An entire record cannot be forced with a force command. However,
# individual elements that are either scalars or one-dimensional arrays
# of character enums can be forced.
# [DOC: ModelSim Command Reference - force command]
# 
# 
# vsim Message # 3455:
# An array can be forced only if it is a one-dimensional array of
# character enums.
# [DOC: ModelSim Command Reference - force command]
# 
# 
# vsim Message # 3456:
# An input or inout port cannot be forced if the port has values coming
# into it from a higher level or if the port has a conversion function
# on it. In some cases you might be able to force the port using the
# -drive option. Otherwise, try doing the force at a higher level. This
# restriction exists because in certain cases inconsistent results could
# occur or the value might not propagate correctly.
# 
# 
# vsim Message # 3457:
# An atomic vector net cannot be forced. Compiling the design with the
# +acc=b option will enable you to force the vector net.
# 
# 
# vsim Message # 3458:
# A register cannot be driven or have a value deposited on it by a force
# command. The 'force -freeze' command can be used to freeze the value
# of a register or the 'change' command can be used to change the value
# of a register.
# 
# 
# vsim Message # 3459:
# A non-existent region name (such as a module, architecture, or process
# name) was encountered while parsing a hierarchical name. Use the
# structure view in the GUI to verify the hierarchical name of the
# region you are trying to access.
# 
# 
# vsim Message # 3460:
# The valid DefaultForceKind values are: deposit, drive, freeze, and default.
# [DOC: ModelSim User's Manual - ModelSim Variables Appendix,
#  Preference variables located in INI files Section]
# 
# 
# vsim Message # 3461:
# An unresolved signal cannot be driven.
# [DOC: ModelSim Command Reference - force command]
# 
# 
# vsim Message # 3462:
# The value/time pairs specified to the force command must be listed in
# increasing order of time. For example, 'force busa 1 10, 0 20, 1 30'.
# 
# 
# vsim Message # 3463:
# The repeat period must be greater than or equal to the resolution
# limit of the simulator.
# 
# 
# vsim Message # 3464:
# The -repeat period must be greater than or equal to the longest
# delay specified in the force command.
# 
# 
# vsim Message # 3465:
# A negative delay was detected in Verilog code. It is probably a driver
# delay on a primitive or in an assign statement. Since a negative delay
# cannot be simulated, it is set to zero. Here is a simple example that
# will cause this warning to occur:
# 
#   module top;
#     parameter d = -1;
#     wire w;
#     assign #d w = 0;
#   endmodule
# 
# Look for delays controlled by parameters, defparams, or expressions
# that could evaluate to a negative value.
# This message is controlled by the vsim option +nowarnSVTL.
# 
# 
# vsim Message # 3466:
# The charge on the specified trireg has decayed, so its stored charge
# can no longer be determined. This message is controlled by the vsim
# option +nowarnDECAY.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 7.15.2 Trireg net charge decay]
# 
# 
# vsim Message # 3467:
# The value given for the specified modelsim.ini variable is invalid.
# The specified default will be used.
# [DOC: ModelSim User's Manual - ModelSim Variables Appendix,
#  Preference variables located in INI files Section]
# 
# 
# vsim Message # 3468:
# There are too many positional values specified in an aggregate based
# on the type of the aggregate.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.3.2 Aggregates]
# 
# 
# vsim Message # 3469:
# There are not enough values specified in an aggregate based on the type
# of the aggregate. You need to add values or an OTHERS clause to the
# aggregate.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.3.2 Aggregates]
# 
# 
# vsim Message # 3470:
# The array index right bound does not belong to the index subtype of
# the base type of the array at this index position.  The length of the
# array at this index position is too large to be represented by this
# array type.
# 
# 
# vsim Message # 3471:
# It is an error if either of the bounds of the discrete range does not belong
# to the index range of the prefixing array, unless the slice is a null slice.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 6.5 Slice names]
# 
# 
# vsim Message # 3472:
# The array length of a formal slice in an association list must be equal
# to the array length of the actual with which it is associated.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 4.3.2.2 Association lists]
# 
# 
# vsim Message # 3473:
# The specified component has not been explicitly bound and no default
# binding has been found for it. This means that your VHDL design does
# not include a configuration specification or component configuration
# for the specified component instance in order to indicate the
# entity/architecture to use for that component. Additionally, no entity
# of the same name as the component, having ports and generics matching
# those of the component declaration, was found when searching all
# visible libraries for a default binding.
# Simulation can occur, but no VHDL code will be executed for the
# unbound component instance:  it is essentially a null instance.
# 
# To fix this problem, either put into the VHDL design a configuration
# specification or component configuration that specifies which
# entity/architecture to use for this component, or compile an entity of
# the same name as the component, having ports and generics matching
# those of the component declaration, along with at least one
# architecture for this entity into a library that is visible at the
# place of the component instance. You may need to add a LIBRARY clause
# to the entity and/or architecture containing the unbound component in
# order to make the library and component visible.
# 
# When searching for a default binding, a matching entity is one for
# which all ports and generics match those of the component declaration
# in name, mode, and type; additionally, this entity must have at least
# one architecture associated with it at the time the match is
# considered.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 5.2.2 Default binding indication]
# 
# 
# vsim Message # 3474:
# The parameter value of the specified predefined attribute is outside
# the range of the type of the prefix.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 14.1 Predefined attributes]
# 
# 
# vsim Message # 3475:
# If the type mark of a type conversion denotes a constrained array
# subtype, a check is made that for each element of the operand array
# there must be a matching element of the target subtype, and vice versa.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.3.5 Type conversions]
# 
# 
# vsim Message # 3476:
# IEEE Std 1076-1993, 2.1.1.1 Constant and variable parameters, line 76:
#   For a formal [constant or variable] parameter of a constrained array
#   subtype of mode in or inout, it is an error if the value of the
#   associated actual parameter (after application of any conversion
#   function or type conversion present in the actual part) does not
#   contain a matching element for each element of the formal.
#   [For a formal variable parameter of a constrained array subtype of
#    mode inout or out, it is an error if the value of the associated
#    actual parameter (after application of any conversion function or
#    type conversion in the formal part) does not contain a matching
#    element for each element of the formal.]
# 
# IEEE Std 1076-1993, 2.1.1.2 Signal parameters, line 119:
#   If an actual signal is associated with a formal signal parameter, and
#   if the formal is of a constrained array subtype, then it is an error
#   if the actual does not contain a matching element for each element of
#   the formal.
# 
# 
# vsim Message # 3477:
# An actual associated with a formal port must be of the same size
# as the formal port.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 4.3.2.2 Association lists]
# 
# 
# vsim Message # 3478:
# The 'DRIVING attribute must be TRUE at the time of the evaluation
# of 'DRIVING_VALUE.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 14.1 Predefined attributes]
# 
# 
# vsim Message # 3479:
# The specified time unit is less than the simulator resolution,
# therefore a time value may be truncated to zero.
# 
# 
# vsim Message # 3480:
# It is an error if execution of a function completes by any means
# other than the execution of a RETURN statement.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 8.12 Return statement]
# 
# 
# vsim Message # 3481:
# The CASE statement expression value did not match any of the choices
# given in the case statement alternatives, and there was no OTHERS
# choice.  This suggests that not all the choices were locally static
# (an LRM non-compliance we allow), which would preclude the compiler
# from determining case choice coverage.
# This error can also occur in a selected signal assignment statement
# because it is converted to an equivalent CASE statement.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 8.8 Case statement]
# 
# 
# vsim Message # 3482:
# Delays must be greater than or equal to zero.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 8.4.1 Updating a projected output waveform]
# 
# 
# vsim Message # 3483:
# Delays in a signal assignment statement must be specified in
# increasing order of time.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 8.4.1 Updating a projected output waveform]
# 
# 
# vsim Message # 3484:
# The output of the -tcl option to the 'write report' command cannot
# be written to a file.
# [DOC: ModelSim Command Reference - write report command]
# 
# 
# vsim Message # 3485:
# Due to limitations in the specified PLI function on 64-bit platforms
# you must use a different function to access string values.
# 
# 
# vsim Message # 3486:
# The object handle passed to acc_fetch_defname() must be a handle to a
# Verilog module or primitive instance or a VHDL architecture instance.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.13 acc_fetch_defname()]
# 
# 
# vsim Message # 3487:
# The specified parameter passed to the specified function must be a
# handle to a Verilog module instance.
# [DOC: IEEE Std 1364-1995 Verilog LRM]
# 
# 
# vsim Message # 3488:
# The object handle passed to acc_fetch_direction() must be a handle to
# a Verilog port, port bit, or terminal, or a VHDL port signal.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.16 acc_fetch_direction()]
# 
# 
# vsim Message # 3489:
# The pathio handle passed to acc_fetch_edge() must be a handle to a
# Verilog module path input or output or a timing check terminal.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.17 acc_fetch_edge()]
# 
# 
# vsim Message # 3490:
# The object handle passed to acc_fetch_index() must be a handle to a
# Verilog port or primitive terminal.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.20 acc_fetch_index()]
# 
# 
# vsim Message # 3491:
# The parameter handle passed to acc_fetch_paramtype(),
# acc_fetch_paramval(), or acc_fetch_paramval_str() must be a handle
# to a Verilog parameter or specparam.
# [DOC: IEEE Std 1364-1995 Verilog LRM -
#  19.23 acc_fetch_paramtype(),
#  19.24 acc_fetch_paramval()]
# 
# 
# vsim Message # 3492:
# The path handle passed to acc_fetch_polarity() must be a handle
# to a Verilog module path or data path.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.25 acc_fetch_polarity()]
# 
# 
# vsim Message # 3493:
# The vector handle passed to acc_fetch_range() must be a handle
# to a Verilog net, register, or port.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.28 acc_fetch_range()]
# 
# 
# vsim Message # 3494:
# The vector handle passed to acc_fetch_size() must be a handle to a
# Verilog net, register, or port, or a bit-select of a net, register,
# or port.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.29 acc_fetch_size()]
# 
# 
# vsim Message # 3495:
# The format parameter passed to acc_fetch_value() must be one of:
#   "%b", "%d", "%h", "%o", "%v", "%%"
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.36 acc_fetch_value()]
# 
# 
# vsim Message # 3496:
# The object handle passed to acc_fetch_value() must be a handle to a
# Verilog net, register, variable, terminal, parameter, specparam,
# or constant.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.36 acc_fetch_value()]
# 
# 
# vsim Message # 3497:
# The format specified was accVectorVal but the value->value.vector
# field passed to acc_fetch_value() or acc_set_value() was NULL.
# [DOC: IEEE Std 1364-1995 Verilog LRM -
#  19.36 acc_fetch_value(),
#  19.96 acc_set_value()]
# 
# 
# vsim Message # 3498:
# Since acc_fetch_value() can return the strength value for only one
# bit, the object handle must be a handle to a scalar object.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.36 acc_fetch_value()]
# 
# 
# vsim Message # 3499:
# A handle to a net can be passed to acc_set_value() only when the
# delay model is set to accForceFlag or accReleaseFlag.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.96 acc_set_value()]
# 
# 
# vsim Message # 3500:
# Forcing of atomic vector nets is not supported. If you want to force
# a vector net, recompile the design with the -noatomic compiler option.
# 
# 
# vsim Message # 3501:
# Bit-selects of registers, sequential UDPs, and user-defined system
# functions can have their values set only with delay model accNoDelay.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.96 acc_set_value()]
# 
# 
# vsim Message # 3502:
# The object handle parameter passed to acc_set_value() must be a
# handle to a Verilog net, register, variable, or sequential UDP.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.96 acc_set_value()]
# 
# 
# vsim Message # 3503:
# The valid accScalarVal values are: acc0, acc1, accZ, and accX.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.96 acc_set_value()]
# 
# 
# vsim Message # 3504:
# An invalid value was passed in for the specified type of string.
# Valid binary      characters are: 0, 1, x, X, z, Z, ?, _
# Valid octal       characters are: 0-7, x, X, z, Z, ?, _
# Valid decimal     characters are: 0-9, _
# Valid hexadecimal characters are: 0-9, a-f, A-F, x, X, z, Z, ?, _
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.96 acc_set_value()]
# 
# 
# vsim Message # 3505:
# An invalid value format was passed in the value parameter format field.
# Valid values are:
#   accScalarVal  accVectorVal  accIntVal     accRealVal    accStringVal
#   accBinStrVal  accOctStrVal  accDecStrVal  accHexStrVal
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.96 acc_set_value()]
# 
# 
# vsim Message # 3506:
# An invalid time type was passed in the delay parameter time type field.
# Valid values are: accTime, accSimTime, and accRealTime.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.96 acc_set_value()]
# 
# 
# vsim Message # 3507:
# An invalid delay model was passed in the delay parameter model field.
# Valid models are:
#   accNoDelay  accInertialDelay  accTransportDelay  accPureTransportDelay
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.96 acc_set_value()]
# 
# 
# vsim Message # 3508:
# The object handle parameter to acc_append_delays(), acc_fetch_delays(),
# and acc_replace_delays() must be a handle to a Verilog port, primitive,
# module or intermodule path, or timing check.
# [DOC: IEEE Std 1364-1995 Verilog LRM -
#  19.1 acc_append_delays(),
#  19.15 acc_fetch_delays(),
#  19.90 acc_replace_delays()]
# 
# 
# vsim Message # 3509:
# The specified parameter to the specified function must be a handle to
# a Verilog module path.
# [DOC: IEEE Std 1364-1995 Verilog LRM]
# 
# 
# vsim Message # 3510:
# The reject percentage parameter to acc_set_pulsere() must be a
# real number in the range 0.0 to 1.0 inclusive.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.94 acc_set_pulsere()]
# 
# 
# vsim Message # 3511:
# The error percentage parameter to acc_set_pulsere() must be a real
# number in the range 0.0 to 1.0 inclusive and must be greater than or
# equal to the reject percentage.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.94 acc_set_pulsere()]
# 
# 
# vsim Message # 3512:
# The scope handle parameter to acc_handle_by_name() must be either a
# handle to a scope object or NULL.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.38 acc_handle_by_name()]
# 
# 
# vsim Message # 3513:
# The path handle parameter to acc_handle_condition() must be a handle
# to a Verilog module path, data path, or timing check terminal.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.40 acc_handle_condition()]
# 
# 
# vsim Message # 3514:
# The terminal handle parameter to acc_handle_conn() must be a handle to
# a Verilog primitive terminal, path terminal, or timing check terminal.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.41 acc_handle_conn()]
# 
# 
# vsim Message # 3515:
# The port ref handle parameter to acc_handle_hiconn() and
# acc_handle_loconn() must be a handle to a Verilog scalar module
# port or a bit-select of a vector port.
# [DOC: IEEE Std 1364-1995 Verilog LRM -
#  19.43 acc_handle_hiconn(),
#  19.45 acc_handle_loconn()]
# 
# 
# vsim Message # 3516:
# The specified parameter to the specified function must be a handle
# to a Verilog net.
# [DOC: IEEE Std 1364-1995 Verilog LRM]
# 
# 
# vsim Message # 3517:
# The specified parameter to the specified function must specify the
# name of a Verilog net.
# [DOC: IEEE Std 1364-1995 Verilog LRM]
# 
# 
# vsim Message # 3518:
# The tchk parameter to acc_handle_notifier() must be a handle to
# a Verilog timing check.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.47 acc_handle_notifier()]
# 
# 
# vsim Message # 3519:
# The port input handle parameter to acc_handle_path() must be a handle
# to a Verilog scalar input or bidirectional port, or one bit of a vector
# input or bidirectional port.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.50 acc_handle_path()]
# 
# 
# vsim Message # 3520:
# The timing check type parameter to acc_handle_tchk() must be one of
# the following:
#   accHold    accNochange  accPeriod     accRecovery  accRemoval
#   accRecrem  accSetup     accSetuphold  accSkew      accWidth
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.56 acc_handle_tchk()]
# 
# 
# vsim Message # 3521:
# The timing check parameter to the specified function must be a handle
# to a Verilog timing check.
# [DOC: IEEE Std 1364-1995 Verilog LRM]
# 
# 
# vsim Message # 3522:
# The primitive handle parameter to acc_handle_terminal() must be a
# handle to a Verilog primitive.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.59 acc_handle_terminal()]
# 
# 
# vsim Message # 3523:
# The specified parameter to the specified function must be a handle to
# a Verilog or VHDL scope.
# [DOC: IEEE Std 1364-1995 Verilog LRM]
# 
# 
# vsim Message # 3524:
# The reference_handle parameter to acc_next_bit() must be a handle to
# a Verilog vector port or vector net.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.64 acc_next_bit()]
# 
# 
# vsim Message # 3525:
# The specified parameter to the specified function must be a handle to
# a Verilog port.
# [DOC: IEEE Std 1364-1995 Verilog LRM]
# 
# 
# vsim Message # 3526:
# The reference handle parameter to the specified function must be a
# handle to a Verilog module instance or a VHDL architecture instance.
# [DOC: IEEE Std 1364-1995 Verilog LRM]
# 
# 
# vsim Message # 3527:
# The reference handle parameter to acc_next_port() must be a handle to
# a Verilog module instance or net or a VHDL architecture instance.
# [DOC: IEEE Std 1364-1995 Verilog LRM]
# 
# 
# vsim Message # 3528:
# The reference handle parameter to acc_next_terminal() must be a
# handle to a Verilog primitive or UDP.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.83 acc_next_terminal()]
# 
# 
# vsim Message # 3529:
# The call to the specified PLI function was not made from within a system
# task/function instance, therefore the function cannot perform its
# operations. The tf_getinstance() function can be used to determine if
# the PLI code has been called from within a system task/function instance.
# [DOC: IEEE Std 1364-1995 Verilog LRM - PLI Sections 17-21]
# 
# 
# vsim Message # 3530:
# An invalid value was given for the specified configuration parameter.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.6 acc_configure()]
# 
# 
# vsim Message # 3531:
# An invalid value was specified for the vcl_flag parameter. The valid
# values are: vcl_verilog_logic or vcl_verilog_strength.
# [DOC: IEEE Std 1364-1995 Verilog LRM - 19.97 acc_vcl_add()]
# 
# 
# vsim Message # 3532:
# The object handle parameter passed to the specified vcl function must be
# a handle to a Verilog register, net, variable, port, terminal, or event.
# [DOC: IEEE Std 1364-1995 Verilog LRM -
#  19.97 acc_vcl_add(),
#  19.98 acc_vcl_delete()]
# 
# 
# vsim Message # 3533:
# Either all 32 mcd file channels are in use, so another mcd file cannot
# be opened, or some problem was encountered when trying to open the file,
# in which case further information might be displayed after this message.
# This warning is controlled by the +nowarnFOFIW vsim option.
# 
# 
# vsim Message # 3534:
# Some problem was encountered when trying to open the specified file for
# reading. Verify that the file exists and that the permissions allow you
# to read the file. Additional information might be displayed after this
# message. This warning is controlled by the +nowarnFOFIR vsim option.
# 
# 
# vsim Message # 3535:
# Some problem was encountered when trying to open the specified file for
# appending. Verify that the file exists and that the permissions allow
# you to write to the file. Additional information might be displayed
# after this message. This warning is controlled by the +nowarnFOFIA
# vsim option.
# 
# 
# vsim Message # 3536:
# The level (1st) argument to $dumpvars() and $fdumpvars() must be an
# integer greater than or equal to zero.
# 
# 
# vsim Message # 3537:
# For $dumpvars() and $fdumpvars(), the arguments after the level
# argument must be either variables or module instances.
# 
# 
# vsim Message # 3538:
# The file size argument to $dumplimit(), $dumpportslimit(), and
# $fdumplimit() must be an integer greater than or equal to zero. This
# number specifies the maximum size of the VCD file in bytes. When the
# size of the VCD file reaches this number of bytes, the dumping stops
# and a comment is inserted in the VCD file indicating the dump limit
# was reached.
# 
# 
# vsim Message # 3541:
# No files have been opened with $dumpports(), therefore there are no
# files to which the limit can be applied.
# 
# 
# vsim Message # 3542:
# It is an error if the L parameter (of type LINE) in a call to a
# TEXTIO READ procedure contains the null access value.  The value of the
# parameter must designate a string from which to extract a value.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 14.3 Package TEXTIO]
# 
# 
# vsim Message # 3543:
# The L parameter (of type LINE) of a call to a TEXTIO READ procedure
# designates either a string containing no characters or containing only
# whitespace.  A READ call does not succeed if no sequence of characters
# can be removed from L to form a valid string representation of the
# value of the specified output parameter type.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 14.3 Package TEXTIO]
# 
# 
# vsim Message # 3544:
# A TEXTIO READ procedure expected to read a BIT value, but found some
# other value instead.  Valid BIT values are 0 and 1.  No leading or
# trailing quotation characters are present.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 14.3 Package TEXTIO]
# 
# 
# vsim Message # 3545:
# A TEXTIO READ procedure expected to read a BOOLEAN value, but found
# some other value instead.  Valid BOOLEAN values are the identifiers
# FALSE and TRUE (case insensitive).
# [DOC: IEEE Std 1076-1993 VHDL LRM - 14.3 Package TEXTIO]
# 
# 
# vsim Message # 3546:
# A TEXTIO READ procedure expected to read an INTEGER value, but found
# some other value instead.  An INTEGER value comprises an optional
# leading sign (+ or -) followed by a sequence of 1 or more digits 0-9
# possibly interspersed with underline characters, optionally followed
# by an exponent.  A decimal point is not considered to be a part of the
# string representation of an INTEGER value.
# The exponent, if present, is represented by the character 'E' or 'e',
# followed optionally by a + sign, followed by a sequence of 1 or
# more digits 0-9.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 13.4.1 Decimal literals]
# [DOC: IEEE Std 1076-1993 VHDL LRM - 14.3 Package TEXTIO]
# 
# 
# vsim Message # 3547:
# A TEXTIO READ procedure expected to read a REAL value, but found some
# other value instead.  A REAL value comprises an optional leading sign
# (+ or -) followed by a sequence of 1 or more digits 0-9 possibly
# interspersed with underline characters, a decimal point, and another
# sequence of 1 or more digits 0-9 possibly interspersed with underline
# characters, optionally followed by an exponent.  The decimal point
# (followed immediately by at least one digit) is required.
# The exponent, if present, is represented by the character 'E' or 'e',
# followed optionally by a sign (+ or -), followed by a sequence of 1 or
# more digits 0-9.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 13.4.1 Decimal literals]
# [DOC: IEEE Std 1076-1993 VHDL LRM - 14.3 Package TEXTIO]
# 
# 
# vsim Message # 3548:
# A TEXTIO READ procedure expected to read a TIME value, but found some
# other value instead. A TIME value comprises an optional integer or real
# decimal literal with trailing whitespace, followed by a TIME unit 
# identifier.  The integer or real literal, when present, is optionally
# preceded immediately by a sign character (+ or -).
# [DOC: IEEE Std 1076-1993 VHDL LRM - 13.4.1 Decimal literals]
# [DOC: IEEE Std 1076-1993 VHDL LRM - 14.3 Package TEXTIO]
# 
# 
# vsim Message # 3549:
# A TEXTIO READ procedure expected to read a bit vector or string of
# a given length, but found a smaller number of legal characters.
# A READ does not succeed if the sequence of characters removed from the
# string designated by parameter L does not contain VALUE'LENGTH
# characters.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 14.3 Package TEXTIO]
# 
# 
# vsim Message # 3550:
# A TEXTIO READ procedure expected to read a STD_ULOGIC or
# STD_ULOGIC_VECTOR value, but found some other value instead.
# Valid STD_ULOGIC values are:
#   'U', 'X', '0', '1', 'Z', 'W', 'L', 'H', '-'
# 
# 
# vsim Message # 3551:
# A TEXTIO procedure read past the end of the specified file. Use the
# ENDFILE function to check for an end-of-file condition before reading.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 14.3 Package TEXTIO]
# 
# 
# vsim Message # 3552:
# The string parameter to the predefined attribute 'VALUE could not be
# interpreted as the string representation of an enumeration literal that
# belongs to the enumeration type or subtype denoted by the prefix of the
# attribute name.
# 
# 
# vsim Message # 3553:
# No valid unit name was specified in a physical type value string.
# A string representation of a value of a physical type may be
# expressed using any of the unit names of the physical type, with or
# without a leading abstract literal.  The string must have whitespace
# between any abstract literal and the unit name.
# 
# 
# vsim Message # 3554:
# There was no whitespace between the abstract literal and the unit name.
# A string representation of a value of a physical type may be
# expressed using any of the unit names of the physical type, with or
# without a leading abstract literal.  The string must have whitespace
# between any abstract literal and the unit name.
# 
# 
# vsim Message # 3555:
# The identifier is not a unit name of the physical type.
# A string representation of a value of a physical type may be
# expressed using any of the unit names of the physical type, with or
# without a leading abstract literal.  The string must have whitespace
# between any abstract literal and the unit name.
# 
# 
# vsim Message # 3556:
# The value is outside of the range of the physical type.
# 
# 
# vsim Message # 3557:
# The string parameter to the predefined attribute 'VALUE cannot be
# interpreted as a floating point value that belongs to the floating
# point type or subtype denoted by the prefix of the attribute name.
# 
# 
# vsim Message # 3558:
# The string parameter to the predefined attribute 'VALUE cannot be
# interpreted as a TIME value that belongs to the TIME type or subtype
# denoted by the prefix of the attribute name.
# 
# 
# vsim Message # 3559:
# An attempt to open a socket with a WDB server failed.
# 
# 
# vsim Message # 3561:
# An object of the specified name could not be found in the design.
# Use the structure, signals, and variables windows in the GUI to
# verify the existence of and the correct hierarchical name of the
# object in question.
# 
# If the object is not visible because of an optimization, then it can
# be made visible by using one of the following compiler options:
#   vcom +acc[=<spec>][+<entity>[(<architecture>)]]
#   vlog +acc[=<spec>][+<module>[.]]
# See the ModelSim Command Reference for details on the access options.
# 
# 
# vsim Message # 3562:
# The argument to the $fclose() system task must be either a 32 bit multi channel
# descriptor or a 32 bit file descriptor, as returned by the $fopen() system function.
# [DOC: IEEE Std 1364-2001 Verilog LRM - Section 17.2.1]
# 
# 
# vsim Message # 3563:
# Valid slice directions are: ':', 'downto', 'to'.
# 
# 
# vsim Message # 3564:
# Various commands and operations cannot be performed on a NULL slice.
# A NULL slice is a slice of an object with a range that is a NULL range.
# That is, the range goes from a low number to a high number but the
# direction is DOWNTO or the range goes from a high number to a low
# number but the direction is TO.
# 
# 
# vsim Message # 3565:
# The range of a VHDL slice or Verilog part-select must have the same
# direction as the bounds of the object that is being sliced.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 6.5 Slice names]
# [DOC: IEEE Std 1364-1995 Verilog LRM -
#  4.2.1 Net and register bit-select and part-select addressing]
# 
# 
# vsim Message # 3566:
# The beginning of a slice or part-select ('(' or '[') was detected,
# but the matching closing parenthesis or square bracket was not found.
# 
# 
# vsim Message # 3567:
# The specified name is not a valid field name for the object type.
# 
# 
# vsim Message # 3568:
# An attempt was made to use a NULL access value as the prefix of a
# selected name, indexed name, or slice name.
# 
# 
# vsim Message # 3569:
# The specified object could not be found in the design. Use the
# structure, signals, and variables windows to verify the existence of
# and the hierarchical name of the object.
# 
# 
# vsim Message # 3570:
# The number of elements in each of the two RECORDs that are to be
# connected must match.
# 
# 
# vsim Message # 3571:
# The type of the specified object is not recognized as a valid type
# by the Signal Spy functions.
# 
# 
# vsim Message # 3572:
# The type and length of two objects that are to be connected must
# be compatible.
# 
# 
# vsim Message # 3573:
# The length of two array objects that are to be connected must be the same.
# 
# 
# vsim Message # 3574:
# If a Verilog array object is being connected to a VHDL array object,
# then the VHDL array must be an enumeration array type of bit_vector
# or std_logic_vector. If a Verilog scalar object is being connected to
# a VHDL scalar object, then the VHDL scalar must be an enumeration type
# of bit or std_logic.
# 
# 
# vsim Message # 3575:
# Two enumeration type objects that are to be connected must be of
# compatible enumeration types. At a minimum they must both have the
# same number of enumerations.
# 
# 
# vsim Message # 3576:
# An incorrect number of arguments was passed to the specified task or
# function.
# 
# 
# vsim Message # 3577:
# A WDB call returned an error.
# 
# 
# vsim Message # 3578:
# It is an error if the index values defined by choices in an
# array aggregate do not belong to the corresponding index range
# of the array.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.3.2.2 Array aggregates]
# 
# 
# vsim Message # 3579:
# An element can be assigned a value in a single assignment, but complete
# or partial array dimensions cannot. Also, complete or partial array
# dimensions cannot be used to provide a value to an expression. To assign
# a value to an element of an array, an index for every dimension must be
# specified.
# [DOC: IEEE Std 1364-2001 Verilog LRM]
# 
# 
# vsim Message # 3580:
# This warning is issued during elaboration when a process or function
# requires a stack frame size exceeding 75% of the current stacksize
# limit. Its appearance presages a stack overflow or memory allocation
# error during simulation. Process and function stack frames include
# parameters, local variables, and compiler-generated temporary variables
# and thus vary in size depending on the size and complexity of the
# design and the language features used. The UNIX shell limit, unlimit,
# or ulimit commands can be used to adjust the current stacksize limit
# within bounds set by your system administrator.
# 
# 
# vsim Message # 3581:
# The checkpoint file contains the necessary information for restoring
# the PLI shared libraries that were originally loaded with the design;
# therefore, any -pli arguments specified with a -restore argument (cold
# restore) are ignored.
# 
# 
# vsim Message # 3583:
# This is a limitation of ModelSim. SDF annotation of multi-source
# interconnect between ports of mixed language modules (e.g. Verilog to
# VHDL) is not currently supported.
# 
# 
# vsim Message # 3584:
# The given parameter name could not be found in the associated module
# instance. The specified parameter override will be ignored.
# 
# 
# vsim Message # 3585:
# Once a parameter is assigned a value, there shall not be another
# assignment to this parameter name.
# 
# 
# vsim Message # 3586:
# When specifying the dimensions of a multi-dimensional object, all of the
# dimensions must be specified and no part-selects (slices) are allowed.
# A bit-select or part-select of the element can be specified.
# 
# 
# vsim Message # 3587:
# This message is printed when an SDF file is successfully annotated to
# the design.
# [DOC: ModelSim User's Manual - Standard Delay Format (SDF) Timing
#  Annotation Chapter]
# 
# 
# vsim Message # 3588:
# mti_CreateDriver() cannot be used to create a driver on a subelement of
# a resolved composite signal because of the requirements that a driver
# must also be created on the composite itself and drivers must be created
# on all subelements of the composite. This cannot be guaranteed through
# mti_CreateDriver() because there is no point at which a check can be
# made to ensure that all drivers were created properly.
# 
# 
# vsim Message # 3589:
# Using the -gui option when creating an elaboration file is not
# permitted. Use the -i option instead.
# 
# 
# vsim Message # 3590:
# The string literal does not have the same length as its constrained
# array subtype.  This can occur when a string literal (or bit string
# literal) is associated with a formal whose type is not locally static,
# or when the context in which the literal appears is defined by a
# non-locally static array type.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.3.1 Literals]
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.3.2.2 Array aggregates]
# 
# 
# vsim Message # 3591:
# The parameter value of the specified predefined attribute is an
# illegal value; the attribute cannot return a legal value given
# this parameter as input.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 14.1 Predefined attributes]
# 
# 
# vsim Message # 3592:
# The specified object is not supported by the Signal Spy functions.
# 
# 
# vsim Message # 3593:
# mti_CreateDriver() cannot be used to create a driver on a VHDL port if
# the port is not collapsed with the connected signal. A VHDL port is not
# collapsed if it is connected to a Verilog signal, if a conversion
# function appears in the port map, or if the vsim -nocollapse option is
# used.
# 
# 
# vsim Message # 3594:
# The -load_elab option loads an elaboration file created with the -elab
# option. Design units can be specified only with the -elab option.
# 
# 
# vsim Message # 3595:
# The log filename setting (-wlf) is not set at elaboration so it can be
# specified at load elaboration time.
# 
# 
# vsim Message # 3596:
# The left operand (array of arrays) can be concatenated with the right
# operand (array) only if the length of the element array of the left
# operand is the same as the length of the array of the right operand.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.2.4 Adding operators]
# 
# 
# vsim Message # 3597:
# The left operand (array) can be concatenated with the right operand
# (array of arrays) only if the length of the left operand is the same as
# the length of the element array of the right operand.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.2.4 Adding operators]
# 
# 
# vsim Message # 3598:
# Two arrays can be concatenated together to form a 2-element array of
# arrays only if each of them has the same length.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.2.4 Adding operators]
# 
# 
# vsim Message # 3599:
# Two arrays can be concatenated together to form an array of arrays only
# if each array has the same length as the element of the resulting array
# of arrays.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.2.4 Adding operators]
# 
# 
# vsim Message # 3600:
# The -elab_defer_fli option defers all initialization calls to FLI code
# during elaboration file creation until an elaboration file is loaded.
# Normally, -elab/-elab_cont appears as a checkpoint to the FLI and
# -load_elab appears as a restore. Use -elab_defer_fli when the FLI
# does not support checkpoint/restore.
# 
# 
# vsim Message # 3601:
# The simulator iterates at a given simulation time in zero delay until
# there is no more activity at that time. In order for it to not hang if
# there is a zero-delay oscillation, it limits the number of iterations
# to a default of 5000. If you reach this limit, the simulation will stop
# with an error. If you receive this error you can increase the iteration
# limit, (via "set IterationLimit <newvalue>") and then try single
# stepping to attempt to determine which instances in the design may be
# oscillating.
# [DOC: ModelSim User's Manual - Detecting infinite zero-delay loops]
# 
# 
# vsim Message # 3602:
# If an iteration limit error was reached, it may be due to the fact that
# delays around a connectivity loop in the design logic may have been
# truncated to zero due to the timescale that vsim used. Check the -t
# vsim option to make sure that the time resolution is in a small enough
# granularity to simulate all of the delays in the design without
# truncating them.
# 
# 
# vsim Message # 3603:
# The simulator detected a connectivity loop in the design that is
# oscillating due to the delays being zero, and the loop not settling
# out to a stable state. The pathnames to each instance in the
# connectivity loop should be displayed along with this message.
# The simulation cannot be continued after this error occurs.
# 
# 
# vsim Message # 3604:
# A problem was encountered while attempting to read the specified type
# of data from the specified type of file. Either the file is corrupt or
# there is a mismatch in the way that the file is being read as opposed to
# the way in which it was written. For example, a mismatch can occur if
# foreign code does not read all of its checkpoint data in the same order
# in which it was written. This fatal error causes the simulation process
# to exit.
# 
# 
# vsim Message # 3605:
# The slice is a null slice if the direction of the discrete range is not
# the same as that of the object denoted by the prefix of the slice name.
# [DOC: IEEE Std 1076-1987 VHDL LRM - 6.5 Slice names]
# 
# 
# vsim Message # 3606:
# When making a null slice, because the direction of the discrete_range is
# different from the direction of the array object denoted by the prefix of
# the slice name (see warning message #3605), it is impossible to describe
# a null range when the left and right bounds are identical.
# 
# 
# vsim Message # 3607:
# It is an error if the direction of the discrete range of a slice name
# is not the same as that of the index range of the array denoted by the
# prefix of the slice name.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 6.5 Slice names]
# 
# 
# vsim Message # 3608:
# The specified generate object is indexed with a number outside of the range.
# 
# 
# vsim Message # 3609:
# Hierarchical references to optimized cell ports must occur after the
# cell's instantiation. This can be fixed by moving the reference below
# all cell or netlist instantiations. Optimized cell port visibility is
# implemented in this manner to conserve memory for unreferenced ports.
# 
# 
# vsim Message # 3610:
# The returned value of a function must belong to the return subtype.
# For a return subtype that is a constrained array subtype, the bounds
# of the returned value must match those of this subtype at every index
# position in the index constraint of the array type.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 8.12 Return statement]
# 
# 
# vsim Message # 3611:
# A top-level design unit requires language specific licensing.
# [DOC: ModelSim Command Reference - vsim command]
# 
# 
# vsim Message # 3612:
# Instantiation of the specified design unit failed due to a licensing error.
# 
# 
# vsim Message # 3613:
# Instantiation of a Verilog optimized cell as design top-level is not
# supported in ModelSim simulation.
# 
# 
# vsim Message # 3614:
# An internal error occurred while processing a generate loop.
# Please report this error to support@model.com.
# 
# 
# vsim Message # 3615:
# A genvar is, by definition, a non-negative integer, so setting it to a
# negative value is an error.
# [DOC: IEEE Std 1364-2001 Verilog LRM - Section 12.1.3.1]
# 
# 
# vsim Message # 3616:
# Setuphold and recrem checks are modified if the sum of the setup and hold
# constraints is negative. The negative limit(s) are set to zero.
# A warning message is issued for each check that is disabled.
# This warning is controlled by the vsim option +ntc_warn.
# [DOC: ModelSim User's Manual - Verilog Simulation Chapter]
# 
# 
# vsim Message # 3617:
# A null instance path was specified to the coverage_data command.
# [DOC: ModelSim User's Manual - Code Coverage Chapter]
# 
# 
# vsim Message # 3619:
# Multiple drivers on a specify path destination port are illegal according
# to the IEEE 1364 Standard. (NOTE: If some of the drivers are embedded in
# hierarchical instances, the filename and/or the line number reported will
# be incorrect. In this case the 'Region' information must be used to go up
# the instance hierarchy to find the module that has the reported error).
# [DOC: IEEE Std 1364-1995 Verilog LRM - 13.3.1 Module path restrictions]
# [DOC: IEEE Std 1364-2001 Verilog LRM - 14.2.1 Module path restrictions]
# 
# 
# vsim Message # 3620:
# A specify path destination port with no drivers on it is most likely unintended.
# 
# 
# vsim Message # 3622:
# The +pulse_r/<percent> option sets the module path pulse rejection
# limit as a percentage of the path delay, therefore the value must be
# a number in the range 0 to 100 inclusive.
# 
# 
# vsim Message # 3623:
# The +pulse_e/<percent> option sets the module path pulse error limit
# as a percentage of the path delay, therefore the value must be a
# number in the range 0 to 100 inclusive.
# 
# 
# vsim Message # 3624:
# The +pulse_int_r/<percent> option sets the interconnect path pulse
# rejection limit as a percentage of the path delay, therefore the
# value must be a number in the range 0 to 100 inclusive.
# 
# 
# vsim Message # 3625:
# The +pulse_int_e/<percent> option sets the interconnect path pulse
# error limit as a percentage of the path delay, therefore the value
# must be a number in the range 0 to 100 inclusive.
# 
# 
# vsim Message # 3626:
# An error was detected while applying an interconnect delay. This may be
# caused by applying a multisource interconnect delay to an unconnected
# IO port.
# 
# 
# vsim Message # 3627:
# The input data file or fill pattern was not specified.
# 
# 
# vsim Message # 3628:
# The input data file contains an unterminated comment.
# 
# 
# vsim Message # 3629:
# The input data file contains a syntax error or an invalid entry.
# 
# 
# vsim Message # 3630:
# A leading underscore is not allowed in an address or data specification.
# 
# 
# vsim Message # 3631:
# An illegal character for an address value was found in the input data file.
# 
# 
# vsim Message # 3632:
# An illegal character for the specified radix was found in the input data file.
# 
# 
# vsim Message # 3633:
# IEEE Std 1076-1993, 3.2.1.1 Index constraints and discrete ranges, line 361:
#   An index constraint is compatible with the [array] type denoted by the
#   type mark if and only if the constraint defined by each discrete range
#   is compatible with the corresponding index subtype [of the array type].
# 
# 
# vsim Message # 3634:
# At most one instance can be specified for this command.
# 
# 
# vsim Message # 3636:
# The specified region must point to a unique memory or a module that
# contains just one memory.
# 
# 
# vsim Message # 3638:
# Radices can be specified only for file format 'mti'.
# 
# 
# vsim Message # 3639:
# The radix was specified incorrectly.
# 
# 
# vsim Message # 3640:
# The valid values are mti, hexadecimal, and binary.
# 
# 
# vsim Message # 3641:
# Only one memory can be specified for this command.
# 
# 
# vsim Message # 3642:
# Memory must be specified.
# 
# 
# vsim Message # 3643:
# The words per line value must be a positive integer.
# 
# 
# vsim Message # 3644:
# A required option is missing.
# 
# 
# vsim Message # 3645:
# The size and count parameters to mti_CreateEnumType() must be an integer
# greater than 0. The literals parameter cannot be NULL.
# [DOC: ModelSim Foreign Language Interface Manual - mti_CreateEnumType()]
# 
# 
# vsim Message # 3646:
# The -toggleMaxIntValues option controls the maximum number of integer values
# that are tracked by toggle coverage. Coverage of an integer means keeping track
# of each value the integer assumes along with an associated count. The default is
# 100 values.
# 
# 
# vsim Message # 3648:
# The valid options are 'value', 'inc', 'dec', and 'rand'.
# 
# 
# vsim Message # 3649:
# The valid values for the -skip option are integers greater than zero.
# 
# 
# vsim Message # 3650:
# Either specify the format or make sure the data file contains an mti
# format header.
# 
# 
# vsim Message # 3651:
# The formats from the command line and the specified file do not match.
# 
# 
# vsim Message # 3652:
# The address is invalid or out of bounds.
# 
# 
# vsim Message # 3653:
# The fill pattern was not specified even though -filltype was specified.
# 
# 
# vsim Message # 3654:
# The specified value is not a legal value for this signal.
# 
# 
# vsim Message # 3656:
# The checkpoint function attempted to write the the given amount of data
# to the checkpoint file, but only succeeded in writing a smaller amount.
# This was either because of some error, which should be reported following
# this message, or some system file limit was exceeded. Possible limits are
# process file size limit (see "getrlimit" and "ulimit" under UNIX
# systems), free space available on the device, or some other system imposed
# limit.
# 
# 
# vsim Message # 3657:
# An illegal character for the specified radix was found in the input data file.
# 
# 
# vsim Message # 3658:
# An illegal radix character was found in the data word.
# 
# 
# vsim Message # 3659:
# The width of the data is larger than the width of the memory word.
# 
# 
# vsim Message # 3660:
# The specified value is not legal for the specified filldata.
# 
# 
# vsim Message # 3661:
# This is a catch-all message for the change command. The messages should
# be self-explanatory.
# [DOC: ModelSim Command Reference - change command]
# 
# 
# vsim Message # 3662:
# Based on the SDF construct at the specified file/line, the
# specified generic should be of the specified type.
# 
# 
# vsim Message # 3663:
# The specified object was found in the design but it is not a memory.
# 
# 
# vsim Message # 3664:
# The specified path does not have any memory object.
# 
# 
# vsim Message # 3665:
# Multiple top level models are allowed only in configurations that are used as
# the top level design unit. Configurations that are instantiated in a design
# can have only a single top level module specified in the design statement.
# 
# 
# vsim Message # 3666:
# The compress option of the mem save command is allowed only for the MTI format.
# 
# 
# vsim Message # 3667:
# Automatic task/function items can not be accessed by hierarchical references
# according to the IEEE 1364 Standard.
# [DOC: IEEE Std 1364-2001 Verilog LRM - 12.4 Hierarchical names]
# 
# 
# vsim Message # 3669:
# A problem occurred when trying to open the VCD file.
# The effect is that VCD data will not be saved in the checkpoint file.
# 
# 
# vsim Message # 3670:
# A problem occurred while copying the VCD file into the checkpoint file.
# 
# 
# vsim Message # 3671:
# The find pattern was not specified.
# 
# 
# vsim Message # 3672:
# An illegal radix character was found in the find/replace pattern.
# 
# 
# vsim Message # 3673:
# An illegal character for the specified radix was found
# in the specified pattern.
# 
# 
# vsim Message # 3674:
# A -vcdstim argument must be of one of the following forms:
#   -vcdstim <vcd file>
#   -vcdstim /=<vcd file>
#   -vcdstim <instance pathname>=<vcd file>
# The first two forms apply the stimulus from the vcd file to the
# top-level of the design.  The third form replaces the designated instance
# with stimulus from the corresponding vcd file.
# [DOC: ModelSim Command Reference - vsim command]
# 
# 
# vsim Message # 3675:
# The shared library for the specified design unit could not be
# found for loading. Verify that the design unit has been compiled into
# the correct library and that the library is mapped correctly. (Check the
# modelsim.ini file.) The vlib command creates ModelSim libraries and the
# vmap command maps them.
# 
# 
# vsim Message # 3676:
# The shared library for the specified design unit could not be
# loaded. Verify that the design unit has been compiled into
# the correct library and that the library is mapped correctly. (Check the
# modelsim.ini file.) The vlib command creates ModelSim libraries and the
# vmap command maps them. Also verify that you are running on the same
# platform on which you compiled the design.  You can use the
# "vdel -allsystemc" command to clean all SystemC objects out of
# your library in case you need to recompile.
# 
# Tools like c++filt and nm can be used to debug such cases. 
# c++filt demangles the compiler generated mangled symbol names in valid C++ syntax. c++filt needs to be compatible with the compiler used to compile the design. In essence it is important that both the binaries be from the same release. Grepping for the demangled demangled symbol name would help locate the erroneous code. In some cases however, c++filt won't be able to demangle the name properly. For example, when the virtual table of a class is not correct, a symbol is undefined. The symbol might be something like "_ZTV4proc". This symbol is for the virtual table of the class proc. In most cases the class name is embedded in the symbol. A virtual table of a class might be undefined if a virtual function of the class is left undefined. If the undefined symbol is not in the user's source code, then it must be getting linked  from either the libraries(.a, .so) or object files(.o) that the user is linking during 'sccom -link' or it is being linked in from the ModelSim libraries. In this scenario, nm can be used to determine the object file or library that contains reference to the particular symbol
# 
# Some of the common cases which can lead to undefined symbols are: 
# - Missing definition of a function/variable.
# - Object file or library containing the defined symbol is not linked.
# - Mixing of C and C++ compilers to compile a testcases.
# - Mixing object files/libraries created by different versions of the compiler.
# Use 'ldd' to figure out the dynamic dependencies of the shared object.
# 'man ldd' to get more information on ldd usage.
# 
# 
# vsim Message # 3677:
# All SystemC modules on the top of the design and those instantiated
# by HDL design units should be exported using the SC_MODULE_EXPORT macro.
# 
# 
# vsim Message # 3678:
# Make sure that the SystemC library from the ModelSim installation
# is used to create the SystemC shared library.
# 
# 
# vsim Message # 3679:
# There was a problem opening the VCD file that was open during the
# corresponding checkpoint.  Verify that the file path exists and that
# you have read permission in the directory.
# 
# 
# vsim Message # 3680:
# Value change callbacks are not allowed for automatic variables
# declared within a task or function.
# [DOC: IEEE Std 1364-2001 Verilog LRM - 10.2.3 Task memory usage and concurrent activation]
# 
# 
# vsim Message # 3681:
# In order to successfully look up type information for a SystemC port or
# channel, the runtime name (the name passed to the constructor) should
# match the C++ declared name.  Although the simulator performs automatic
# name-binding to match names to objects, it might still fail in some
# cases. In those cases the channel or port must be constructed using
# an explicit name that matches the declared name.
# 
# 
# vsim Message # 3682:
# At the SystemC HDL boundary, all ports must be bound.
# 
# 
# vsim Message # 3683:
# The values returned by namespace functions had some error.
# 
# 
# vsim Message # 3684:
# The specified string is either not a valid source file path,
# or contains no executable statements,
# or has already been excluded.
# 
# 
# vsim Message # 3685:
# The width of a SystemC port must match the width of the Verilog port(s)
# to which it is connected.
# [DOC: ModelSim User's Manual - Mixed Language Designs Chapter]
# 
# 
# vsim Message # 3686:
# The allowed SystemC types for Verilog connection are: sc_bit, sc_bv<W>,
# sc_logic, sc_lv<W>, sc_int<W>, sc_uint<W>, bool, char, unsigned char,
# int, unsigned int, long and unsigned long.
# [DOC: ModelSim User's Manual - Mixed Language Designs Chapter]
# 
# 
# vsim Message # 3687:
# A SystemC port cannot be connected to a Verilog object
# that is not a net.
# [DOC: IEEE Std 1364-1995 Verilog LRM -
#  12.3.6 Connecting dissimilar ports,
#  12.3.7 Port connection rules]
# 
# 
# vsim Message # 3688:
# Please check the list of supported types at the SystemC/HDL boundary.
# 
# 
# vsim Message # 3689:
# When a VHDL or Verilog vector signal is connected to a SystemC vector
# signal, the width of both objects must be the same.
# 
# 
# vsim Message # 3690:
# When a VHDL or Verilog vector signal is connected to a SystemC native C type
# signal, the width of the HDL signal must match the number of bits of the SystemC
# signal data type. Similarly, when a VHDL integer/real signal is connected to a
# SystemC vector signal, the width of the SystemC vector signal must match the
# number of bits of the HDL signal.
# 
# 
# vsim Message # 3691:
# While creating an instance of a system task, it was found that a
# system function of that name was registered either through the PLI
# or as a built-in systf. If you wish to correctly use the system
# function here, you should set the return value from the system
# function to a Verilog variable.
# 
# 
# vsim Message # 3692:
# The name passed to the constructor of the channel/port in the C++ source
# code must match with the name used at the Verilog instantiation site.
# 
# 
# vsim Message # 3693:
# The time resolution can be set in SystemC by using the
# sc_set_time_resolution() function in a SystemC module constructor.
# If only VHDL units are present in the design or if the resolution is
# not set explicitly in SystemC, then the default resolution is chosen.
# The default time resolution can be changed by setting the Resolution
# variable in the modelsim.ini file. All resolution settings can be
# overwritten by using the vsim -t command line option.
# 
# 
# vsim Message # 3694:
# A module instantiated with an implicit port connection (.*) was unable to
# find a matching port, net, or variable name in the instantiating scope that
# matches a port name inside the instantiated module. There must be a port,
# net, or variable with the same name, type, and size declared in the scope
# that instantiates a module with the implicit port connection operator.
# 
# 
# vsim Message # 3695:
# An interface port must be passed an actual that is an interface.
# 
# 
# vsim Message # 3696:
# For the readmem command, the address format for 3D memories is not
# specified. In case of dynamic arrays of dynamic arrays or any combination
# of dynamic and unpacked arrays, only the MTI format can be used.
# 
# 
# vsim Message # 3697:
# An interface port must be passed an actual that is the same interface.
# 
# 
# vsim Message # 3698:
# An interface array port must be passed an actual that is an interface
# array of the same size.
# 
# 
# vsim Message # 3699:
# Too many indices were used in an external array reference.
# 
# 
# vsim Message # 3700:
# An attempt was made to index an object that is not an array.
# 
# 
# vsim Message # 3701:
# An unknown reference to a field/method was made.
# 
# 
# vsim Message # 3703:
# Currently mem commands use MEM_MAX_DIM as 32.
# 
# 
# vsim Message # 3704:
# When instantiated from VHDL, a SystemC port must be connected to a VHDL
# signal or left open. It cannot be connected to a VHDL literal.
# 
# 
# vsim Message # 3707:
# A VHDL scalar signal can be connected to a SystemC port only if the
# SystemC port is a scalar. A VHDL vector signal can be connected to a
# SystemC port only if the SystemC port is a vector.
# [DOC: ModelSim User's Manual - Mixed VHDL and SystemC Designs Chapter]
# 
# 
# vsim Message # 3709:
# IEEE Std 1076-1993, 2.1.1.2 Signal parameters, line 115:
#   If an actual signal is associated with a signal parameter of any mode,
#   and if the type of the formal is a scalar type, then it is an error if
#   the bounds and direction of the subtype denoted by the subtype
#   indication of the formal are not identical to the bounds and direction
#   of the subtype denoted by the subtype indication of the actual.
# 
# 
# vsim Message # 3710:
# The evaluation of a qualified expression evaluates the operand and
# checks that its value belongs to the subtype denoted by the type mark.
# For array subtypes this means that at each position in the index
# constraint, the index ranges must match.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.3.4 Qualified expressions]
# 
# 
# vsim Message # 3711:
# In a type conversion between array types, a check is made that any
# constraint on the element subtype is the same for the operand array type
# as for the target array type.
# For an element subtype that is a scalar subtype, the bounds of
# the range constraint must match those of the subtype of the operand.
# For an element subtype that is an array subtype, the bounds of
# each index range in the index constraint must match those of the
# operand.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.3.5 Type conversions]
# 
# 
# vsim Message # 3712:
# If the type mark of a type conversion denotes a constrained array
# subtype, a check is made that for each element of the operand array
# there must be a matching element of the target subtype, and vice versa.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.3.5 Type conversions]
# 
# 
# vsim Message # 3713:
# IEEE Std 1076-1993, 2.1.1.1 Constant and variable parameters, line 76:
#   For a formal [constant or variable] parameter of a constrained array
#   subtype of mode in or inout, it is an error if the value of the
#   associated actual parameter (after application of any conversion
#   function or type conversion present in the actual part) does not
#   contain a matching element for each element of the formal.
# 
# IEEE Std 1076-1993, 2.1.1.2 Signal parameters, line 119:
#   If an actual signal is associated with a formal signal parameter, and
#   if the formal is of a constrained array subtype, then it is an error
#   if the actual does not contain a matching element for each element of
#   the formal.
# 
# 
# vsim Message # 3714:
# Many operations require that two array values or a constrained array
# subtype and an array value have the same length at every index position
# in the index constraint, i.e., they satisfy the matching element
# requirement.
# 
# 
# vsim Message # 3715:
# Array index values are limited to 32-bit signed integers.  Computation
# of an index value has resulted in an overflow; that is, the value
# cannot be contained in 32 bits.  This usually occurs when an array type
# has an index subtype of INTEGER and a null array value of this type has
# been computed.
# 
# 
# vsim Message # 3716:
# The SystemC library or header files might change between ModelSim releases
# causing a previously compiled SystemC shared library to be incompatible. The
# shared library needs to be recreated by doing "sccom -link".
# 
# 
# vsim Message # 3717:
# The name of the channel/port variable in the C++ source code
# must match with the name used at the VHDL instantiation site.
# 
# 
# vsim Message # 3718:
# ModelSim no longer supports SDF files compressed in the Unix compress
# format (.Z), but now supports the GNU zip format (.gz).  Therefore,
# ModelSim will read in compressed SDF files that are created with GNU zip
# (gzip) only.  ModelSim does not require the file to have a .gz extension,
# but it will generate an error for files that do have a .Z extension.
# 
# 
# vsim Message # 3719:
# The design cannot be checkpointed at this time because DPI context import
# tasks are active. To checkpoint, please run simulation until no import tasks
# are active and then checkpoint the simulation. If the active processes that
# that have called import tasks are not displayed with the error message,
# please compile the design with +acc=l.
# 
# 
# vsim Message # 3720:
# The number of words in the replace pattern must be the same as the search pattern.
# 
# 
# vsim Message # 3721:
# Only one specified radix in the search pattern is allowed.
# 
# 
# vsim Message # 3722:
# The specified port is not connected.  See previous error (#3017) for more
# information. This message is controlled by the vsim option +nowarnTFMPC.
# [DOC: ModelSim User's Manual - ModelSim messages Appendix,
#  Miscellaneous messages Section]
# 
# 
# vsim Message # 3723:
# The +pulse_r/<percent> option sets the module path pulse rejection
# limit as a percentage of the path delay, therefore the value must be
# a number in the range 0 to 100 inclusive.
# 
# 
# vsim Message # 3724:
# The +pulse_e/<percent> option sets the module path pulse error limit
# as a percentage of the path delay, therefore the value must be a
# number in the range 0 to 100 inclusive.
# 
# 
# vsim Message # 3725:
# The +pulse_int_r/<percent> option sets the interconnect path pulse
# rejection limit as a percentage of the path delay, therefore the
# value must be a number in the range 0 to 100 inclusive.
# 
# 
# vsim Message # 3726:
# The +pulse_int_e/<percent> option sets the interconnect path pulse
# error limit as a percentage of the path delay, therefore the value
# must be a number in the range 0 to 100 inclusive.
# 
# 
# vsim Message # 3727:
# It is an error if any element of the result of a concatenation does not
# belong to the element subtype of the type of the result. An array whose
# element subtype is an array is being concatenated with an operand that
# is of the element type.  It is necessary that the length of the operand
# match that of the element subtype.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.2.4 Adding operators]
# 
# 
# vsim Message # 3728:
# The specified task was used in a place where only a function is legal.
# Most likely, it appeared within an expression or within a function body.
# 
# 
# vsim Message # 3729:
# The value does not belong to the range defined by the range constraint
# of the scalar subtype.
# 
# 
# vsim Message # 3730:
# An index must be specified as (<index>) and a field must be specified with .<field>.
# 
# 
# vsim Message # 3732:
# In a default binding, a port specified in the component instance could
# not be found in the associated entity. Verify that the intended entity
# is being used.
# 
# 
# vsim Message # 3733:
# In a default binding, a generic specified in the component instance could
# not be found in the associated entity. Verify that the intended entity
# is being used.
# 
# 
# vsim Message # 3734:
# The index value does not belong to the index range of the array subtype
# of the prefix of the indexed name.
# 
# 
# vsim Message # 3735:
# The index value does not belong to the index range of the array subtype
# of the prefix of the indexed name.
# 
# 
# vsim Message # 3736:
# The parameter to the 'VALUE predefined attribute was a null string
# or contained only whitespace.
# 
# 
# vsim Message # 3737:
# The value does not belong to the range defined by the range constraint
# of the scalar subtype.
# 
# 
# vsim Message # 3738:
# A locally static error that otherwise would have been reported by the
# compiler has been deferred until simulation because the expression in
# which it occurs appears in a context whose reachability could not be
# determined by the compiler.
# 
# 
# vsim Message # 3739:
# It is an error if any element of the result of a concatenation does not
# belong to the element subtype of the type of the result. An array whose
# element subtype is an array is being concatentated with an operand that
# is of the element type. It is necessary that the length of the operand
# match that of the element subtype at each index position.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.2.4 Adding operators]
# 
# 
# vsim Message # 3740:
# No additional information
# 
# vsim Message # 3742:
# All elements of an array aggregate must belong to the element subtype
# of the array type.  Thus, if the element subtype is itself an array,
# all of the elements of the aggregate must be arrays that have the same
# index range.
# 
# 
# vsim Message # 3743:
# A DPI task should return a non-zero value only if its invocation of an
# exported task has returned a non-zero value, indicating an SV disable has
# occurred.
# 
# 
# vsim Message # 3744:
# A DPI task should return a non-zero value when its invocation of an
# exported task returns a non-zero value, indicating an SV disable has occurred.
# 
# 
# vsim Message # 3745:
# A variable index was detected in a reference to the specified generate
# hierarchy. The index must be an integer literal, a parameter, a localparam,
# or an expression made up of them (constant expression).
# 
# 
# vsim Message # 3747:
# Using -sv_lib, -sv_root, and -sv_liblist arguments, a shared library
# must be found that contains the user specified function. Either the
# function does not exist in any of the specified shared libraries or
# the correct shared library was not searched. Make sure the proper
# shared library is specified, and verify that the shared library actually
# contains the function (symbol) in question.
# 
# 
# vsim Message # 3748:
# An error occurred when trying to load the specified object file. Verify
# that the object file exists and that you have read permission. Also, if
# the reference to the object file contains a reference to an environment
# variable, make sure the environment variable has a value.
# 
# 
# vsim Message # 3749:
# An error occurred when trying to load the specified object file. Verify
# that the object file exists and that you have read permission. Also, if
# the reference to the object file contains a reference to an environment
# variable, make sure the environment variable has a value.
# [DOC: ModelSim SystemVerilog DPI Interface Manual - Using the SystemVerilog DPI Section]
# 
# 
# vsim Message # 3750:
# The file specified using -sv_liblist cannot be opened. This likely means
# that the file as specified does not exist, or does not have read permission.
# 
# 
# vsim Message # 3751:
# The specified bootstrap file did not contain the string '#!SV_LIBRARIES'.
# A bootstrap file begins with this magic string, and each following line
# contains a path to a shared library, without specifying an extension.
# An example bootstrap file might look like:
#   #!SV_LIBRARIES
#   mylibs/linux/tests1
#   mylibs/linux/shifter
#   /proj/A/libsys
#   /share/sys/linux/lib42
#   /usr/local/HW/adders
# 
# 
# vsim Message # 3752:
# The SystemVerilog DPI function svSetScope() was called from outside the
# thread system.
# 
# vsim Message # 3754:
# In the SystemVerilog DPI, the svSetScope() function can be called only
# from within a proper call chain thread.
# 
# 
# vsim Message # 3755:
# In the SystemVerilog DPI, the exported tasks or functions can be called
# only from within a proper context-based call chain thread. A context call
# is defined by using the keyword 'context' when declaring the task or
# function in Verilog.
# 
# 
# vsim Message # 3756:
# In the SystemVerilog DPI, exported tasks can be called only from within
# a proper context-based call chain thread. A context call is defined by
# using the keyword 'context' when declaring the task or function in Verilog.
# 
# 
# vsim Message # 3757:
# In the SystemVerilog DPI, exported tasks can be called only from within
# a proper context-based call chain thread. A context task or function is
# defined by using the keyword 'context' when declaring the task or
# function in Verilog.
# 
# 
# vsim Message # 3758:
# A C function is attempting to call an exported task or function that
# does not exist in the current scope. This usually either means there is a
# typo and a mismatched name, or that the current scope is not properly set
# to point to the scope containing the exported task or function. The scope
# can be set using the construct:
#    svSetScope(svSetScopeFromName("scope.name.to.set"))
# 
# 
# vsim Message # 3760:
# An exported task or function could not be found within the design.
# This may be caused from incompatible C and Verilog, or compilations
# that are out-of-date. Recompile all source files if possible.
# 
# 
# vsim Message # 3763:
# The specified shared library cannot be found. Check the various
# vsim -sv* options and make sure that the library actually exists.
# 
# 
# vsim Message # 3764:
# Since the function's return value is not used, the elaboration process
# treats this use as if a void cast has been made on the function call.
# 
# 
# vsim Message # 3765:
# In the SystemVerilog DPI, user C code is responsible for checking the
# disable status after any exported task or function returns. This status
# check will determine whether the exported task or function returned due
# to a disable. If the return was due to a disable then it is the
# responsibility of the user C code to do any necessary cleanup and then
# return with the correct status.
# 
# 
# vsim Message # 3766:
# The modport name must refer to one declared in the interface.
# 
# 
# vsim Message # 3767:
# DPI functions should call only svAckDisabledState if, after invoking a
# native function, invoking svIsDisabledState() returns a non-zero value,
# indicating an SV disable has occurred.
# 
# 
# vsim Message # 3768:
# DPI functions must call svAckDisabledState when, after invoking a native
# function, invoking svIsDisabledState() returns a non-zero value, indicating
# an SV disable has occurred.
# 
# 
# vsim Message # 3769:
# Functions that return a void result can be invoked as statements but cannot
# be invoked as expressions, since void data can neither be assigned nor used
# in calculations.
# 
# 
# vsim Message # 3770:
# When using -sv_lib, -sv_root, and -sv_liblist arguments, a shared library
# must be found that contains the user specified function. Either the function
# does not exist in any of the specified shared libraries or the correct
# shared library was not searched. Make sure the proper shared library is
# specified, and be sure the shared library actually contains the function
# (symbol) in question.
# 
# 
# vsim Message # 3771:
# In the SystemVerilog DPI, an export task or function can be called only
# from within a context import task or function.
# 
# 
# vsim Message # 3772:
# An error occurred when trying to load the specified object file.
# This is likely an internal error which should be reported to
# support@model.com as soon as possible.
# 
# 
# vsim Message # 3773:
# Although the item exists in the interface, it is not included in
# the modport that has been specified.
# 
# 
# vsim Message # 3774:
# An exported task/function in a modport must be defined in the module
# that instantiates the interface with that modport.
# 
# 
# vsim Message # 3775:
# System Verilog allows register ports, but they may only be 'input' or 'output'.
# 
# 
# vsim Message # 3776:
# The name of the function being exported already exists in the interface.
# 
# 
# vsim Message # 3777:
# All ports in a Verilog module that is being instantiated from SystemC must
# be named. (An unnamed port is created when one comma in a port list
# follows another comma with no intervening text.)
# [DOC: ModelSim User's Manual - Mixed Language Designs Chapter]
# 
# 
# vsim Message # 3778:
# IEEE Std 1076-1993, 4.3.3.1 Object aliases, line 573:
#   If the subtype indication denotes a scalar subtype, then the object
#   is viewed as if it were of the subtype specified by the subtype
#   indication; moreover, it is an error if this subtype does not have
#   the same bounds and direction as the subtype denoted by the object
#   name.
# 
# 
# vsim Message # 3780:
# The for-generate loop attempted to create a scope that already exits.
# This can be caused by the genvar loop variable wrapping around to a
# previous value.
# 
# 
# vsim Message # 3781:
# The object handle parameter passed to the PLI routine is a
# System Verilog type.  Handling of these is not specified by the LRM.
# 
# 
# vsim Message # 3782:
# The level specified to the profile report command must be a positive
# integer. This number limits the depth of the structural profile report.
# [DOC: ModelSim Command Reference - profile report command]
# 
# 
# vsim Message # 3783:
# This utility returns a zero answer for illegal queries but sensible
# queries must specify a size in bits that is greater than zero.
# See the standard include file svdpi.h.
# 
# 
# vsim Message # 3784:
# The utility manipulates vectors that have positive integer lengths.
# See the standard include file svdpi.h.
# 
# 
# vsim Message # 3785:
# A legal packed vector index ranges from 0 to width-1.
# See the standard include file svdpi.h.
# 
# 
# vsim Message # 3786:
# A problem occurred during selection or assignment to sparse memory.
# Please report the problem to support@model.com.
# 
# 
# vsim Message # 3787:
# An exported task referred to in a 'forkjoin' must have matching parameters.
# 
# 
# vsim Message # 3788:
# The -check_plusargs switch was used and an unrecognized plusarg was specified.
# Generally, any command line argument starting with a '+' is accepted without
# warning because the PLI may reference these arguments regardless of whether
# ModelSim recognizes them or not. If a plusarg switch is mistyped it could
# result in incorrect behavior, but no warnings.
# 
# 
# vsim Message # 3789:
# A -voptargs argument must use the following form:
#   -voptargs="argument list for vopt"
# [DOC: ModelSim Command Reference - vsim command]
# 
# 
# vsim Message # 3790:
# When using svPutUserData(), SystemVerilog DPI LRM requires that
# scope be a non-zero value.
# 
# 
# vsim Message # 3791:
# When using svPutUserData(), the SystemVerilog DPI LRM advises that
# UserData be a non-zero value.
# 
# 
# vsim Message # 3792:
# For any scope, no UserData was entered. This is likely caused by
# svPutUserData() never being called.
# 
# 
# vsim Message # 3793:
# In svGetUserData(), for the given scope, no UserData was entered.
# This is likely caused by the never calling svPutUserData() for this scope.
# 
# 
# vsim Message # 3794:
# In svGetUserData(), for the given scope and userKey, no UserData was
# found. This is likely caused by never calling svPutUserData() for this
# scope, with this UserKey.
# 
# 
# vsim Message # 3796:
# A SystemC region ID was passed to the specified function.
# SystemC region IDs are not yet supported for this function.
# 
# 
# vsim Message # 3797:
# A SystemC signal ID was passed to the specified function.
# SystemC signal IDs are not yet supported for this function.
# 
# 
# vsim Message # 3799:
# The -dpiexportobj option is in effect, however there are no DPI-C export
# tf's in the design; thus the requested export library cannot be produced.
# The export library is not needed for DPI-SC exports.
# 
# 
# vsim Message # 3800:
# The AIX OS doesn't have the runtime linking facilities necessary to support
# the GlobalSharedObjectList feature.
# 
# 
# vsim Message # 3801:
# The AIX OS doesn't have the runtime linking facilities necessary to support
# the GlobalSharedObjectList feature.
# 
# 
# vsim Message # 3802:
# The Windows OS requires dynamic library creators to explicitly specify a list
# of exported (global) symbols. Use the link command's -EXPORT option to do so.
# 
# 
# vsim Message # 3803:
# The Windows OS requires dynamic library creators to explicitly specify a list
# of exported (global) symbols. Use the link command's -EXPORT option to do so.
# 
# 
# vsim Message # 3804:
# The feature is not supported for atomic vector. Please recompile
# the design with the -noatomic compiler option.
# 
# 
# vsim Message # 3805:
# Be more specific so that only one object is found.
# 
# 
# vsim Message # 3806:
# The HDL signal type is not compatible with the SystemC signal.
# 
# 
# vsim Message # 3807:
# The type of the port on the entity does not match the type of the port on
# The component which instantiates it.
# 
# 
# vsim Message # 3808:
# The mode of the port on the entity is not compatible with the
# mode of the port on the component which instantiates it.
# [DOC: IEEE std 1076-2002 VHDL LRM - 1.1.1.2 Ports]
# 
# 
# vsim Message # 3809:
# The type of the generic on the entity does not match the type of the
# generic on the component which instantiates it.
# 
# 
# vsim Message # 3810:
# Use "profile off -m" to close the open raw profile file before
# issuing the "profile reload" command.
# 
# 
# vsim Message # 3811:
# See the standard include file svdpi.h.
# 
# 
# vsim Message # 3812:
# The simulator has detected that the design-wide optimizations
# performed by the "vopt" tool have not been run on the top level
# design-units supplied to vsim. vopt is being run automatically
# by the simulator to do this optimization step.
# 
# 
# vsim Message # 3813:
# The simulator has detected that the one or more of the modules in the
# design hierarchy have been recompiled, but the design-wide optimizations
# performed by the "vopt" tool have not been run on these newly
# recompiled design units. vopt is therefore being invoked automatically
# by the simulator to redo this optimization.
# 
# 
# vsim Message # 3814:
# You must provide a file name when using -memprof+file=<filename> or
# -memprof+fileonly=<filename>.
# 
# 
# vsim Message # 3815:
# In order to report memory profiling information the simulator must unwind
# the call stack whenever memory is allocated to report the results. The
# simulator failed to do so in this case. Please contact support@model.com.
# Unwinding the call stack should work on all supported platforms.
# 
# 
# vsim Message # 3816:
# This optimized design failed one of several version checks. To simulate
# the design, re-run the "vopt" tool on the design top levels modules to
# generate a new optimized design.
# 
# 
# vsim Message # 3817:
# An entity formal port must have a corresponding port declared in the
# component declaration that is bound to the entity if the port is either:
#   a) of mode IN and does not have a default expression, or
#   b) of any other mode and is of an unconstrained array type.
# 
# 
# vsim Message # 3818:
# This error message is emitted when an 'fcover' command is issued when
# no PSL or Verilog 'cover' directives are in the current design. If the design
# source does in fact have 'cover' directives in it, then it may have
# been compiled or loaded with the -nopsl or -nosva option.
# 
# 
# vsim Message # 3819:
# A glitch on an input was detected. The event on the associated
# delay net was cancelled.
# 
# 
# vsim Message # 3820:
# It is possible to create name collisions in SystemC when passing
# explicit names to signal and port constructors. In these cases,
# ModelSim only allows the first match to a name to be debuggable.
# Please modify your source files to remove dumplicate names.
# 
# 
# vsim Message # 3821:
# It is possible to create name collisions in SystemC when passing
# explicit names to signal and port constructors. Duplicate names can
# make debug difficult or impossible since the first match to a name
# is always returned. In these cases, ModelSim will try to use the declared
# name as an alternative name if possible.
# 
# 
# vsim Message # 3822:
# In order to deal with potentially unbounded generate for loops,
# this implementation limits the number of iterations of a given loop.
# The limit can be modified in your modelsim.ini file if desired.
# 
# 
# vsim Message # 3823:
# A SystemVerilog type parameter may be passed only a type, not a value.
# 
# 
# vsim Message # 3824:
# You may specify one optimized design or one or more unoptimized top-level
# design units on the vsim command line, but not a mixture of both. Use vopt
# to create one optimized design from one or more top-level design units.
# 
# 
# vsim Message # 3825:
# Only one optimized design may be specified on the vsim command line. Use
# vopt to create one optimized design from one or more top-level design units.
# 
# 
# vsim Message # 3826:
# The vcd dump file's filename has already been set to dump.vcd due to an
# earlier call to $dumpvars. The $dumpfile task should be called prior to
# any $dumpvars calls.
# 
# 
# vsim Message # 3827:
# ModelSim automatically generates and compiles "glue" code for exported
# SystemVerilog DPI tasks and functions. The compilation of the generated
# code failed. See the error message text for clues to the problem.
# 
# 
# vsim Message # 3828:
# ModelSim automatically builds a shared object containing "glue" code
# for exported SystemVerilog DPI-C tasks and functions. The linking of the
# shared object failed. See the error message text for clues to the problem.
# 
# 
# vsim Message # 3829:
# If an invalid index (i.e. a 4-state expression with Xs) is used during
# a read operation OR an attempt is made to read a non-existent entry
# (an entry that has never been written), then a warning is issued and
# the default initial value for the array is returned.
# 
# 
# vsim Message # 3830:
# ModelSim automatically checks the currently generated DPI-C export object
# file against the design that is being elaborated. ModelSim issues this
# error message when it detects that the design has changed in a way that
# invalidates the current export object file. Regenerate the object
# file using the vsim -dpiexportobj option, and then rerun simulation.
# 
# 
# vsim Message # 3833:
# Array of instance feature of Verilog is not supported for
# instantiation of vhdl entity, if it has unconstrained ports.
# 
# 
# vsim Message # 3834:
# Failed to bind name for an object. The simulation will still run correctly
# but the object is not viewable in the ModelSim GUI windows. To work around
# this problem, you can name the object explicitly upon contruction, however,
# the warning message will still be displayed. This is an internal error, please
# report this problem to support@model.com.
# 
# 
# vsim Message # 3835:
# A fatal error within the SystemC design has occurred.
# This error is an internal error, and should be reported
# immediately to support@model.com.
# 
# 
# vsim Message # 3837:
# In SystemVerilog, it is an error to have multiple continuous assignments
# or a mixture of procedural and continuous assignments writing to a
# variable.
# 
# 
# vsim Message # 3838:
# In SystemVerilog, it is an error to have multiple continuous assignments
# or a mixture of procedural and continuous assignments writing to a
# variable.
# 
# 
# vsim Message # 3840:
# Only a VHDL entity or configuration or a Verilog module can be instantiated from a SystemC module.
# 
# 
# vsim Message # 3841:
# Instantiation of a Verilog optimized cell in a SystemC model is not
# supported in ModelSim mixed-language simulation.
# 
# 
# vsim Message # 3842:
# The SDF design was loaded with +multisource_int_delays set, while
# The VHDL file was compiled with -novital set.
# These switches are incompatible.
# Recompile the source code without the -novital switch.
# [DOC: IEEE Std 1076.4-2000 VITAL ASIC Modeling Specification -
#  3 Basic elements of the VITAL ASIC modeling specification
# 
# 
# vsim Message # 3843:
# This error can occur if a packed variable is connected to an unpacked
# variable or if an unpacked variable is connected to a packed variable.
# 
# 
# vsim Message # 3844:
# Enum literals cannot exceed the width of the enum type.
# 
# 
# vsim Message # 3845:
# Enum literals without explicit values can't clash with other
# literals' values.
# 
# 
# vsim Message # 3846:
# All elements of an array aggregate must belong to the element subtype
# of the array type.  Thus, if the element subtype is itself an array,
# all of the elements of the aggregate must be arrays that have the same
# index range.
# 
# 
# vsim Message # 3847:
# For a formal being associated individually, where the formal is of an
# array type whose element subtype is itself an array type, each
# subelement of the formal must be associated with an actual that is of
# an array length equal to the array length of the element subtype of the
# formal's array type.
# 
# 
# vsim Message # 3848:
# The object designated by an access type value must either belong to the
# designated subtype of the access type definition (access to constrained
# array subtype), or must satisfy the (index) constraint of the access
# subtype (constrained access to array).
# [DOC: IEEE Std 1076-1993 VHDL LRM - 7.3.6 Allocators]
# 
# 
# vsim Message # 3849:
# The predefined attribute 'DRIVING requires that its prefix signal
# have a driver present in the process in which it appears.
# The predefined attribute 'DRIVING_VALUE requires that the value of
# 'DRIVING be TRUE at the point of evaluation; this implies that 'DRIVING
# be evaluatable, hence it is an error if no drivers are present.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 14.1 Predefined attributes]
# 
# 
# vsim Message # 3850:
# IEEE Std 1076-1993, 3.1 Scalar types, line 72:
#   A range constraint is compatible with a subtype if each bound of the
#   range belongs to the subtype or if the range constraint defines a
#   null range.  Otherwise, the range constraint is not compatible with
#   the subtype.
# 
# 
# vsim Message # 3851:
# A clocked process may have read data intended for the next clock edge.
# 
# 
# vsim Message # 3852:
# Once parameters for a module have been frozen, further redefinition
# is not permitted.  This error results from attempting to modify
# parameters in an optimized design (compiled with -fast) by using
# a separately compiled defparam or by specifying -G to vsim.
# 
# 
# vsim Message # 3853:
# It is illegal to use a defparam which has a hierarchical name
# that crosses an arrayed instance or generate statement in itself 
# or any parent instance.  Defparams may only target children when
# crossing arrayed instances or generates.
# 
# 
# vsim Message # 3854:
# This error occurs in HREAD or OREAD function when an array,
# whose size is not a multiple of 4 or 3.
# 
# 
# vsim Message # 3855:
# This error occurs in HREAD function. While reading a character other than,
# a Hex character (0-F) was read.
# 
# 
# vsim Message # 3856:
# This error occurs in OREAD function. While reading a character other than,
# a Octal character (0-7) was read.
# 
# 
# vsim Message # 3857:
# It is an error if the L parameter (of type LINE) in a call to a
# STD_LOGIC_TEXTIO HREAD or OREAD procedure contains the null access
# value.  The value of the parameter must designate a string from which
# to extract a value.
# 
# 
# vsim Message # 3858:
# The L parameter (of type LINE) of a call to a STD_LOGIC_TEXTIO HREAD
# or OREAD procedure designates either a string containing no characters
# or containing only whitespace.  An HREAD or OREAD call does not succeed
# if no sequence of characters can be removed from L to form a valid
# string representation of the value of the specified output parameter
# type.
# 
# 
# vsim Message # 3859:
# This error occurs in HREAD or OREAD function when the line doesn't have enough
# charaters to be read.
# 
# 
# vsim Message # 3860:
# An event control intended to cause a delay may have taken zero time.
# 
# 
# vsim Message # 3861:
# The enable_signal_spy or disable_signal_spy call could not find an
# inti_signal_spy with the specified source and destination objects.
# An init_signal_spy call (with the control_state set) on the specified
# objects must have been made before attempting to enable or disable
# the signal spy.
# 
# 
# vsim Message # 3862:
# The width of the data is larger than the width of the memory word.
# 
# 
# vsim Message # 3863:
# The abstract literal portion of the string cannot be interpreted as a
# based literal or decimal literal numeric value.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 13.4 Abstract literals]
# 
# 
# vsim Message # 3864:
# Predefined attribute 'VALUE interpreted a single character in its
# string parameter as a character literal value.
# ModelSim does this if there is no other enumeration literal in the
# enumeration type that has the same string representation, and if the
# single character is the same as the graphic character of the character
# literal (case-sensitive).  The VHDL LRM states that the string
# representation of a character literal includes the enclosing apostrophe
# (') characters.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 13.5 Character literals]
# 
# 
# vsim Message # 3865:
# The simulator is automatically running the "vopt" tool, but it
# has noted that there are Verilog PLI modules being loaded.  In
# order to function properly, the PLI may need access to design
# information that is removed during optimization.  By default
# vsim is very conservative, and allows complete access by passing
# the "+acc" switch to vopt, which can adversely affect performance
# after optimizing.  To allow optimizations to proceed without the +acc
# being automatically added, use the "-no_autoacc" option to vsim.
# You can then add specific +acc options as needed by hand with the
# "-voptargs" vsim switch.
# 
# 
# vsim Message # 3866:
# The simulator does not contain the information necessary to support
# the exit() function.
# 
# 
# vsim Message # 3867:
# An inclusiveDuMatch of 1 means that all instances that reference
# design units with the same primary name will match.
# A value of 0 means that only instances that use exactly the same 
# design unit will match.
# For example if your design has multiple architectures for a VHDL entity
# a value of 1 will cause matching for all instances that use the same
# entity.  A value of 0 for inclusiveDuMatch will cause a match for only
# the specific entity-architecture pair used by the specified instance.
# [DOC: ModelSim Command Reference - profile report command]
# 
# 
# vsim Message # 3868:
# A 2-state enumerated type may not be assigned 4-state values.
# 
# 
# vsim Message # 3869:
# The specified value is not a legal value for that enumerated type.
# 
# vsim Message # 3870:
# The specified filltype is not supported for this kind of memory.
# 
# vsim Message # 3871:
# The specified value is not a legal value for that enumerated type.
# 
# vsim Message # 3872:
# The target scope of the bind statement already contains an object of the
# same name as the instance name of the bind statement.
# 
# 
# vsim Message # 3873:
# The target of the bind statement can either be a module or module instance.
# 
# 
# vsim Message # 3874:
# The design unit that is being bound is not of valid type.
# 
# 
# vsim Message # 3875:
# The number of positional association elements in a bind instance exceeds the numberof formals.
# 
# vsim Message # 3876:
# '.*' port connection not allowed when target of bind is a VHDL design unit.
# 
# vsim Message # 3877:
# The specified argument to the specified system task or function  must be 'singular' (ie, packed) and must be a variable.
# 
# 
# vsim Message # 3878:
# The specified argument to the specified system task or function  must be 'singular' (ie, packed).
# 
# 
# vsim Message # 3879:
# The boolean expression in assertions does not allow operands of types:non-integer types, string, event, chandle, class, associative arrays and dynamic arrays
# 
# vsim Message # 3880:
# Operation not allowed on a closed VHDL file.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 3.4.1 File operations]
# 
# 
# vsim Message # 3881:
# A value specified in the 'bins' value set is outside the range
# of values representable in the corresponding coverpoint expression.
# The value has been converted to the nearest value representable in
# the type of the corresponding coverpoint expression.
# 
# 
# vsim Message # 3882:
# A range specified in the 'bins' value set is outside the range
# of values representable in the corresponding coverpoint expression.
# The value range has been converted to the single nearest value
# representable in the type of the corresponding coverpoint expression.
# 
# 
# vsim Message # 3883:
# Coverpoint expressions and 'bins' expressions must be of integral
# types.  Real, unpacked, and other non-integral types are illegal.
# 
# 
# vsim Message # 3884:
# Coverpoint expressions and value expressions specified in 'bins'
# of Coverpoint/Cross must be of integral types. Real, unpacked,
# string and other non-integral types are illegal.
# 
# 
# vsim Message # 3885:
# The token is not a valid string.
# 
# 
# vsim Message # 3886:
# Currently, the specified option is not supported for "mem" commands for the associative array.
# 
# 
# vsim Message # 3887:
# The address specified for start_address and end_address for the
# system tasks readmem and writemem needs to be a valid associative
# key for that associative array.
# 
# 
# vsim Message # 3888:
# The system tasks readmem and writemem can accept only integral
# index types.
# 
# 
# vsim Message # 3889:
# The system tasks readmem and writemem can accept only integral
# index types.
# 
# 
# vsim Message # 3890:
# The simulation will still run correctly but the object is not viewable in
# the ModelSim GUI windows. To work around this problem, you can name the object
# explicitly upon contruction. Notice that for static object, you have to name
# it using the full scope name, e.g, 'A::B::C'.
# 
# 
# vsim Message # 3891:
# An hdl instance is embedded inside a global/static SystemC module.
# It is not supported in vopt flow.
# 
# 
# vsim Message # 3892:
# The simulation will still run correctly but the object is not viewable in the ModelSim GUI windows.
# 
# 
# vsim Message # 3893:
# The key specified for associative array does not exist in this array.
# In case of an associative array with wildcard index, please use the width of the index in the key in order to find a match. e.g. 6'h1234, 9'b0101 
# 
# 
# vsim Message # 3894:
# This message reports failures related to compiled SDF files.
# The error message should be self explanatory.
# 
# 
# vsim Message # 3896:
# A driver could not be created for the specified object.
# 
# 
# vsim Message # 3897:
# The Signal Spy force of the object failed.  Refer to the prior
# error for more information.
# 
# 
# vsim Message # 3898:
# The Signal Spy release of the object failed.  Refer to the
# prior error for more information.
# 
# 
# vsim Message # 3899:
# A warning occurred during the Signal Spy release of the object.
# Refer to the prior warning for more information.
# 
# 
# vsim Message # 3900:
# A SystemC subelement signal parameter, was passed tothe specified function.
# SystemC subelement signals are not supported for this function.
# 
# 
# vsim Message # 3901:
# A SystemC signal ID was passed to the specified function.
# SystemC signal IDs of this type are not supported for this function.
# 
# 
# vsim Message # 3902:
# An invalid argument was passed to the Signal Spy system task.
# 
# 
# vsim Message # 3903:
# System Verilog non-net port type is not supported yet at mixed boundaries.
# 
# 
# vsim Message # 3904:
# This feature is not supported in the Modelsim Personal Edition.
# 
# 
# vsim Message # 3905:
# Using the -c option with either -i or -gui options is not permitted.
# 
# 
# vsim Message # 3906:
# The type of the specified object in a module instantiation port list is
# incompatible with the type of the port to which it is being connected.
# 
# 
# vsim Message # 3907:
# A task/function with an hierarchical name must be exported or 
# externed in the interface referenced by the name's prefix.
# 
# 
# vsim Message # 3908:
# The modport in an actual interface port must match the modport
# in the formal interface that it is passed down to.
# 
# 
# vsim Message # 3909:
# This option is supported only for associative arrays.
# 
# 
# vsim Message # 3910:
# The command 'mem display' will not display more than 1000 lines to the
# terminal window.  Please use the 'mem save' command to save the contents
# to a text file for batch viewing.  For viewing in the GUI use 'add mem'
# command.
# 
# 
# vsim Message # 3911:
# A single generic value has been specified on the command line for two
# generics of the same name but different types.
# Use pathnames with the -G or -g command line options to give different
# values to each generic.
# 
# 
# vsim Message # 3912:
# VHDL enumeration signal can be connected to Verilog port only of size
# 32 or less.
# 
# 
# vsim Message # 3913:
# VHDL Vital timing check violation.
# 
# vsim Message # 3914:
# VHDL Vital skew timing check violation.
# 
# vsim Message # 3915:
# VHDL Vital period timing check violation.
# 
# vsim Message # 3916:
# Verilog timing check violation.
# 
# vsim Message # 3917:
# The last argument(s) to $dumpports() must be a filename or a filename
# followed by two integer values. The first integer value is ignored.
# The bits of the second integer value have the following meaning:
#     0 - Ignore strength ranges for conflict resolution as defined in IEEE 1364-2005.
#     2 - Default value. Use strength ranges for conflict resolution.
#     4 - Compress vcd file.
#     8 - Output direction, same as -dumpports+direction.
# 
# 
# 
# vsim Message # 3918:
# Bit-select or part-select of reg not allowed in force as per Sec 9.3.1, IEEE 1364.
# 
# 
# vsim Message # 3919:
# The specified name refers to a non-Verilog instantiation.  Resolution of
# hierarchical paths through these contexts is not supported.
# 
# 
# vsim Message # 3920:
# Hierarchical names into generate loops must provide an index value
# along with the block label.
# 
# 
# vsim Message # 3921:
# When '-onexit' is specified in a 'profile report' command, a file must be
# specified as well with the '-file' option.
# 
# 
# vsim Message # 3922:
# A type-parameter was passed to a normal value-parameter.
# 
# 
# vsim Message # 3923:
# While performing the negative timing constraint algorithm on each module
# that contains timing checks with delayed net arguments, a timing check
# with a negative adjusted setup or hold limit was encountered. The
# negative timing constraint algorithm attempts to find a set of delays
# for the timing check delayed net arguments such that all negative limits
# can be converted to non-negative limits with respect to the delayed nets.
# No solution was found for this instance.  Although this instance was coded
# grouped timing checks, this analysis was disabled because the
# -no_risefall_delaynets option was set.  Removing this option could cause
# a solution to be determined.
# [DOC: ModelSim User's Manual - Verilog Simulation Chapter]
# 
# 
# vsim Message # 3924:
# SDF allows the user to keep the original timing values for any timing
# object by specifying empty parentheses '()'. Many SDF files are generated
# with minimum and maximum delay values and empty typical delays.
# For example: (3::5). If all the delay values are of this format and
# typical delays are specified for annotation then nothing gets annotated.
# This warning alerts you to check if this is happening in your simulation.
# 
# 
# vsim Message # 3925:
# Enum can have base type as integral types only.
# 
# 
# vsim Message # 3926:
# DPI shared library suffixes are machine dependent and should not be specified
# by users.
# 
# 
# vsim Message # 3927:
# Items that are declared inside a program block, such as tasks, functions,
# variables, etc are not accessible by non-program design units (modules,
# interfaces, etc).
# 
# 
# vsim Message # 3928:
# A value of a composite type is considered a "null" value when the
# type is a member of this list:
#   a) a null array subtype, or
#   b) an array type whose element subtype is a member of this list, or
#   c) a record type, all of whose elements are of a subtype that is a
#      member of this list.
# When such a null value is written to a VHDL FILE, because there is
# no data associated with it, there is no way to read it back in as the
# value it was originally written as.
# 
# 
# vsim Message # 3929:
# VHDL FILE objects with external name "STD_INPUT" or "STD_OUTPUT"
# are associated with the simulator's stdin and stdout respectively.
# The simulator command line options "-std_input <filename>" and
# "-std_output <filename>" can be used to map either or both of
# these so-named FILE objects to other file(s).  In any case, the
# FILE_OPEN_KIND (VHDL 1993 or later) or the mode of the FILE (VHDL 1987)
# must be appropriate for the standard stream being accessed.
# 
# 
# vsim Message # 3930:
# Exponentiation is defined as repeated multiplication of the left
# operand by itself for a number of times indicated by the absolute value
# of the right operand.  This operation has resulted in a number too
# large in absolute value to be represented within the limits of the
# implementation.
# 
# 
# vsim Message # 3931:
# Exponentiation with a negative exponent is allowed only for a left
# operand of a floating point type.
# [DOC: IEEE Std 1076-2002 VHDL LRM - 7.2.7 Miscellaneous operators]
# 
# 
# vsim Message # 3932:
# Could not find the specified type name in our database. If the type name you
# entered is correct, it could be the type name does not match our database.
# Please contact support@model.com for help.
# 
# 
# vsim Message # 3933:
# Constant and Generics may have already been used in computing other expressions.
# The change command will change its value but it will not recompute dependent
# expressions.  As a result the change may not have its intended effect.
# In some case the VHDL compile may change variables into constants.
# To prevent this use the +acc=v option when compiling.
# 
# 
# vsim Message # 3934:
# The specified input Verilog port is not connected from VHDL instantiation.
# 
# 
# vsim Message # 3935:
# The specified VHDL port cannot be found by that name in the Verilog
# module to which it is being connected. Verify that the correct
# VHDL/Verilog connection is being made and that extended identifiers
# are being used if necessary.
# [DOC: ModelSim User's Manual - Mixed VHDL and Verilog Designs Chapter]
# 
# 
# vsim Message # 3936:
# Dynamic arrays of dynamic arrays or a combination of dynamic and
# unpacked arrays or associative arrays do not support certain formats for
# mem load command.
# 
# 
# vsim Message # 3937:
# Refer to 'Multiple Clock support' section in 'Assertions' chapter of  
# SystemVerilog LRM for legal multiple clock temporal expressions.
# 
# 
# vsim Message # 3938:
# The behavior of the temporal expression depends on the two clock events
# happening at the same simulation time. The multiply clocked assertion should
# be written so that the two expressions clocked by different events cannot
# start and end at the same simulation time. The basic rules to write such
# expression are:
# 1. If expressions are sequence, the two expressions should be separated by ';'
# 2. Both the sequence expressions do not match at empty path
# 3. Use '|=>' implication rather than '|->' implication
# 
# 
# vsim Message # 3939:
# 
# 
# vsim Message # 3940:
# An attempt was made to verify that the original source data that went into a compiled
# SDF file has not been modified.  However there was an error in attempting to access the
# original file.  The system error output should give more information as to what the
# actual problem is.
# 
# 
# vsim Message # 3941:
# Dynamic arrays of dynamic arrays or a combination of dynamic and
# unpacked arrays do not support certain options of the mem commands.
# 
# 
# vsim Message # 3942:
# The data word currently being loaded is outside of the range of the
# addresses to be loaded.  The rest of the file has been skipped.
# 
# 
# vsim Message # 3943:
# Not enough data words were found to fill the expected memory range.
# 
# 
# vsim Message # 3944:
# The data word currently being loaded is outside of the range of the
# addresses to be loaded.  The rest of the file has been skipped.
# 
# 
# vsim Message # 3945:
# The dynamic array is not allocated.  If there is only one dynamic
# dimension that is not allocated, mem load command can allocate it.
# If this is the case, use one of the options -endaddress or -infile
# to mem load command.
# 
# 
# vsim Message # 3946:
# This happens when the index used for the memory is a local variable or whole memory is getting compared.
# 
# 
# vsim Message # 3947:
# An invalid format specifier was detected in the first argument to a call
# to the specified system task or function.
# The valid format specifiers are:
#   b, B, c, C, d, D, e, E, f, F, g, G, h, H, l, L, o, O, m, M, s, S, t, T, u, U, v, V, z, Z.
# 
# 
# vsim Message # 3948:
# The CASE statement expression value did not match any of the choices
# given in the case statement alternatives, and there was no OTHERS
# choice.  This suggests that the expression value is out of the range
# of its subtype, which can occur when range checking is off.
# This error can also occur in a selected signal assignment statement
# because it is converted to an equivalent CASE statement.
# [DOC: IEEE Std 1076-1993 VHDL LRM - 8.8 Case statement]
# 
# 
# vsim Message # 3949:
# VHDL based assertion statement of level 'Note'.
# 
# vsim Message # 3950:
# VHDL based assertion statement of level 'Warning'.
# 
# vsim Message # 3951:
# VHDL based assertion statement of level 'Error'.
# 
# vsim Message # 3952:
# VHDL based assertion statement of level 'Failure'.
# 
# vsim Message # 3954:
# No additional information
# 
# vsim Message # 3955:
# VHDL Vital glitch violation.
# 
# vsim Message # 3956:
# No additional information
# 
# vsim Message # 3957:
# No additional information
# 
# vsim Message # 3958:
# No additional information
# 
# vsim Message # 3959:
# No additional information
# 
# vsim Message # 3960:
# A call to mti_FatalError() occurred.  This causes vsim to immediately halt
# the simulation.  Control is not returned to the caller.  The simulation
# cannot continue after being halted with mti_FataError().
# 
# 
# vsim Message # 3963:
# No additional information
# 
# vsim Message # 3964:
# No additional information
# 
# vsim Message # 3965:
# No additional information
# 
# vsim Message # 3966:
# No additional information
# 
# vsim Message # 3967:
# No additional information
# 
# vsim Message # 3968:
# Verilog timing check violation.
# 
# vsim Message # 3969:
# No additional information
# 
# vsim Message # 3971:
# No additional information
# 
# vsim Message # 3972:
# No additional information
# 
# vsim Message # 3973:
# No additional information
# 
# vsim Message # 3974:
# No additional information
# 
# vsim Message # 3975:
# No additional information
# 
# vsim Message # 3976:
# No additional information
# 
# vsim Message # 3977:
# An integer divide, modulo, or remainder operation has a right operand
# of zero, which is causing a divide by zero error.
# 
# 
# vsim Message # 3978:
# No additional information
# 
# vsim Message # 3979:
# No additional information
# 
# vsim Message # 3980:
# No additional information
# 
# vsim Message # 3981:
# No additional information
# 
# vsim Message # 3982:
# No additional information
# 
# vsim Message # 3983:
# No additional information
# 
# vsim Message # 3984:
# No additional information
# 
# vsim Message # 3985:
# No additional information
# 
# vsim Message # 3986:
# No additional information
# 
# vsim Message # 3987:
# No additional information
# 
# vsim Message # 3988:
# No additional information
# 
# vsim Message # 3989:
# No additional information
# 
# vsim Message # 3990:
# A SystemC signal ID was passed to the mti_Sensitize() function with the mode argument as MTI_ACTIVE.  This function supports SystemC signal only if the mode is MTI_EVENT.
# 
# 
# vsim Message # 3991:
# One variable in the base clase and another variable in the derived class have
# the same name. You can rename one variable to make both debuggable.
# 
# 
# vsim Message # 3992:
# A disconnection was made in a subprogram when the actual was not a guarded signal.
# The actual must be declared to be a bus or a register.
# [DOC: IEEE Std 1076-2002 VHDL LRM - 2.1.1.2 Signal parameter,  8.4.1 Updating a projected output waveform]
# 
# 
# vsim Message # 3993:
# Sum of setup/recovery and hold/removal times in timing check is negative. Negative time(s) will be set to 0.
# 
# 
# vsim Message # 3994:
# Sum of setup/recovery and hold/removal times in timing check is negative. Negative time(s) will be set to 0.
# 
# 
# vsim Message # 3995:
# Too many parameters were specified for a parameterized class.
# A specialization must provide at most one parameter value for each parameterin the parameterized class.
# 
# 
# vsim Message # 3996:
# The specified formal name in a by-name argument association does not
# exist in the task or function being called.
# 
# 
# vsim-vish Message # 4000:
# The command specified in the message can be used only after a design
# has been loaded into the simulator.
# [DOC: ModelSim Command Reference]
# 
# 
# vsim-vish Message # 4001:
# An incorrect number of arguments was supplied to the command which
# caused this message to occur. The usage of the command should be
# displayed after the error message.
# [DOC: ModelSim Command Reference]
# 
# 
# vsim-vish Message # 4002:
# The command which caused this message to occur was specified incorrectly.
# The usage of the command should be displayed after the error message.
# [DOC: ModelSim Command Reference]
# 
# 
# vsim-vish Message # 4003:
# An invalid option was specified to the command that caused this message
# to occur. The usage of the command should be displayed after the error
# message.
# [DOC: ModelSim Command Reference]
# 
# 
# vsim-vish Message # 4004:
# The specified argument must accompany the specified option. The usage
# of the command should be displayed after the error message.
# [DOC: ModelSim Command Reference]
# 
# 
# vsim-vish Message # 4005:
# An invalid argument was specified to the command which caused this
# message to occur. The usage of the command should be displayed after
# the error message.
# [DOC: ModelSim Command Reference]
# 
# 
# vsim-vish Message # 4006:
# An unexpected argument was detected. The usage of the command should
# be displayed after the error message.
# [DOC: ModelSim Command Reference]
# 
# 
# vsim-vish Message # 4007:
# The command you just entered requires the specified argument. The
# usage of the command should be displayed after the error message.
# [DOC: ModelSim Command Reference]
# 
# 
# vsim-vish Message # 4008:
# The specified object was not found in the design. Verify that the
# path to the object and the object name are specified correctly.
# 
# 
# vsim-vish Message # 4009:
# The specified object cannot be forced with the force command. If the
# object is a register, please note that you cannot force a bit or slice
# of a register. This is a limitation of the force procedural statement
# within the Verilog language itself.
# 
# 
# vsim-vish Message # 4010:
# Only one item at a time can be forced with the force command.
# [DOC: ModelSim Command Reference - force command]
# 
# 
# vsim-vish Message # 4011:
# Only scalar values and values that are one-dimensional arrays of
# character enums are accepted. Also, the value must be valid for the
# type of the object being forced.
# [DOC: ModelSim Command Reference - force command]
# 
# 
# vsim-vish Message # 4012:
# Each value/time pair must be separated from the previous one by a comma.
# [DOC: ModelSim Command Reference - force command]
# 
# 
# vsim-vish Message # 4013:
# No instance of the specified name can be found in the design. Verify
# that the instance path is specified correctly.
# 
# 
# vsim-vish Message # 4014:
# No instances or objects were found to match the specified pattern.
# If this message was issued as a result of the 'add wave', 'add list' or
# 'add log' commands and the pattern contained wildcards the WildcardFilter
# may have filtered all items matching the specified pattern.
# 
# 
# vsim-vish Message # 4015:
# An invalid or out-of-range numeric value was encountered.
# 
# 
# vsim-vish Message # 4016:
# An invalid value was encountered.
# 
# 
# vsim-vish Message # 4017:
# The specified object was found in the design but was not of the
# expected type.
# 
# 
# vsim-vish Message # 4018:
# The specified pattern matched objects in the design but they were not
# of the expected type.
# 
# 
# vsim-vish Message # 4019:
# While scanning a comment in the specified file, the end of the file
# was encountered. Verify that the correct file was specified and that
# all comments in the file are terminated correctly.
# 
# 
# vsim-vish Message # 4024:
# Name association did not function for an object in the design.
# As an example, this happens for signals declared in function scope.
# In such cases you should manually associate the object's name by using
# constructor initializer list syntax.
# 
# 
# vsim-vish Message # 4025:
# sccom can't generate debug information for all C++ types. In such
# cases, signals and variables of the undebuggable type are simulated
# correctly, but they are not viewable in the ModelSim GUI windows.
# 
# 
# vsim-vish Message # 4026:
# The specified value is not an enumeration literal of the enumeration
# type.
# 
# 
# vsim-vish Message # 4027:
# Logging of certain dynamic types or arbitrarily complex objects is
# not supported in this ModelSim release.  Logging of these items may be
# added in future releases.
# 
# 
# vsim-vish Message # 4028:
# Assertion or cover directives are not visible and
# cannot be added to the wave or list window.
# Use the +acc=a ... compiler option to turn on visibility.
# 
# 
# vsim-vish Message # 4029:
# A tlm fifo specified with a size <= 0 makes the fifo an infinte sized fifo. Specifying a 
# positive size makes the fifo size finite and the objects debuggable in the ModelSim 
# GUI. The undebuggable objects are simulated correctly, but they are not viewable in 
# the ModelSim GUI windows.
# 
# 
# vsim-vish Message # 4030:
# valgrind executable path is not found. Make sure valgrind path is set in current shell.
# 
# 
# vsim-vish Message # 4031:
# invalid usage of -valgrind option.
# 
# 
# vsim-vish Message # 4032:
# The simulation or the WLF file included transactions.  These will not be
# visible though all other design elements are available for debugging.  To 
# view or analyze transactions, the user must have the TXANALYSIS license feature.
# 
# 
# vsim-vish Message # 4033:
# User defined sc_port objects which are not debuggable are not viewable
# in the GUI windows.  However, the simulation will still run correctly.
# It is possible to make the port debuggable if the actual channel connected
# to the port is a primitive channel. In this case, you can add the macro
# 'MTI_SC_PORT_ENABLE_DEBUG' (don't add a semi-colon after the macro) to
# the channel class's public declaration area and then recompile.
# 
# 
# vsim-vish Message # 4034:
# A duplicate option was detected. The usage of the command should
# be displayed after the error message.
# [DOC: ModelSim Command Reference]
# 
# 
# vsim-vish Message # 4035:
# The specified feature is currently not supported.
# 
# 
# vsim-vish Message # 4036:
# No matching coverage data found.
# 
# 
# vsim-vish Message # 4037:
# The two options are mutually exclusive.
# 
# 
# vsim-vish Message # 4038:
# The specified dataset name is not consistent with the specified path name.
# Please remove the dataset prefix from your path name.
# 
# 
# vsim-vish Message # 4039:
# The specified option must accompany an argument. The usage
# of the command should be displayed after the error message.
# [DOC: ModelSim Command Reference]
# 
# 
# vsim-vish Message # 4040:
# The specified command must accompany the specified option. The usage
# of the command should be displayed after the error message.
# [DOC: ModelSim Command Reference]
# 
# 
# vsim-vish Message # 4041:
# The specified argument must accompany the specified option. The usage
# of the required option should be displayed after the error message.
# [DOC: ModelSim Command Reference]
# 
# 
# vsim-vish Message # 4042:
# The specified command syntax is deprecated. The new syntax of the command
# should be displayed after the error message.
# [DOC: ModelSim Command Reference]
# 
# 
# vsim-vish Message # 4043:
# The FSM state variable was not found in the specified region. Verify that the
# object name are specified correctly.
# 
# 
# wlf Message # 5000:
# The specified log (.wlf) file is locked by another ModelSim application.
# The user, hostname, and process ID are reported to help locate the
# person using the file. ModelSim will not allow the file to be written
# until the lock is removed. The lock will be removed when the ModelSim
# session exits. If the lock is in error and the file is not in use, the
# file must be renamed or deleted so that a new file of the specified name
# can be created.
# 
# 
# wlf Message # 5001:
# The specified log (.wlf) file could not be opened.
# This could be because of one of the following reasons:
#   o File permissions problems
#   o Disk space problems
#   o The file is locked by another application
#   o The file was copied or moved prior to quitting the simulation
#   o ModelSim exited unexpectedly during simulation
# 
# 
# wlf Message # 5002:
# The specified command could not be performed because nothing is logged.
# This error message is a general purpose message reported for any
# command which operates upon logged items.
# 
# 
# wlf Message # 5003:
# WLF file compression has been disabled.
# 
# 
# wlf Message # 5004:
# No further information is available at this time.
# 
# 
# wlf Message # 5006:
# The specified file did not contain the expected WLF file header
# information. This could occur because of one of the following reasons:
#   o The file is not a WLF file.
#   o The file could be badly corrupted and is not recognizable.
#   o The file is a WLF file from a pre-5.4 version of ModelSim.
# In any case, the file is unusable and unrecoverable.
# 
# 
# wlf Message # 5007:
# A WLF file recovery operation failed to recover the WLF file.
# This could occur for any number of reasons. The file is unusable.
# 
# 
# wlf Message # 5008:
# No further information is available at this time.
# 
# 
# wlf Message # 5010:
# A WLF file recovery operation failed to recover the WLF file.
# This could occur for many reasons, including:
#   o The file contains an incompatible version number.
#   o The file is too badly corrupted.
#   o The file does not exist or cannot be opened.
#   o The file is not a WLF file.
# In any case, the file is unusable and unrecoverable.
# 
# 
# wlf Message # 5011:
# The WLF file was successfully recovered.
# 
# 
# wlf Message # 5012:
# The specified WLF file was written with a version which cannot
# be recovered. Currently, only WLF files written with ModelSim 5.6
# and later (WLF version 30 and later) can be recovered.
# 
# 
# wlf Message # 5013:
# During a WLF snapshot the table of contents data is coalesced in
# preparation for starting the next WLF file. A write error during this
# process may result in a corrupt WLF table of contents and therefore an
# unusable WLF file. The most likely reason for this error is a full disk.
# 
# 
# wlf Message # 5014:
# The wlfman utility supports the following modes:
#   filter  - Write a subset of a WLF file to a new WLF file.
#   info    - Print information about the WLF file.
#   items   - Print a list of items in the WLF file.
# 
# 
# wlf Message # 5015:
# General purpose WLF tool command line message.
# 
# 
# wlf Message # 5016:
# The specified time string is not recognized.
# A time must be specified in one of the following formats:
#    10   10ns   {10 ns}
# 
# 
# wlf Message # 5017:
# The specified WLF file was not given on the command line. Check the
# usage for the tool you are using and ensure that all required WLF file
# arguments are provided.
# 
# 
# wlf Message # 5018:
# Converting a WLF file to a coarser resolution may result in time values
# being truncated. For example, in converting a WLF file from 1ps to 1ns
# resolution, all times between 2000ps and 2999ps will be converted to 2ns.
# This will cause all signal transitions during this time to occur at 2ns.
# However, events will be placed in incrementing deltas.
# 
# 
# wlf Message # 5019:
# Couldn't lock ModelSim log file; no locks available from system.
# Please make sure that the rpc.statd and lockd daemons are running.
# 
# 
# wlf Message # 5020:
# An internal error occurred while processing wlf data. Please report
# error to support@model.com
# 
# 
# wlf Message # 5901:
# 
# 
# wlf Message # 5902:
# 
# 
# wlf Message # 5903:
# 
# 
# wlf Message # 5904:
# 
# 
# vsim-sccom Message # 6000:
# No further information.
# 
# 
# vsim-sccom Message # 6001:
# No further information.
# 
# 
# vsim-sccom Message # 6002:
# No further information.
# 
# 
# vsim-sccom Message # 6003:
# vsim and sccom must run on the same platform.
# 
# 
# vsim-sccom Message # 6004:
# No further information.
# 
# 
# vsim-sccom Message # 6005:
# No further information.
# 
# 
# vsim-sccom Message # 6006:
# No further information.
# 
# 
# vsim-sccom Message # 6007:
# No further information.
# 
# 
# sccom Message # 6100:
# Please contact support@model.com for help.
# 
# 
# sccom Message # 6101:
# The specified library could not be opened. Verify that the path
# exists and that the directory is a valid ModelSim library.
# 
# 
# sccom Message # 6102:
# The data type of this object is not yet supported in debug.
# 
# 
# sccom Message # 6103:
# The data type of this object is not yet supported in debug.
# 
# 
# sccom Message # 6104:
# The debug database created by the previous run of sccom is invalid.
# 
# 
# sccom Message # 6107:
# The same port name was found in both a base class and a derived class.
# All port names must be unique in an exported module. Rename one of the
# ports to work around this problem.
# 
# 
# sccom Message # 6108:
# If the name is a file name, you can try to make the path or file name shorter.
# 
# 
# sccom Message # 6109:
# No further information.
# 
# 
# sccom Message # 6111:
# The specified file could not be opened for reading.
# 
# 
# sccom Message # 6112:
# The specified file could not be closed.
# 
# 
# sccom Message # 6113:
# The specified file could not be opened for writing.
# 
# 
# sccom Message # 6114:
# The specified file could not be closed.
# 
# 
# sccom Message # 6116:
# Could not open the work library.
# 
# 
# sccom Message # 6117:
# Could not get path for the current directory
# 
# 
# sccom Message # 6118:
# There is no _info file in the work directory specified.
# Use vlib to create a work directory and run sccom again.
# 
# 
# sccom Message # 6119:
# Could not change back to the original directory.
# 
# 
# sccom Message # 6120:
# There is no mapping for the specified library. Use vlib to create
# a work directory and run sccom again.
# 
# 
# sccom Message # 6121:
# The C/C++ files cannot be passed with the -link option.
# 
# 
# sccom Message # 6122:
# There is a missing argument for a command line option.
# Invoke sccom -help to see the options that can be passed to sccom.
# 
# 
# sccom Message # 6123:
# An argument is missing for the command line option passed. This error
# occurs when the user passes a compiler option that needs a file as its
# argument. Use the -verbose option to see the options being passed to
# the compiler.
# 
# 
# sccom Message # 6124:
# An argument is missing for the command line option passed. This error
# occurs when the user passes a compiler option that needs a directory as
# its argument. Use the -verbose option to see the options being passed
# to the compiler.
# 
# 
# sccom Message # 6125:
# There are both single and double quotes in the arguments passed.
# This is not supported by sccom.
# 
# 
# sccom Message # 6126:
# Linking of the object files failed; systemc.so could not be created.
# Problems occurred during the operation of sccom -link. Use the
# -verbose option to see the options being passed at link time.
# 
# 
# sccom Message # 6127:
# There are no object files created. Compile the C/C++ files
# before using the -link option.
# 
# 
# sccom Message # 6128:
# The -o option is not supported with sccom since all the compiler
# output files are managed by sccom.
# 
# 
# sccom Message # 6129:
# The file passed with the -log option has a valid C/C++ file
# extension not allowed by sccom.
# 
# 
# sccom Message # 6130:
# The file passed on the command line does not have a valid C/C++ file
# extension. Refer to the compiler manual to get a list of valid
# file extensions.
# 
# 
# sccom Message # 6132:
# The include directories needed for compile are missing from the
# compiler installation. Make sure the compiler is installed correctly.
# 
# 
# sccom Message # 6133:
# The compiler being used for compilation is not supported. Refer to
# the ModelSim release notes for a list of supported compiler versions.
# 
# 
# sccom Message # 6134:
# Could not find the compiler executable in the compiler installation specified.
# 
# 
# sccom Message # 6137:
# The current operating system is not supported.
# 
# 
# sccom Message # 6139:
# Check to see if you have write permissions in the working area.
# 
# 
# sccom Message # 6140:
# The object file created in the current directory could not be moved
# to the work/_sc or the work/_sc/gensrc directory. Check the permissions
# of the directories or check to see if the desired work directory is
# pointing to some other location.
# 
# 
# sccom Message # 6142:
# The compilation failed. Invoke sccom with the -verbose option
# to see the compile line and options being passed to sccom.
# 
# 
# sccom Message # 6143:
# Creation of the debug database failed. Invoke sccom with the -verbose
# option to see the compile line and options being passed to sccom.
# 
# 
# sccom Message # 6144:
# There is an incompatibility in the ModelSim versions used to compile
# files. Compile the all the files with the same version of ModelSim.
# 
# 
# sccom Message # 6146:
# The design needs appropriate include files and the SystemC verification
# library for successful compilation. Invoke sccom -help to see the
# options that can be passed to sccom.
# 
# 
# sccom Message # 6147:
# Could not find the scparse executable in the ModelSim installation specified.
# 
# 
# sccom Message # 6148:
# Refer to the ModelSim release notes to get a list of supported
# operating system releases or invoke sccom -help to see if the
# current operating system release is supported.
# 
# 
# sccom Message # 6149:
# ModelSim's SystemC C++ code is compiled with the -AA option so that
# C++ streams will properly function in shared libraries. -AA is
# incompatible with -AP, thus -AP is not supported.
# 
# 
# sccom Message # 6150:
# Could not rename a file. Check file and directory permissions.
# 
# 
# sccom Message # 6152:
# Could not remove a file from a directory.  Check permissions.
# 
# 
# sccom Message # 6154:
# The SC_EXPORT_MODULE macro must be placed in a .cpp file. In this case
# a module was detected in a header file, and it should be moved to a .cpp file.
# 
# 
# sccom Message # 6158:
# Detected improperly formed variable in modelsim.ini. No single quotes (') or double quotes (") are allowed.
# 
# 
# sccom Message # 6159:
# Missing argument for a variable in modelsim.ini.
# 
# 
# sccom Message # 6160:
# The GCC_EXEC_PREFIX environment variable is pointing to a different
# location than the CppPath specified in the modelsim.ini file. This is illegal.
# 
# 
# sccom Message # 6161:
# The GCC_EXEC_PREFIX variable is pointing to a location other than the
# default ModelSim g++ compiler. Ignoring GCC_EXEC_PREFIX.
# 
# 
# sccom Message # 6164:
# While looking for the end of a comment in the specified file, an end
# of file condition was encountered. Verify that the correct file was
# specified with the -f option and that the file is in a valid format.
# 
# 
# sccom Message # 6165:
# The debug database in one of the libraries is out of date. Run
# 'vdel -allsystemc' to remove all old compiled SystemC objects and
# then recompile.
# 
# 
# sccom Message # 6167:
# No moduleinfo.sc files were found in the visible design libraries.
# Make sure that you ran sccom before running sccom -link, and make
# sure that your SystemC source code compiled without any errors.
# 
# 
# sccom Message # 6168:
# The port type of the exported module is not supported on the
# mixed-language boundary or the port is a user defined port.
# 
# 
# sccom Message # 6169:
# The gcc version you are using is not officially supported. sccom has
# created a predefined macro file to support the gcc. Please copy this
# file to the specified directory and rerun sccom.
# 
# 
# sccom Message # 6170:
# The gcc version you are using is not officially supported. sccom needs
# a predefined macro file to support the gcc. Please contact support@model.com.
# 
# 
# sccom Message # 6171:
# ModelSim automatically generates and compiles "glue" code for SystemC
# SystemVerilog DPI tasks and functions. The compilation of the generated
# code failed. See the error message text for clues to the problem.
# 
# 
# sccom Message # 6172:
# Please do not specify directories in the include search path that contain systemc.h, scv.h, scms.h or tlm.h header files. These header files might not be compatible with the SystemC library distributed with the product. Using custom version of these header files might lead to undefined behavior while linking the design or during simulation.
# 
# 
# sccom Message # 6173:
# The file passed on the command line does not have a valid C/C++ file
# extension. Refer to the compiler manual to get a list of valid
# file extensions.
# 
# 
# vsim-systemc Message # 6500:
# This is a test message.
# 
# 
# vsim-systemc Message # 6501:
# The calculated high time for the clock is zero. The high time is the
# clock period multiplied by the duty cycle rounded to an integer.
# 
# 
# vsim-systemc Message # 6502:
# Ports are not allowed outside the scope of a SC_MODULE.
# 
# 
# vsim-systemc Message # 6503:
# The calculated clock period is zero. If a clock period is specified in the
# clock constructor then check if it is zero. If the clock is created with no
# clock period parameter, or if the clock period is specified based on the default
# time unit, check the simulation resolution limit and the default simulation time
# unit settings. The default values of these parameters are set in the modelsim.ini file.
# 
# 
# vsim-systemc Message # 6504:
# The calculated low time for the clock is zero. The low time is the difference
# between the clock period and clock high time. The high time is calculated by
# multiplying the clock period by the duty cycle.
# 
# 
# vsim-systemc Message # 6505:
# A fifo can be connected to only one read and one write interface.
# 
# 
# vsim-systemc Message # 6506:
# A fifo can be connected to only one read and one write interface.
# 
# 
# vsim-systemc Message # 6507:
# A fifo of size less than one does not exist.
# 
# 
# vsim-systemc Message # 6508:
# Could not bind an interface to a port. All ports in the design must be
# bound to simulate a design. The reason for the failure to bind is specified
# in the message.
# 
# 
# vsim-systemc Message # 6509:
# Could not bind a port to a port. All ports in the design must be bound to simulate
# a design. The reason for the failure to bind is specified in the message.
# 
# 
# vsim-systemc Message # 6510:
# Could not bind a port after elaboration. All ports in the design must be bound
# to simulate a design. The reason for the failure to bind is specified in the
# message.
# 
# 
# vsim-systemc Message # 6511:
# Unable to add the port to the design database. Either the simulation is currently
# running or a port of the same name is already created earlier in the same scope.
# 
# 
# vsim-systemc Message # 6512:
# Unable to remove the port from the design database. The port does not exist in the design.
# 
# 
# vsim-systemc Message # 6513:
# Unable to get the interface bound with the port. Either the port is unbound or the accessed index is out of bounds.
# 
# 
# vsim-systemc Message # 6514:
# Unable to add the prim channel to the design database. Either the simulation is currently running or a prim channel of the same name is already created earlier in the same scope.
# 
# 
# vsim-systemc Message # 6515:
# Unable to remove the prim channel from the design database. The port does not exist in the design.
# 
# 
# vsim-systemc Message # 6516:
# A signal of type sc_signal<T>, an unresolved signal type, is connected to more than one drivers.  Use a resolved signal type like sc_signal_resolved or sc_signal_rv<N> to connect multiple drivers.
# 
# 
# vsim-systemc Message # 6517:
# No default event found for the channel. The default event of a channel is returned by the default_event() interface method. The value change event is usually the default event for primitive channels.
# 
# 
# vsim-systemc Message # 6518:
# The resolved port is not bound to a resolved signal at the end of elaboration. All ports in the design must be bound to simulate a design.
# 
# 
# vsim-systemc Message # 6519:
# Could not find event for the port. No interface is bound to the port.
# 
# 
# vsim-systemc Message # 6520:
# A semaphore cannot be initialized with a negative value.
# 
# 
# vsim-systemc Message # 6521:
# Only signal types like sc_signal<T>, sc_signal_resolved and sc_signal_rv<N> and their corresponding port types can be connected to a HDL signal.
# 
# 
# vsim-systemc Message # 6523:
# Word length must be greater than zero.
# 
# 
# vsim-systemc Message # 6524:
# Number of bits must be greater than zero.
# 
# 
# vsim-systemc Message # 6525:
# The division word length must be greater than zero.
# 
# 
# vsim-systemc Message # 6526:
# The word length of a constant must be greater than zero.
# 
# 
# vsim-systemc Message # 6527:
# The specified maximum word length is invalid.
# 
# 
# vsim-systemc Message # 6528:
# The assigned fixed-point value is not compatible.
# 
# 
# vsim-systemc Message # 6529:
# The overflow mode set for the fixed point type is invalid for the reasons stated in the message.
# 
# 
# vsim-systemc Message # 6530:
# The accessed index of the fixed point number is out range.
# 
# 
# vsim-systemc Message # 6531:
# Unable to begin context.  begin() might have been called earlier on this context. In that case call end() before the next begin().
# 
# 
# vsim-systemc Message # 6532:
# Unable to end context. end() might have been called earlier on this context or a begin() was never called on this context.
# 
# 
# vsim-systemc Message # 6533:
# Sign magnitude wrap around is not defined for unsigned numbers.
# 
# 
# vsim-systemc Message # 6534:
# Initial value must be greater than zero.
# 
# 
# vsim-systemc Message # 6535:
# No further information.
# 
# 
# vsim-systemc Message # 6536:
# Unable to perform operations.
# 
# 
# vsim-systemc Message # 6537:
# Unable to convert value.
# 
# 
# vsim-systemc Message # 6538:
# Getting a non-boolean value for the evaluated expression. The result is expected to be a boolean value.
# 
# 
# vsim-systemc Message # 6539:
# Getting a non-integer value for the evaluated expression. The result is expected to be an integer.
# 
# 
# vsim-systemc Message # 6540:
# Getting a non-sc_logic value for the evaluated expression. The result is expected to be an sc_logic.
# 
# 
# vsim-systemc Message # 6541:
# The expression cannot be evaluated since the operands are not of sc_logic type.
# 
# 
# vsim-systemc Message # 6542:
# The expression cannot be evaluated since the operands are not of boolean type.
# 
# 
# vsim-systemc Message # 6543:
# Found an object of the same name already present in the design hierarchy. Every object in the design hierarchy should have a unique name. Later declarations with the same name are ignored.
# 
# 
# vsim-systemc Message # 6544:
# The object name has characters which are not legal in SystemC. The illegal characters in the name will be substituted to make the name legal.
# 
# 
# vsim-systemc Message # 6545:
# This is an internal error.  A process is trying to read before being initialized. Please contact support@model.com if you get this error in your design.
# 
# 
# vsim-systemc Message # 6546:
# By default the maximum number of processes allowed in a design is 10. This can be changed by including the following two lines before including 'systemc.h' in your source code:
# 		#define SC_USER_DEFINED_MAX_NUMBER_OF_PROCESSES
# 		#define SC_VC6_MAX_NUMBER_OF_PROCESSES <number desired>
# 
# 
# vsim-systemc Message # 6547:
# The function to complete a module construction is not called.  This can happen when the module's constructor is missing the sc_module_name parameter.
# 
# 
# vsim-systemc Message # 6548:
# Previous errors during construction can lead to incorrect hierarchical name for a module. Please fix the earlier errors before proceeding.
# 
# 
# vsim-systemc Message # 6549:
# The stack size can only be set for thread processes which include SC_THREAD and SC_CTHREAD.
# 
# 
# vsim-systemc Message # 6550:
# sc_module_name is being used incorrectly. sc_module_name must be used only as a formal argument to a SystemC module constructor. A SystemC module is a class derived from sc_module which can be created using the SC_MODULE macro.  The SC_CTOR macro creates a module constructor with a sc_module_name argument.
# 
# 
# vsim-systemc Message # 6551:
# Could not find a name for the module. The module constructor might be missing the sc_module_name parameter.
# 
# 
# vsim-systemc Message # 6552:
# The call to the function sc_set_time_resolution() failed since it violated one of the rules for setting resolution.
# 
# 
# vsim-systemc Message # 6553:
# The call to the function sc_set_default_time_unit() failed since it violated one of the rules for setting the default time unit.
# 
# 
# vsim-systemc Message # 6554:
# The default time unit is modified based on the simulation resolution limit set by the sc_set_time_resolution() function.
# 
# 
# vsim-systemc Message # 6555:
# ModelSim allows wait(n) only in SC_CTHREAD processes. SC_METHOD and SC_THREAD cannot have a wait for N clock cycles
# 
# 
# vsim-systemc Message # 6556:
# SC_METHOD and SC_THREAD processes cannot have a wait_unit() statement. It is only allowed in a SC_CTHREAD process.
# 
# 
# vsim-systemc Message # 6557:
# SC_METHOD process cannot have a wait() statement.  It is only allowed in thread processes, SC_THREAD and SC_CTHREAD. Use next_trigger() to modify the sensitivity list of a method process the next time it is called.
# 
# 
# vsim-systemc Message # 6558:
# Thread processes cannot have a call to next_trigger().  This is only meant for SC_METHOD processes. Use a wait() statement instead to achieve the same behavior.
# 
# 
# vsim-systemc Message # 6559:
# Immediate notification is not permitted in the simulation update phase, when signal values are updated.  It is only allowed during the evaluation phase of the simulator when processes are executed.
# 
# 
# vsim-systemc Message # 6560:
# halt() is not allowed in a SC_METHOD and SC_THREAD process. It is allowed only in a SC_CTHREAD process.
# 
# 
# vsim-systemc Message # 6561:
# watching() is not allowed in a SC_METHOD and SC_THREAD process. It is allowed only in a SC_CTHREAD process.
# 
# 
# vsim-systemc Message # 6562:
# dont_initialize() has no effect for SC_CTHREADs. SC_CTHREADs are not initialized by default unlike SC_METHOD and SC_THREAD.
# 
# 
# vsim-systemc Message # 6563:
# The number of clock cycles n in wait(n) must be a positive number.
# 
# 
# vsim-systemc Message # 6564:
# Failed to modify the sensitivity list of the process since the simulation has already started.  The sensitivity list of a process can be set only during construction(elaboration).
# 
# 
# vsim-systemc Message # 6565:
# Failed to modify the sensitivity list of the process since the simulation has already started.  The sensitivity list of a process can be set only during construction(elaboration).
# 
# 
# vsim-systemc Message # 6566:
# Failed to modify the sensitivity list of the process since the simulation has already started.  The sensitivity list of a process can be set only during construction(elaboration).
# 
# 
# vsim-systemc Message # 6567:
# Failed to insert a module in the design hierarchy. Either a module of the same name already exists in the design database or the simulation has already started. Modules can only be created during construction(elaboration).
# 
# 
# vsim-systemc Message # 6568:
# Failed to remove the module from the design database. The module does not exist in the design database.
# 
# 
# vsim-systemc Message # 6569:
# The event on which notify_delayed() is called already has a pending notification at a future time. notify_delayed() cannot be called on an event unless all its pending notifications are handled.
# 
# 
# vsim-systemc Message # 6570:
# gen_unique_name() can generates a unique name based on the basename supplied to it.  The basename passed cannot be NULL.
# 
# 
# vsim-systemc Message # 6571:
# The module name stack can be empty if some module is constructed without a proper name.  This can happen if the module constructor is missing the sc_module_name parameter.
# 
# 
# vsim-systemc Message # 6572:
# sc_cycle() is not supported in ModelSim.  Use the ModelSim run command to run your design.
# 
# 
# vsim-systemc Message # 6573:
# sc_start() is not supported in ModelSim. Use the run command to achieve the same behaviour. Please refer to the ModelSim Users Manual for more details.
# 
# 
# vsim-systemc Message # 6574:
# The SystemC simulation is stopped due to a call to sc_stop().
# 
# 
# vsim-systemc Message # 6575:
# The HDL child instantiated by a SystemC parent could not be loaded. Please check if the HDL module passed to the sc_foreign_module constructor is correct and the module is available in the library specified.
# 
# 
# vsim-systemc Message # 6576:
# ModelSim does not support calling sc_initialize from a SystemC design, please
# refer to the ModelSim Users Manual for information.
# 
# 
# vsim-systemc Message # 6577:
# SystemC simulation objects like module, channel, ports etc cannot be declared as an automatic variable. The simulation objects must be valid through out the simulation.
# 
# 
# vsim-systemc Message # 6578:
# The registered message ID is invalid. If you are not using the SystemC
# message handler in your source code, then this is an internal error. Please
# report the error to support@model.com.
# 
# 
# vsim-systemc Message # 6579:
# Input string is too long. The output string might be truncated.
# 
# 
# vsim-systemc Message # 6580:
# front() is called on an empty list. The list should have atleast one element to call front().
# 
# 
# vsim-systemc Message # 6581:
# back() is called on an empty list. The list should have atleast one element to call back().
# 
# 
# vsim-systemc Message # 6582:
# No further information is available.
# 
# 
# vsim-systemc Message # 6583:
# No further information is available.
# 
# 
# vsim-systemc Message # 6584:
# Unable to convert value to bit vector. The exact reason for the conversion failure is given in the message.
# 
# 
# vsim-systemc Message # 6585:
# No further information is available.
# 
# 
# vsim-systemc Message # 6586:
# The value assigned is outside the set of accepted values for the type. For all SystemC types, the type and value definitions are in the C++ header files in modeltech/include/systemc.
# 
# 
# vsim-systemc Message # 6587:
# Vectors must has a minimum size of one.
# 
# 
# vsim-systemc Message # 6588:
# Vectors containing 4-state logic values are being converted to 2-state values.
# 
# 
# vsim-systemc Message # 6589:
# sc_bv being a 2-state vector cannot contain 4-state values. Use sc_lv<N> to store 4-state values.
# 
# 
# vsim-systemc Message # 6590:
# No further information is available.
# 
# 
# vsim-systemc Message # 6591:
# No further information is available.
# 
# 
# vsim-systemc Message # 6592:
# No further information is available.
# 
# 
# vsim-systemc Message # 6593:
# sc_logic value 'Z', a 4-state value cannot be converted to a 2-state boolean value.
# 
# 
# vsim-systemc Message # 6594:
# sc_logic value 'X', a 4-state value cannot be converted to a 2-state boolean value.
# 
# 
# vsim-systemc Message # 6596:
# The accessed bit index is out of bound of the vector.
# 
# 
# vsim-systemc Message # 6597:
# Unknown SystemC error. Please report the problem to support@model.com.
# 
# 
# vsim-systemc Message # 6598:
# No further information is available.
# 
# 
# vsim-systemc Message # 6599:
# This is a debug message which will be printed out only if the source
# is compiled with the -DDEBUG_SYSTEMC flag.
# 
# 
# vsim-systemc Message # 6600:
# Internal error. Please report the error to support@model.com.
# 
# 
# vsim-systemc Message # 6601:
# The call to the function sc_set_time_resolution() failed since it violated one of the rules for setting resolution.
# 
# 
# vsim-systemc Message # 6602:
# ModelSim has not implemented the above feature in this release. Please contact support@model.com to know the exact timeline for this feature implementation.
# 
# 
# vsim-systemc Message # 6603:
# The accessed bit index is out of bound of the vector.
# 
# 
# vsim-systemc Message # 6604:
# Internal error. Please report the error to support@model.com.
# 
# 
# vsim-systemc Message # 6605:
# No further information.
# 
# 
# vsim-systemc Message # 6606:
# No further information is available.
# 
# 
# vsim-systemc Message # 6607:
# No further information is available.
# 
# 
# vsim-systemc Message # 6608:
# A call to a function like sc_get_int_param() to get the value of a generic/parameter override from HDL parent failed.  Currently vopt does not propagate generic/parameter overrides across design units. These function will return invalid values when called in vopt mode. Please check the return status of these functions to see if the returned value is valid. This limitation will be removed in a later release.
# 
# 
# vsim-systemc Message # 6609:
# Observing a foreign signal from an sc_clock object is not supported.
# 
# 
# vsim-systemc Message # 6610:
# You can work around the problem by using reference syntax in the modules which only reference the object. (Rather than pointer syntax)
# 
# 
# vsim-systemc Message # 6611:
# The SC_METHOD macro can only be called before simulation starts.
# 
# 
# vsim-systemc Message # 6612:
# The SC_THREAD macro can only be called before simulation starts.
# 
# 
# vsim-systemc Message # 6613:
# The SC_CTHREAD macro can only be called before simulation starts.
# 
# 
# vsim-systemc Message # 6614:
# The sc_stop() function can be called only once.
# 
# 
# vsim-systemc Message # 6615:
# sc_stop mode can be set only during elaboration of the design.
# 
# 
# vsim-systemc Message # 6616:
# A method process cannot be suspended hence calling wait() on a method process is illegal.
# 
# 
# vsim-systemc Message # 6617:
# Only thread processes are allowed to be registered with a sc_join object.
# 
# 
# vsim-systemc Message # 6618:
# A process handle is created with a null object.
# 
# 
# vsim-systemc Message # 6619:
# This instance of sc_export is not bound to any interface object.
# 
# 
# vsim-systemc Message # 6620:
# A sc_export instance can be created only during the elaboration/construction phase of the simulator.
# 
# 
# vsim-systemc Message # 6621:
# This is an internal error
# 
# 
# vsim-systemc Message # 6622:
# A sc_clock object is a read-only object.  The parameters of the clock can be set at constructions. It is illegal to write to a clock.
# 
# 
# vsim-systemc Message # 6623:
# An interface object was not associated with the sc_export object at construction_done() call for the sc_export.
# 
# 
# vsim-systemc Message # 6624:
# No such sc_export object exists in the sc_export registry.
# 
# 
# vsim-systemc Message # 6625:
# ModelSim does not support the resizing of TLM fifo's.
# 
# 
# vsim-systemc Message # 6626:
# ModelSim does not support dynamic binding of sc_export in the GUI. The new binding will take effect in simulation but the GUI and CLI commands will see the old binding.
# 
# 
# vsim-systemc Message # 6627:
# Could not find binding for a port at the end of elaboration.
# 
# 
# vsim-systemc Message # 6628:
# It is illegal to change the binding of an sc_export.  Once a sc_export is bound to an object it must remain so throughout the simulation.
# 
# 
# vsim-systemc Message # 6629:
# This switch is for internal use only.
# 
# 
# vsim-systemc Message # 6630:
# In case of a pure SystemC design there is no difference between a sc_out and a sc_inout port.  However in a mixed-language design, a sc_out port is treated strictly as an output port. A read() on a sc_out port will give the resolved value of the port at that level of hierarchy. It will not be the effective value of the signal chain like an inout port.
# 
# 
# vsim-systemc Message # 6631:
# User must register DPI-SC import using sc_dpi_register_cpp_function() routine on SystemC side before this import is called on SystemVerilog DPI side.
# 
# 
# vsim-systemc Message # 6632:
# User can only register a SystemC import function declared as DPI-SC import on SystemVerilog side.
# 
# 
# vsim-systemc Message # 6633:
# User should register a SystemC import function using a unique name.
# 
# 
# vsim-systemc Message # 6634:
# User needs to make sure that return type declaration is consistent.
# 
# 
# vsim-systemc Message # 6635:
# The SystemVerilog DPI-SC export calls are not defined in the elaboration as the export functions/tasks are not yet elaborated.
# 
# 
# vsim-systemc Message # 6636:
# The call may fail in the elaboration phase as the design is not fully elaborated yet. 
# 
# 
# vsim-systemc Message # 6637:
# The member functions defined to implement the request-update semantics are getting called in an incorrect order for the channel in question. This is an internal error, please contact support@model.com if you get this error in your design.
# 
# 
# vsim-systemc Message # 6638:
# The SystemC simulation restart is expected to fail when systemc.so unloading is disabled under certain circumstances.
# 
# 
# vsim-systemc Message # 6639:
# User must register DPI-SC import using sc_dpi_register_cpp_function() routine on SystemC side before this import is called on SystemVerilog DPI side.
# 
# 
# vsim-systemc Message # 6640:
# User must use scSetScopeByName() on the Verilog side to set the SystemC scope before calling a SystemVerilog DPI-SC import function.
# 
# 
# vsim-systemc Message # 6641:
# A valid SystemC scope is expected.
# 
# 
# vsim-systemc Message # 6642:
# The callback function for custom debug can be registered from constructors and the phase callback function before_end_of_elaboration().
# 
# 
# vsim-systemc Message # 6643:
# The specified SystemC scope could not be found in the design. Use the
# structure window to verify the existence of the hierarchical name of the object.
# 
# 
# vsim-systemc Message # 6644:
# The object by the given name is not a SystemC module. Use the
# structure, signals, and variables windows to verify the object type.
# 
# 
# ucdb Message # 6800:
# The UCDB API routine is expecting a valid ucdbScopeT handle, the given
# handle is eigher NULL, or it is already removed from the UCDB.
# 
# 
# ucdb Message # 6801:
# The UCDB API routine is expecting a valid design unit scope handle.
# Design unit scope types are UCDB_DU_MODULE, UCDB_DU_ARCH,
# UCDB_DU_PACKAGE, UCDB_DU_PROGRAM or UCDB_DU_INTERFACE.
# The given handle is either none of these types, or NULL.
# 
# 
# ucdb Message # 6802:
# The UCDB API routine is expecting a coverindex which should be less
# then the number of coveritems present in its parent scope.
# 
# 
# ucdb Message # 6803:
# The UCDB API routine is expecting a valid test item handle. The given
# ucdbTestT handle is either NULL or not a test item object.
# 
# 
# ucdb Message # 6804:
# The UCDB API routine is expecting a valid database handle. The given
# ucdbT handle is either NULL or not a database object.
# 
# 
# ucdb Message # 6805:
# Problem with opening the given filename in specified mode. In read mode,
# either the file doesn't has the necessary user permissions, or it
# doesn't exist. In write mode, the file doesn't has the necessary user
# permissions.
# 
# 
# ucdb Message # 6806:
# The ucdb_Open() routine is called for an unknown open mode. The valid
# database open modes are, UCDB_READ, UCDB_WRITE, UCDB_READWRITE,
# UCDB_READSTREAMING, and UCDB_WRITESTREAMING.
# 
# 
# ucdb Message # 6807:
# An UCDB database can only be closed if any testdata is present in the
# database, otherwise the ucdb_Close() routine will fail to write the
# database into the disc. The database will remain valid, and the user
# can add testdata using ucdb_AddTest() routine and close it.
# 
# 
# ucdb Message # 6808:
# The specified filename is not a valid UCDB database file. It may be any
# other kind of file, or corrupted. The UCDB can not read this file.
# 
# 
# ucdb Message # 6809:
# The specified filename is NULL, UCDB open routines need valid filenames.
# 
# 
# ucdb Message # 6810:
# The UCDB can read database files using UCDB_READSTREAMING mode, where no
# object is created, and the data is kept on some static area after getting
# from the disc in a streaming fashion. Some API routines can't work on
# this mode because the needed data is already overritten in the static
# area. Similarly UCDB database can be created in UCDB_WRITESTREAMING
# mode, where no objects are created, and the data directly written to
# the disc. Some API routines can't work on this mode of operation.
# 
# 
# ucdb Message # 6811:
# There are some UCDB API routines which works on UCDB_WRITESTREAMING mode
# only. In other modes they doesn't make any sense.
# 
# 
# ucdb Message # 6812:
# The same tag is already created on the given scope object.
# 
# 
# ucdb Message # 6813:
# A bin with specified name is already exists inside the scope. There are
# some predefined bin names exist which can't appear more than once
# inside their parent scopes. See the ucdb.h file for the predefined bin
# names.
# 
# 
# ucdb Message # 6814:
# There are some type of coveritem bins which can appear only inside some
# specific type of scopes. For example, UCDB_BRANCHBIN type coveritems can
# appear only inside UCDB_BRANCH type scopes. Any attempt to violate that
# will result in an error.
# 
# 
# ucdb Message # 6815:
# There are some UCDB API routines which can't work on UCDB_READSTREAMING
# database open mode. The ucdb_Open() is one of them, to open a database
# in this mode, use ucdb_OpenReadStream() routine instead of ucdb_Open().
# 
# 
# ucdb Message # 6816:
# Expecting a valid handle for attribute key or value, but the given one
# is NULL.
# 
# 
# ucdb Message # 6817:
# Some UCDB scopes are known as leaf level scopes, and they can't contain
# any child scope inside them. Normally the coverage type scopes, like,
# UCDB_BRANCH, UCDB_EXPR, UCDB_TOGGLE, UCDB_FAM, UCDB_COVER, UCDB_ASSERT,
# etc. are known as leaf level scopes. Any HDL type scopes, like,
# UCDB_INSTANCE, UCDB_BLOCK, UCDB_PACKAGE, etc. can contain child scopes
# inside them.
# 
# 
# ucdb Message # 6818:
# Instance scope needs a type-scope handle to create it, the instance
# scope is the object for an instance of the type-scope object. For
# example, instance scope UCDB_INSTANCE may be for an instance for a
# type-scope of type UCDB_DU_MODULE.
# 
# 
# ucdb Message # 6819:
# The UCDB_CROSS objects are for cross coverage of some other coverpoint
# objects. Some API routines work only on UCDB_CROSS type objects to access
# the coverpoint informations. It is an error to pass any other kind of
# object to those routines instead of UCDB_CROSS type object.
# 
# 
# ucdb Message # 6820:
# The process found a difference in HDL source code while merging two
# UCDB databases, which means that a statement or a branch or an
# expression or a condition is not at the same source position in the
# input and merge base UCDB files. When different designs, or different
# configurations, or same design with different parameter settings are
# loaded in simulation, then it is possible that there are different
# modules instantiated at the same hierarchical positions for differently
# loaded simulations. If UCDB files are created from those different
# simulation runs, then this error can occur while trying to merge those
# UCDB files.
# After this error, no code coverage item will be merged to the target
# database for the reported instance.
# 
# 
# ucdb Message # 6821:
# The reported object has different types in target and input databases.
# This error might occur when an object from input UCDB file is going to
# be merged with the object which is at the same hierarchical position
# in the merge base, but their types are different in two UCDB databases.
# This might be due to any change or rename in the design tree, or in
# testbench. An example is, when a specific object name represents a cover
# directive in one UCDB and a covergroup in another UCDB.
# The merge will be ignored for the reported object.
# 
# 
# ucdb Message # 6822:
# An internal error occurred during merge for the reported object, the
# merge result may be incorrect. if you see this error then contact
# support@model.com with the UCDB database files.
# 
# 
# ucdb Message # 6823:
# The file format of UCDB database file is older, the current UCDB reader
# can't read that old format.
# 
# 
# ucdb Message # 6824:
# A file I/O system call failed while reading or writing a UCDB file.  The
# error string from the operating system is given and hopefully indicates
# the problem.  If in doubt, call support.
# 
# 
# ucdb Message # 6825:
# The indicated argument is invalid.  This may be for various reasons:
# the argument is out-of-bounds, is NULL when it should not be, etc.
# The circumstances will vary depending on the API function; read the
# header comments in ucdb.h to try to determine the nature of the error.
# 
# 
# ucdb Message # 6826:
# The given command is no longer supported now. The user can see the
# coverage results by opening their coverage database files in view mode,
# by using the command 'vsim -viewcov <coverage_file>'
# 
# 
# ucdb Message # 6827:
# An internal/unexpected error occurred during read/write of the named
# file. If you see this error then contact support@model.com with the
# UCDB database file.
# 
# 
# ucdb Message # 6828:
# The reported API is not supported for the given object type.
# Use the recomended API which can work on that type of object.
# 
# 
# ucdb Message # 6829:
# Only some selected type of scopes are allowed to create at top level,
# mainly those which can appear at top in HDL designs. Other scopes,
# including coverage scopes(like UCDB_BRANCH, UCDB_EXPR, UCDB_COND,
# UCDB_FSM, UCDB_COVERPOINT, UCDB_CROSS etc.) are not allowed to be
# there at top level.
# 
# 
# ucdb Message # 6830:
# The scope or test or coveritem is not found. The object might not be
# there in parent scope, or a different UCDB handle is passed to the
# routine.
# 
# 
# ucdb Message # 6831:
# Some scopes have only a few predefined coveritems, and those
# coveritems are obvious to those scopes. So the coveritems from those
# scopes are not allowed to remove. UCDB_ASSERT and UCDB_TOGGLE are
# scopes of that kind.
# 
# 
# ucdb Message # 6832:
# The process found a difference in cover data type while merging two
# UCDB databases, which means that one of the cover data is vector type
# and the other is not. When different designs, or different
# configurations, or same design with different parameter settings are
# loaded in simulation, then it is possible that there are different
# modules instantiated at the same hierarchical positions for differently
# loaded simulations. If UCDB files are created from those different
# simulation runs, then this error can occur while trying to merge those
# UCDB files.
# 
# 
# ucdb Message # 6836:
# The coverage file that was loaded contained no design information.
# Perhaps too many -strip levels were removed during merging.
# 
# 
# vsim-vlog Message # 7000:
# An error occurred when trying to create a new exportwrapper file.
# This kind of error usually is related to a file system problem
# such as disk full, over-quota, directory write permission, etc.
# Check for system issues or contact your System Administrator.
# 
# 
# vsim-vlog Message # 7004:
# Use vlib to create a work directory, or if one already exists, check its permissions.
# 
# 
# vsim-vlog Message # 7005:
# Check the permissions for the SystemVerilog DPI work directory and path.
# 
# 
# vsim-vlog Message # 7006:
# Signature syntax violations are usually caused by an internal error.
# Please report this problem immediately to support@model.com.
# 
# 
# vsim-vlog Message # 7008:
# A DPI header file must be readable and writable to operate within ModelSim.
# Please make sure the file either doesn't yet exist (ModelSim will create it),
# or make sure the file is readable and writable.
# 
# 
# vsim-vlog Message # 7009:
# A DPI header file must be readable and writable to operate within ModelSim.
# Please make sure the file either doesn't yet exist (ModelSim will create it),
# or make sure the file is readable and writable.
# 
# 
# vsim-vlog Message # 7010:
# ModelSim automatically generates the DPI header file, but will refuse to overwrite
# an existing file, unless that file looks like a previously auto-generated DPI header file.
# 
# 
# vsim-vlog Message # 7014:
# It is not legal for a c_identifier to be used for more than one export
# function or task in the same declarative scope.
# 
# 
# vsim-vlog Message # 7015:
# The same DPI C name was used more than once in the design, and different
# declaration sites have different signatures. This can happen either by
# aliasing functions using the DPI c_identifier construct, or simply if
# two export tasks or functions in different scopes have the same name.
# This is not legal according to the SystemVerilog LRM. Change the
# appropriate signatures or names to fix the problem. Note that
# many items in DPI tf declarations compose the tf's 'signature'.
# This includes context/non-context, pure/non-pure, and task vs. function.
# 
# 
# vsim-vlog Message # 7016:
# The same DPI C name was used more than once in the design, and different
# declaration sites have different signatures. This can happen either by
# aliasing functions using the DPI c_identifier construct, or simply if
# two export tasks or functions in different scopes have the same name.
# This is not legal according to the SystemVerilog LRM. Change the
# appropriate signatures or names to fix the problem. Note that
# many items in DPI tf declarations compose the tf's 'signature'.
# This includes context/non-context, pure/non-pure, and task vs. function.
# 
# 
# vsim-vlog Message # 7017:
# Use vlib to create a work directory, or if one already exists, check its permissions.
# 
# 
# vsim-vlog Message # 7018:
# Internal DPI error - Please report this problem to customer support.
# 
# 
# vsim-vlog Message # 7019:
# In order to use ModelSim's SystemVerilog DPI, a C compiler must be
# visible at runtime. You can use the CppPath variable in the
# modelsim.ini file to designate a compiler, or you can download
# and install a built-in GCC from the Model Technology website.
# 
# 
# vsim-vlog Message # 7020:
# A call to randomize() resulted in an attempt to resize a random
# dynamic array to a value greater than the value specified by the
# SolveArrayResizeMax variable in the modelsim.ini file. This check
# is intended to detect and prevent the accidental unconstrained
# randomization of random dynamic arrays.
# 
# 
# vsim-vlog Message # 7021:
# Since DPI tf's must have C linkage, struct element names, typedef names,
# and argument names must be legal C identifiers.  The dpiheader file cannot
# be generated until all such names have been changed to legal C identifiers.
# 
# 
# vsim-vlog Message # 7022:
# If a typedef name is detected more than once in different scopes,
# the dpiheader file cannot be generated.
# 
# 
# vsim-vlog Message # 7023:
# The DPI header cannot be generated.  The reasons for this problem
# are issued in separate warning and error messages.
# 
# 
# vsim-vlog Message # 7024:
# DPI does not support sparse memory arguments.
# 
# 
# vsim-vlog Message # 7025:
# The return type specified by the prototype of an extern method must
# match the return type specified by the method definition.
# 
# 
# vsim-vlog Message # 7026:
# The types for each argument specified by the prototype of an extern method
# must match the types specified by the method definition.
# 
# 
# vsim-vlog Message # 7027:
# From SystemVerilog LRM P1800-2005, Section 19.2:
# Items within packages cannot have hierarchical references.
# 
# 
# vsim-vlog Message # 7028:
# If all the SystemC src files have been compiled with a -nodebug switch make sure that the src file containing the top level of the design -or- a top level SystemC module instantiated in a Verilog -or- VHDL design is compiled without the -nodebug switch to sccom. All source files containing the SC_MODULE_EXPORT() macro calls should be compiled without the -nodebug switch.
# 
# 
# vsim-vlog Message # 7029:
# References into a package are must use the package select syntax (::).
# A hierarchical reference using a dot is not legal.
# 
# 
# vsim Message # 8000:
# No additional information
# 
# vsim Message # 8001:
# No additional information
# 
# vsim Message # 8002:
# No additional information
# 
# vsim Message # 8003:
# No additional information
# 
# vsim Message # 8004:
# No additional information
# 
# vsim Message # 8005:
# No additional information
# 
# vsim Message # 8006:
# No additional information
# 
# vsim Message # 8007:
# No additional information
# 
# vsim Message # 8008:
# No additional information
# 
# vsim Message # 8010:
# No additional information
# 
# vsim Message # 8011:
# No additional information
# 
# vsim Message # 8012:
# No additional information
# 
# vsim Message # 8013:
# No additional information
# 
# vsim Message # 8014:
# No additional information
# 
# vsim Message # 8015:
# No additional information
# 
# vsim Message # 8016:
# No additional information
# 
# vsim Message # 8017:
# No additional information
# 
# vsim Message # 8018:
# No additional information
# 
# vsim Message # 8019:
# No additional information
# 
# vsim Message # 8020:
# No additional information
# 
# vsim Message # 8021:
# No additional information
# 
# vsim Message # 8022:
# No additional information
# 
# vsim Message # 8023:
# No additional information
# 
# vsim Message # 8024:
# No additional information
# 
# vsim Message # 8025:
# No additional information
# 
# vsim Message # 8026:
# No additional information
# 
# vsim Message # 8027:
# No additional information
# 
# vsim Message # 8028:
# No additional information
# 
# vsim Message # 8029:
# No additional information
# 
# vsim Message # 8030:
# No additional information
# 
# vsim Message # 8031:
# No additional information
# 
# vsim Message # 8032:
# No additional information
# 
# vsim Message # 8034:
# No additional information
# 
# vsim Message # 8035:
# No additional information
# 
# vsim Message # 8036:
# No additional information
# 
# vsim Message # 8038:
# No additional information
# 
# vsim Message # 8039:
# No additional information
# 
# vsim Message # 8040:
# A tagged union entry of type 'void' may not be read or written.
# 
# 
# vsim Message # 8042:
# No additional information
# 
# vsim Message # 8043:
# No additional information
# 
# vsim Message # 8044:
# No additional information
# 
# vsim Message # 8045:
# No additional information
# 
# vsim Message # 8048:
# No additional information
# 
# vsim Message # 8052:
# No additional information
# 
# vsim Message # 8053:
# No additional information
# 
# vsim Message # 8054:
# No additional information
# 
# vsim Message # 8055:
# No additional information
# 
# vsim Message # 8056:
# No additional information
# 
# vsim Message # 8057:
# No additional information
# 
# vsim Message # 8058:
# No additional information
# 
# vsim Message # 8059:
# No additional information
# 
# vsim Message # 8060:
# No additional information
# 
# vsim Message # 8061:
# No additional information
# 
# vsim Message # 8062:
# No additional information
# 
# vsim Message # 8063:
# No additional information
# 
# vsim Message # 8064:
# No additional information
# 
# vsim Message # 8065:
# No additional information
# 
# vsim Message # 8066:
# No additional information
# 
# vsim Message # 8067:
# No additional information
# 
# vsim Message # 8068:
# No additional information
# 
# vsim Message # 8069:
# No additional information
# 
# vsim Message # 8070:
# No additional information
# 
# vsim Message # 8072:
# No additional information
# 
# vsim Message # 8073:
# No additional information
# 
# vsim Message # 8074:
# No additional information
# 
# vsim Message # 8075:
# No additional information
# 
# vsim Message # 8077:
# No additional information
# 
# vsim Message # 8078:
# No additional information
# 
# vsim Message # 8079:
# No additional information
# 
# vsim Message # 8080:
# No additional information
# 
# vsim Message # 8081:
# No additional information
# 
# vsim Message # 8082:
# No additional information
# 
# vsim Message # 8083:
# No additional information
# 
# vsim Message # 8084:
# No additional information
# 
# vsim Message # 8085:
# No additional information
# 
# vsim Message # 8086:
# No additional information
# 
# vsim Message # 8087:
# No additional information
# 
# vsim Message # 8088:
# No additional information
# 
# vsim Message # 8090:
# No additional information
# 
# vsim Message # 8091:
# No additional information
# 
# vsim Message # 8092:
# No additional information
# 
# vsim Message # 8093:
# No additional information
# 
# vsim Message # 8094:
# No additional information
# 
# vsim Message # 8095:
# No additional information
# 
# vsim Message # 8096:
# No additional information
# 
# vsim Message # 8097:
# No additional information
# 
# vsim Message # 8098:
# No additional information
# 
# vsim Message # 8099:
# No additional information
# 
# vsim Message # 8100:
# No additional information
# 
# vsim Message # 8101:
# No additional information
# 
# vsim Message # 8102:
# No additional information
# 
# vsim Message # 8103:
# No additional information
# 
# vsim Message # 8104:
# No additional information
# 
# vsim Message # 8105:
# No additional information
# 
# vsim Message # 8106:
# No additional information
# 
# vsim Message # 8107:
# No additional information
# 
# vsim Message # 8108:
# No additional information
# 
# vsim Message # 8109:
# No additional information
# 
# vsim Message # 8110:
# Only positive level values are allowed
# 
# 
# vsim Message # 8111:
# The path specified is incorrect
# 
# 
# vsim Message # 8112:
# Virtual methods that are overridden must match the prototype
# of the superclass exactly
# 
# 
# vsim Message # 8113:
# Virtual methods that are overridden must match the prototype
# of the superclass exactly
# 
# 
# vsim Message # 8114:
# The disable_signal_spy call occurred at the noted time.
# 
# 
# vsim Message # 8115:
# The enable_signal_spy call occurred at the noted time.
# 
# 
# vsim Message # 8116:
# No additional information
# 
# vsim Message # 8117:
# No additional information
# 
# vsim Message # 8118:
# No additional information
# 
# vsim Message # 8119:
# No additional information
# 
# vsim Message # 8123:
# No additional information
# 
# vsim Message # 8124:
# No additional information
# 
# vsim Message # 8125:
# No additional information
# 
# vsim Message # 8126:
# No additional information
# 
# vsim Message # 8127:
# The object is a pointer to a base class. If the actual object is derived
# from the base class, you may want to debug it as the derived type.
# Call 'mti_set_typename' and pass in the derived type name immediately after
# the object is contructed.  ModelSim will adjust its debug to match that of
# the actual object.  Note that the type name passed in must match the actual
# derived object, otherwise, it might result in a crash.
# 
# 
# vsim Message # 8128:
# The function 'mti_set_typename' may only be used for an object which is a
# pointer to a base class but the actual object is derived from the base class.
# 
# 
# vsim Message # 8129:
# Parameterized classes are not types; only specializations of a
# parameterized class are types.  A typedef must resolve to a type.
# 
# 
# vsim Message # 8130:
# Instantiation of the parameterized class had an override of a value
# parameter with a type of an override of a type parameter with a value.
# 
# 
# vsim Message # 8131:
# The 'index' parameter in assoc. array methods such as 'next', 'prev'
# must be assignable from the array's index type.
# 
# 
# vsim Message # 8132:
# The builtin method 'rand_mode' is not allowed for this variable type.
# 
# 
# vsim Message # 8133:
# The index into a queue must be within the range 0 through (size - 1).
# 
# 
# vsim Message # 8134:
# The method 'pop_front' or 'pop_back' was called on an emtpy queue.
# 
# 
# vsim Message # 8135:
# The method 'putc' requires a string or string-literal value.
# 
# 
# vsim Message # 8136:
# The method 'constraint_mode' requires an argument when called as a task,
# but should not have an argument when called as a function.
# 
# vsim Message # 8137:
# The string passed to 'set_randstate' must be one obtained
# from 'get_randstate'.
# 
# vsim Message # 8138:
# The builtin 'await' must not be called on the current process.
# 
# 
# vsim Message # 8139:
# The builtin 'index' can only be used in the 'with' part of
# an array-manipulator method.
# 
# 
# vsim Message # 8140:
# The dimension argument to 'index' must be between 1 and the
# array's dimension, inclusive.
# 
# 
# vsim Message # 8141:
# We currently do not support array manipulation methods for
# sparse arrays.
# 
# 
# vsim Message # 8142:
# Array index methods such as 'find_first_index' are only allowed
# for 1-dimensional arrays.
# 
# 
# vsim Message # 8143:
# A 'with' clause may not be usef for 'reverse' or 'shuffle'.
# 
# 
# vsim Message # 8144:
# Reduction methods such as 'sum' and 'xor' require an array of.
# packed elements.
# 
# 
# vsim Message # 8145:
# You cannot use this array method on a packed array.
# 
# 
# vsim Message # 8146:
# The mem commands can work on complex multi-dimensional arrays that are
# combinations of dynamic, unpacked, and associative arrays.  However,
# associative arrays can only appear in the lowest dimension of such types.
# You can work around this limitation by iterating each element of all
# associative arrays in this object, and calling mem commands on each
# selected sub-array.
# 
# 
# vsim Message # 8147:
# This command needs a memory as an argument and an element of memory
# was provided.
# 
# 
# vsim Message # 8148:
# The compiler has inferred a design-wide constant value for the generic.
# However, the simulator is attempting to post a different value to the
# generic. The probable source of this difference is the use of the -g/-G
# option applied to the design. Use the +acc=g option, when compiling,
# to enable use of -g/-G.
# 
# 
# vsim Message # 8149:
# Additional -sdf{min|typ|max} switches were specified with the vsim command
# that were not specified when vopt was run on the optimized design that is
# currently being simulated.  Information about port visibility (as well as
# other data) might not have been maintained, causing potential errors when
# the the SDF is applied.  (If vsim invokes successfully, this warning should
# be able to be ignored.)
# 
# 
# vsim Message # 8150:
# Optimized cell ports to VHDL to non-net port type is not supported yet at the mixed
# boundaries.
# 
# 
# vsim Message # 8151:
# Phase transactions are special transactions that can be started only when the parent transaction is active. A transaction is identified as a phase transaction if the name of a relationship specified for the transaction matches the name given by the ScvPhaseRelationName variable in the modelsim.ini file.
# 
# 
# vsim Message # 8152:
# Phase transactions are special transactions that can be started only when no other phase transaction of the same parent is active. A transaction is identified as a phase transaction if the name of a relationship specified for the transaction matches the name given by the ScvPhaseRelationName variable in the modelsim.ini file.
# 
# 
# vsim Message # 8153:
# Phase transactions are special transactions that cannot continue after the parent transaction has ended. A transaction is identified as a phase transaction if the name of a relationship specified for the transaction matches the name given by the ScvPhaseRelationName variable in the modelsim.ini file.
# 
# 
# vsim Message # 8154:
# A transaction can end because of an explicit call to end the transaction. A phase transactions can end if the parent transaction ends. A transaction is identified as a phase transaction if the name of a relationship specified for the transaction matches the name given by the ScvPhaseRelationName variable in the modelsim.ini file.
# 
# 
# vsim Message # 8155:
# A phase transaction must be created on the same stream as the parent transaction. A transaction is identified as a phase transaction if the name of a relationship specified for the transaction matches the name given by the ScvPhaseRelationName variable in the modelsim.ini file.
# 
# 
# vsim Message # 8156:
# No additional information.
# 
# vsim Message # 8157:
# No additional information.
# 
# vsim Message # 8158:
# No additional information.
# 
# vsim Message # 8159:
# No additional information.
# 
# vsim Message # 8160:
# No additional information.
# 
# vsim Message # 8161:
# No additional information.
# 
# vsim Message # 8162:
# No additional information.
# 
# vsim Message # 8163:
# No additional information.
# 
# vsim Message # 8164:
# No additional information.
# 
# vsim Message # 8165:
# No additional information.
# 
# vsim Message # 8166:
# No additional information.
# 
# vsim Message # 8167:
# No additional information.
# 
# vsim Message # 8168:
# No additional information.
# 
# vsim Message # 8169:
# No additional information.
# 
# vsim Message # 8170:
# No additional information.
# 
# vsim Message # 8171:
# No additional information.
# 
# vsim Message # 8172:
# No additional information.
# 
# vsim Message # 8173:
# No additional information.
# 
# vsim Message # 8174:
# No additional information.
# 
# vsim Message # 8175:
# No additional information.
# 
# vsim Message # 8176:
# No additional information.
# 
# vsim Message # 8177:
# No additional information.
# 
# vsim Message # 8178:
# No additional information.
# 
# vsim Message # 8179:
# No additional information.
# 
# vsim Message # 8180:
# No additional information.
# 
# vsim Message # 8181:
# No additional information.
# 
# vsim Message # 8182:
# No additional information.
# 
# vsim Message # 8183:
# No additional information.
# 
# vsim Message # 8184:
# No additional information.
# 
# vsim Message # 8185:
# No additional information.
# 
# vsim Message # 8186:
# No additional information.
# 
# vsim Message # 8187:
# No additional information.
# 
# vsim Message # 8188:
# No additional information.
# 
# vsim Message # 8189:
# No additional information.
# 
# vsim Message # 8190:
# No additional information.
# 
# vsim Message # 8191:
# No additional information.
# 
# vsim Message # 8192:
# No additional information.
# 
# vsim Message # 8193:
# No additional information.
# 
# vsim Message # 8194:
# No additional information.
# 
# vsim Message # 8195:
# No additional information.
# 
# vsim Message # 8196:
# No additional information.
# 
# vsim Message # 8197:
# No additional information.
# 
# vsim Message # 8198:
# No additional information.
# 
# vsim Message # 8199:
# No additional information.
# 
# vsim Message # 8200:
# No additional information.
# 
# vsim Message # 8201:
# No additional information.
# 
# vsim Message # 8202:
# No additional information.
# 
# vsim Message # 8203:
# No additional information.
# 
# vsim Message # 8204:
# No additional information.
# 
# vsim Message # 8205:
# No additional information.
# 
# vsim Message # 8206:
# Problem parsing SDF timing check description.
# 
# vsim Message # 8207:
# No additional information.
# 
# vsim Message # 8208:
# No additional information.
# 
# vsim Message # 8209:
# The element referenced by this virtual interface is not in the modport 
# specified in the virtual interface's declaration.
# 
# 
# vsim Message # 8210:
# A call to $exit was made from a non-program design unit which is illegal.
# 
# 
# vsim Message # 8211:
# The design attempted to log a transaction with a time other than the current
# simulation time.  This is only allowed when retroactive recording is
# enabled in ModelSim.  To enable, specify a positive integer value for
# RetroChannelLimit in the modelsim.ini file.
# 
# 
# vsim Message # 8212:
# The design attempted to log a transaction with a time other than the current
# simulation time and ModelSim exceeded the allowed resources for this
# feature.  You may change the limit by adjusting RetroChannelLimit in the
# modelsim.ini file.  A value of zero disables retro-active recording
# while a positive number changes the resource limit.  However, setting this
# limit too high may degrade interactive debug and post-simulation debug
# performance.
# 
# vsim Message # 8213:
# One of the standard DPI open array query functions was called for a type
# other than an array.  This is likely to be an internal error. Please contact
# Modelsim support.
# 
# 
# vsim Message # 8214:
# One of the standard DPI open array query functions was called with an unpacked
# dimension that does not exist.  Unpacked dimensions are numbered from 1 up.
# 
# 
# vsim Message # 8215:
# One of the standard DPI open array query functions was called for a packed
# dimension but the array has none.  A single, linearized packed dimension is indicated
# by dimension number zero.
# 
# 
# vsim Message # 8216:
# A SystemC signal cannot be driven by a 'force -drive' command.
# The 'force -freeze' command can be used to freeze the value
# of a SystemC signal or the 'force -deposit' command can be used to
# deposit the value of a SystemC signal.
# 
# 
# vsim Message # 8217:
# Bit-select or part-select of SystemC signal is not allowed with
# a 'force' command.
# 
# 
# vsim Message # 8218:
# Bit-select or part-select of SystemC signal is not allowed with
# a 'noforce' command.
# 
# 
# vsim Message # 8219:
# This object resides on an optimized verilog cell. It must be an in/inout port,
# that is internally connected, to be a valid target for INTERCONNECT delays.
# 
# 
# vsim Message # 8220:
# The specified object name was used in a place where the type of that
# object is not allowed.  For example, using the hierarchical name of a
# net as the LHS of a procedural assignment would produce this message.
# NOTE: If more than one use of the object name exists, consider all
# occurrences in resolving the error.
# 
# 
# vsim Message # 8221:
# A floating point divide has a right operand of zero, or a floating point
# exponentiation has a left operand of zero and a right operand of a
# negative value, which is causing a divide by zero condition.
# 
# 
# vsim Message # 8222:
# No additional information
# 
# vsim Message # 8223:
# No additional information
# 
# vsim Message # 8224:
# One of the standard DPI open array functions was called but the
# simulator hasn't implemented it yet.  Use different calls
# until this call is supported in a future simulator revision.
# 
# 
# vsim Message # 8225:
# The specified function takes only one argument which is an object of type integer or arbitrarily-sized vector value. The object is treated as unsigned.
# 
# 
# vsim Message # 8226:
# The specified math function takes two arguments and both must be of type real.
# 
# 
# vsim Message # 8228:
# An invalid type kind parameter is passed to a type creation function.
# 
# 
# vsim Message # 8229:
# An object which has no value (such as a typedef) has been
# dereferenced.
# 
# 
# vsim Message # 8230:
# A field of a tagged union is not supported by mem commands.
# 
# 
# vsim Message # 8231:
# The prefix of a '::' reference is required to be either a package or class type
# 
# 
# vsim Message # 8232:
# Non-static class items can not be accessed by '::' static access.
# 
# 
# vsim Message # 8233:
# An index into the specified object is either unknown (X) or outside of
# the declared range of the object.
# 
# 
# vsim Message # 8234:
# Cannot assign to a variable that was declared 'const'.
# 
# 
# vsim Message # 8235:
# The raw profile file was written on a 64-bit machine.
# Cumulative memory size values may overflow 32-bit fields on this machine.
# It is recommended that you reload this profile data on a 64-bit machine.
# Use the '-ignore_size_diff' flag to 'profile reload' to reload anyway.
# 
# 
# vsim Message # 8236:
# DPI does not support unpacked unions.
# 
# 
# vsim Message # 8237:
# It is illegal to specify a transaction end time that is earlier than that
# transaction's begin time.  When this happens, the simulator changes the
# end time to match the begin time, effectively making an instantaneous
# transaction.  Inspect your use of retroactive transaction recording and
# correct the design's behavior.
# 
# 
# vsim Message # 8238:
# It is illegal to start or end a transaction at a time later than the current
# simulation time.  A future start time becomes the current simulation time
# and a future end time becomes the start time of the original transaction.
# 
# 
# vsim Message # 8239:
# It is illegal to start or end a transaction at a time less than zero.
# A negative start time becomes time zero and a negative end time becomes
# the start time of the original transaction.
# 
# 
# vsim Message # 8240:
# A non-constant index was detected in a reference to the specified
# instance array.
# 
# 
# vsim Message # 8241:
# A transaction is 'instantaneous` if its begin time and end time are the same.
# This is not illegal, but it is unusual enough to justify a warning.
# 
# 
# vsim Message # 8242:
# Generic/Parameter overrides for VHDL or Verilog module instance must
# be specified in the <name>=<value> format.
# 
# 
# vsim Message # 8243:
# A transaction handle was deleted before the transaction had ended.  This
# can happen because the handle or stream goes out of scope while the 
# transaction remains active.  The simulator ends the transaction at the
# current simulation time.
# 
# 
# vsim Message # 8244:
# An optimized design assumes knowledge of the builtin system tasks
# and system functions. If the user registers a PLI application
# that overrides a builtin system task or function, then the design
# must be optimized with the +acc=s option.
# [DOC: ModelSim User's Manual - Verilog Simulation Chapter]
# 
# 
# vsim Message # 8245:
# The ability to supply a user-defined version of builtin system functions that
# return string variables is not currently implemented. This is true whatever return
# type the user-defined version of the function may have.
# 
# 
# vsim Message # 8246:
# The given design-unit was marked as a "black box" with the vopt
# tool, which created an association between it and the given optimized
# design.  However the associated optimized design was not found during
# simulation elaboration.
# 
# 
# vsim Message # 8247:
# 
# 
# vsim Message # 8248:
# 
# 
# vsim Message # 8249:
# 
# 
# vsim Message # 8250:
# No additional information
# 
# vsim Message # 8251:
# 
# 
# vsim Message # 8252:
# Virtual methods that are overridden must match the prototype
# of the superclass exactly
# 
# 
# vsim Message # 8253:
# Virtual methods that are overridden must match the prototype
# of the superclass exactly
# 
# 
# vsim Message # 8254:
# 
# 
# vsim Message # 8255:
# 
# 
# vsim Message # 8256:
# Transaction databases, streams, generators, and attributes should all
# have non-NULL, non-zero length names that are valid C identifiers.
# A valid C identifier is a sequence of letters and digits.
# The first character must be a letter; the underscore '_' counts as a letter.
# Debug features, such as part selection, depend on being able to parse
# names successfully.  C-language names are the safest with
# transactions.
# 
# 
# vsim Message # 8257:
# Transaction attributes should have non-NULL, non-zero length names that are valid C identifiers.
# A valid C identifier is a sequence of letters and digits.
# The first character must be a letter; the underscore '_' counts as a letter.
# Debug features, such as part selection, depend on being able to parse
# names successfully.  C-language names are the safest with
# transactions.
# 
# 
# vsim Message # 8258:
# The given design-unit was marked as a "black box" with the vopt
# tool, which created an association between it and the given optimized
# design.  However unless the entire design has been optimized with vopt,
# usage of an optimized black-box is not currently supported.
# 
# 
# vsim Message # 8259:
# The attribute was overloaded.  This means that the attribute name was used
# to record two different types of data.  This practice is not allowed by this
# version of the simulator.
# 
# 
# vsim Message # 8260:
# The property that describes the original root for the given optimized
# design was missing or invalid, or the root itself could not be found.
# 
# 
# vsim Message # 8261:
# The property that contains the version string for the given optimized
# design was missing or invalid.
# 
# 
# vsim Message # 8262:
# The property that describes the "black box" mapping for a design-unit
# to a corresponding optimized design root is missing or invalid.
# 
# 
# vsim Message # 8263:
# The optimized design "black box" that is associated with the given
# design-unit has been changed and re-optimized with the "vopt" tool.
# The original top-level design needs to be re-optimized in order to
# use the new "black box".
# 
# 
# vsim Message # 8264:
# The given optimized design was directly instantiated, but has multiple
# roots.  Specifying multiple roots for this type of operation does not
# make sense.
# 
# 
# vsim Message # 8265:
# The specified transaction recording API function was passed a bad parameter
# as indicated by the text in the original error message.  You will need to
# correct your design code to fix this problem.
# 
# 
# vsim Message # 8266:
# In the SystemVerilog DPI, only a subset of Verilog scope have the exported
# tasks or functions defined. The user is only allowed to set the scope to
# these scopes using the svSetScope() interface.
# 
# 
# vsim Message # 8267:
# The design cannot be loaded due to previous DPI errors.
# 
# 
# vsim Message # 8268:
# In task/function, every formal must be passed a actual or it must have
#  some default value. Its an error to not pass any actual to a formal
# which has no default value.
# 
# 
# vsim Message # 8269:
# Any function/task can't be passed two actuals for one formal using named or
# position formal passing styles. Its an error to specify multiple actuals for 
# one formal.
# 
# 
# vsim Message # 8270:
# The specified radix is not legal for the specified fillradix.
# 
# 
# vsim Message # 8271:
# The only valid option is 'value'. Options 'inc', 'dec', and 'rand' are invalid.
# 
# 
# vsim Message # 8272:
# The valid value is 'mti'. 'hexadecimal' and 'binary' are not valid.
# 
# 
# vsim Message # 8273:
# A default clocking block must be specified to use the ##n timing statement.
# 
# 
# vsim Message # 8274:
# The element referenced by this virtual interface was not 
# specified in the virtual interface's declaration.
# 
# 
# vsim Message # 8275:
# SystemVerilog assertion of severity 'Error' occurred.
# 
# 
# vsim Message # 8276:
# SystemVerilog assertion of severity 'Error' occurred.
# 
# 
# vsim Message # 8277:
# SystemVerilog assertion of severity 'Warning' occurred.
# 
# 
# vsim Message # 8278:
# SystemVerilog assertion of severity 'Note' occurred.
# 
# 
# vsim Message # 8279:
# PSL assertion occurred.
# 
# 
# vsim Message # 8280:
# PSL assertion occurred.
# 
# 
# vsim Message # 8281:
# Continuous and nonblocking assignments may not assign to an element
# of a dynamic variable
# 
# 
# vsim Message # 8282:
# An actual expression associated with a formal of mode "ref" is required
# to have a matching type.
# 
# 
# vsim Message # 8283:
# IEEE 1364 PLI support requires memories (arrays of packed values) to be 
# represented in a format that is compatible with tf_nodeinfo.  A non-arrayed
# packed value is required to be in vecval format.  Since these formats
# are not compatible,  a select from an array of packed values is not permitted
# with ref formals.
#  
# 
# vsim Message # 8284:
# An actual expression associated with a formal of mode "ref" is not permitted
# to be a select into a packed value.  Such selects include bit and part selects
# into packed values as well as field selects into packed structs and array 
# indexing into packed arrays.
# 
# 
# vsim Message # 8285:
# No additional information
# 
# vsim Message # 8286:
# No additional information
# 
# vsim Message # 8287:
# Obtain a valid transaction database through a call tomti_CreateTransactionDatabase().
# 
# 
# vsim Message # 8289:
# The simulator does not allow writing an attribute to a transaction once
# the transaction has been ended.  Please modify the design.
# 
# 
# vsim Message # 8290:
# The region parameter provided was not one of the following:
#      VHDL architecture or package
#      Verilog module, task, or function
# 
# 
# vsim Message # 8291:
# As per LRM, subroutines with only input or ref arguments can be called in match items.
# 
# 
# vsim Message # 8292:
# No additional information.
# 
# 
# vsim Message # 8293:
# The modelsim.ini file variable PliCompatDefault overrides the tool default
# to determine PLI/VPI object model compatibility in the simulator.
# Note that the System Verilog extensions are available in the 2005 model
# but not in the 2001 model.
# The ability to use the more limited 2001 model may prevent older PLI
# applications from receiving information they do not understand.
# The tool default in the absence of an explicit PliCompatDefault is the
# latest model.
# 
# 
# vsim Message # 8294:
# The $info messges can be printed by setting modelsim.ini variable
# ignoreSVAInfo to 0. This setting can also be changed by changing
# run time options in the GUI.
# 
# 
# vsim Message # 8295:
# The $warning messges can be printed by setting modelsim.ini variable
# ignoreSVAWarning to 0. This setting can also be changed by changing
# run time options in the GUI.
# 
# 
# vsim Message # 8296:
# The $error messges can be printed by setting modelsim.ini variable
# ignoreSVAError to 0. This setting can also be changed by changing
# run time options in the GUI.
# 
# 
# vsim Message # 8297:
# The $fatal messges can be printed by setting modelsim.ini variable
# ignoreSVAFatal to 0. This setting can also be changed by changing
# run time options in the GUI.
# 
# 
# vsim Message # 8298:
# The object registered for custom debug is not supported for debug hence
# the name of the object is not found in the debug database. An explicit
# must be provided for such objects using the SC_MTI_REGISTER_NAMED_CUSTOM_DEBUG
# macro otherwise a name will be generated.
# 
# 
# vsim Message # 8307:
# The transaction recording API requires valid handles to transactions.
# This message indicates an error in the design or code calling the API.
# 
# 
# vsim Message # 8308:
# The transaction recording API restricts the creation of phase transactions
# and phase relations.  These are valid only during the creation of the
# phase transaction via the appropriate syntax for beginning a transaction.
# This message indicates an error in the design or code calling the API.
# 
# vsim Message # 8309:
# A -solveflags argument must use the following form:
#   -solveflags=<flags>
# [DOC: ModelSim Command Reference - vsim command]
# 
# 
# vsim Message # 8310:
# No additional information.
# 
# 
# vsim Message # 8325:
# Please refer to the ModelSim User's Manual for a list of supported
# constructs at the SystemC/Verilog mixed language boundary.
# 
# 
# vsim Message # 8326:
# Please refer to the ModelSim User's Manual for a list of supported
# constructs at the VHDL/Verilog mixed language boundary.
# 
# 
# vsim Message # 8349:
# The specified call to randomize() failed. A testcase based on a simplified
# version of the randomization scenario has been automatically generated and
# can be used to reproduce and/or debug the issue.
# 
verror -all > error.txt
gay
# invalid command name "gay"
